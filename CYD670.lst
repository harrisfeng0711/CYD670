

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jun 05 15:57:54 2014

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F883
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idloc,global,class=IDLOC,delta=2
     6                           	psect	idataBANK0,global,class=CODE,delta=2
     7                           	psect	idataBANK1,global,class=CODE,delta=2
     8                           	psect	strings,global,class=STRING,delta=2
     9                           	psect	cinit,global,class=CODE,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,delta=2
    21                           	psect	swtext1,local,class=CONST,delta=2
    22                           	psect	text930,local,class=CODE,delta=2
    23                           	psect	text931,local,class=CODE,delta=2
    24                           	psect	text932,local,class=CODE,delta=2
    25                           	psect	text935,local,class=CODE,delta=2
    26                           	psect	text955,local,class=CODE,delta=2
    27                           	psect	text956,local,class=CODE,delta=2
    28                           	psect	text964,local,class=CODE,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text969,local,class=CODE,delta=2
    31                           	psect	pa_nodes,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  000A                     	;#
    34                           
    35                           	psect	config
    36  2007  EBC4               	dw	60356	;#
    37                           
    38                           	psect	idloc
    39  2000                     idloc_word:	
    40                           
    41                           ;#
    42  2000  0000               	dw	0	;#
    43  2001  0000               	dw	0	;#
    44  2002  0000               	dw	0	;#
    45  2003  0000               	dw	0	;#
    46                           
    47                           	psect	idataBANK0
    48  0000                     __pidataBANK0:	
    49                           
    50                           	psect	idataBANK1
    51  0000                     __pidataBANK1:	
    52                           
    53                           	psect	strings
    54  0800                     __pstrings:	
    55  0800                     stringtab:	
    56                           ;	global	stringdir,stringtab,__stringbase
    57                           
    58  0800                     stringcode:	
    59                           ;	String table - string pointers are 1 byte each
    60                           
    61  0800                     stringdir:	
    62  0800  3008               	movlw	high stringdir
    63  0801  008A               	movwf	10
    64  0802  0804               	movf	4,w
    65  0803  0A84               	incf	4,f
    66  0804  0782               	addwf	2,f
    67  0805                     __stringbase:	
    68  0805  3400               	retlw	0
    69  0806                     _tabSeg:	
    70  0806  343F               	retlw	63
    71  0807  3409               	retlw	9
    72  0808  345E               	retlw	94
    73  0809  345D               	retlw	93
    74  080A  3469               	retlw	105
    75  080B  3475               	retlw	117
    76  080C  3477               	retlw	119
    77  080D  3419               	retlw	25
    78  080E  347F               	retlw	127
    79  080F  347D               	retlw	125
    80  0810  3400               	retlw	0
    81  0811  3401               	retlw	1
    82  0812  3436               	retlw	54
    83  0813  344F               	retlw	79
    84  0814  3476               	retlw	118
    85  0815  3472               	retlw	114
    86  0816  347A               	retlw	122
    87  0817  346B               	retlw	107
    88  0818  3443               	retlw	67
    89  000E                     _TMR1	set	14
    90  001F                     _ADCON0	set	31
    91  000B                     _INTCON	set	11
    92  0005                     _PORTA	set	5
    93  0006                     _PORTB	set	6
    94  0007                     _PORTC	set	7
    95  0010                     _T1CON	set	16
    96  0012                     _T2CON	set	18
    97  0001                     _TMR0	set	1
    98  000F                     _TMR1H	set	15
    99  000E                     _TMR1L	set	14
   100  0018                     _CARRY	set	24
   101  005F                     _GIE	set	95
   102  005E                     _PEIE	set	94
   103  0028                     _RA0	set	40
   104  0029                     _RA1	set	41
   105  002A                     _RA2	set	42
   106  0030                     _RB0	set	48
   107  0031                     _RB1	set	49
   108  0032                     _RB2	set	50
   109  0034                     _RB4	set	52
   110  0035                     _RB5	set	53
   111  0038                     _RC0	set	56
   112  0039                     _RC1	set	57
   113  003A                     _RC2	set	58
   114  005D                     _T0IE	set	93
   115  005A                     _T0IF	set	90
   116  0060                     _TMR1IF	set	96
   117  0080                     _TMR1ON	set	128
   118  0061                     _TMR2IF	set	97
   119  0092                     _TMR2ON	set	146
   120  009F                     _ADCON1	set	159
   121  0096                     _IOCB	set	150
   122  0081                     _OPTION_REG	set	129
   123  008F                     _OSCCON	set	143
   124  008C                     _PIE1	set	140
   125  0092                     _PR2	set	146
   126  0085                     _TRISA	set	133
   127  0086                     _TRISB	set	134
   128  0087                     _TRISC	set	135
   129  0095                     _WPUB	set	149
   130  047A                     _HTS	set	1146
   131  0460                     _TMR1IE	set	1120
   132  0461                     _TMR2IE	set	1121
   133  0435                     _TRISB5	set	1077
   134  010D                     _EEADR	set	269
   135  010C                     _EEDATA	set	268
   136  0188                     _ANSEL	set	392
   137  0189                     _ANSELH	set	393
   138  018C                     _EECON1	set	396
   139  018D                     _EECON2	set	397
   140  0C60                     _RD	set	3168
   141  0C61                     _WR	set	3169
   142  0C62                     _WREN	set	3170
   143                           
   144                           	psect	cinit
   145  0A6D                     start_initialization:	
   146  0A6D  30A0               	movlw	low __pbssBANK1
   147                           
   148                           ; Clear objects allocated to BITCOMMON
   149  0A6E  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   150  0A6F  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
   151                           
   152                           ; Clear objects allocated to COMMON
   153  0A70  01F9               	clrf	__pbssCOMMON& (0+127)
   154  0A71  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   155  0A72  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   156  0A73  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   157                           
   158                           ; Clear objects allocated to BANK0
   159  0A74  01EB               	clrf	__pbssBANK0& (0+127)
   160  0A75  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   161  0A76  01ED               	clrf	(__pbssBANK0+2)& (0+127)
   162  0A77  01EE               	clrf	(__pbssBANK0+3)& (0+127)
   163                           
   164                           ; Clear objects allocated to BANK1
   165  0A78  1383               	bcf	3,7	;select IRP bank0
   166  0A79  0084               	movwf	4
   167  0A7A  30D9               	movlw	low (__pbssBANK1+57)
   168  0A7B  158A  225A  158A   	fcall	clear_ram
   169  0A7E  3020               	movlw	low __pbssBANK2
   170                           
   171                           ; Clear objects allocated to BANK2
   172  0A7F  1783               	bsf	3,7	;select IRP bank2
   173  0A80  0084               	movwf	4
   174  0A81  3040               	movlw	low (__pbssBANK2+32)
   175  0A82  158A  225A         	fcall	clear_ram
   176                           
   177                           ; Initialize objects allocated to BANK1
   178  0A84  1683               	bsf	3,5	;RP0=1, select bank1
   179                           
   180                           ;initializer for _bTMR1U
   181  0A85  301E               	movlw	30
   182  0A86  00D9               	movwf	__pdataBANK1& (0+127)
   183                           
   184                           ; Initialize objects allocated to BANK0
   185  0A87  1283               	bcf	3,5	;RP0=0, select bank0
   186                           
   187                           ;initializer for _bKeyData
   188  0A88  30FF               	movlw	255
   189  0A89  00EF               	movwf	__pdataBANK0& (0+127)
   190  0A8A                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193  0A8A  0183               	clrf	3
   194  0A8B  158A  2B29         	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bitbssCOMMON
   197  0380                     __pbitbssCOMMON:	
   198  0380                     _f10ms:	
   199  0380                     	ds	1
   200  0381                     _fCalFlow:	
   201  0381                     	ds	1
   202  0382                     _fCapInit:	
   203  0382                     	ds	1
   204  0383                     _fErr:	
   205  0383                     	ds	1
   206  0384                     _fFirstLoad:	
   207  0384                     	ds	1
   208  0385                     _fFlash:	
   209  0385                     	ds	1
   210  0386                     _fKeyPress:	
   211  0386                     	ds	1
   212  0387                     _fRunWash:	
   213  0387                     	ds	1
   214  0388                     _fSaveEE:	
   215  0388                     	ds	1
   216                           
   217                           	psect	bssCOMMON
   218  0079                     __pbssCOMMON:	
   219  0079                     _bSetTmp:	
   220  0079                     	ds	4
   221                           
   222                           	psect	bssBANK0
   223  006B                     __pbssBANK0:	
   224  006B                     _bRunCnt:	
   225  006B                     	ds	1
   226  006C                     _bRunMode:	
   227  006C                     	ds	1
   228  006D                     _bRunStep:	
   229  006D                     	ds	1
   230  006E                     _bTestCnt:	
   231  006E                     	ds	1
   232                           
   233                           	psect	dataBANK0
   234  006F                     __pdataBANK0:	
   235  006F                     _bKeyData:	
   236  006F                     	ds	1
   237                           
   238                           	psect	bssBANK1
   239  00A0                     __pbssBANK1:	
   240  00A0                     _arrFlow2:	
   241  00A0                     	ds	16
   242  00B0                     _wSum:	
   243  00B0                     	ds	4
   244  00B4                     _wTestPulseCnt:	
   245  00B4                     	ds	2
   246  00B6                     _wWFlow:	
   247  00B6                     	ds	2
   248  00B8                     _b10ms:	
   249  00B8                     	ds	1
   250  00B9                     _b1s:	
   251  00B9                     	ds	1
   252  00BA                     _b50ms:	
   253  00BA                     	ds	1
   254  00BB                     _bCapT0:	
   255  00BB                     	ds	1
   256  00BC                     _bCapT1:	
   257  00BC                     	ds	1
   258  00BD                     _bCapT2:	
   259  00BD                     	ds	1
   260  00BE                     _bFilterCnt:	
   261  00BE                     	ds	1
   262  00BF                     _bFlashCnt:	
   263  00BF                     	ds	1
   264  00C0                     _bFlowIdx:	
   265  00C0                     	ds	1
   266  00C1                     _bFlowIdx2:	
   267  00C1                     	ds	1
   268  00C2                     _bHour:	
   269  00C2                     	ds	1
   270  00C3                     _bKeyCnt:	
   271  00C3                     	ds	1
   272  00C4                     _bKeyHTCnt:	
   273  00C4                     	ds	1
   274  00C5                     _bKeyOld:	
   275  00C5                     	ds	1
   276  00C6                     _bLed:	
   277  00C6                     	ds	1
   278  00C7                     _bMin:	
   279  00C7                     	ds	1
   280  00C8                     _bPulseCnt:	
   281  00C8                     	ds	1
   282  00C9                     _bRunWashStep:	
   283  00C9                     	ds	1
   284  00CA                     _bRunWashT:	
   285  00CA                     	ds	1
   286  00CB                     _bSaveEECnt:	
   287  00CB                     	ds	1
   288  00CC                     _bScanCnt:	
   289  00CC                     	ds	1
   290  00CD                     _bSec:	
   291  00CD                     	ds	1
   292  00CE                     _bSeg0:	
   293  00CE                     	ds	1
   294  00CF                     _bSeg1:	
   295  00CF                     	ds	1
   296  00D0                     _bSeg2:	
   297  00D0                     	ds	1
   298  00D1                     _bTBCnt:	
   299  00D1                     	ds	1
   300  00D2                     _EE_DATA:	
   301  00D2                     	ds	7
   302                           
   303                           	psect	dataBANK1
   304  00D9                     __pdataBANK1:	
   305  00D9                     _bTMR1U:	
   306  00D9                     	ds	1
   307                           
   308                           	psect	bssBANK2
   309  0120                     __pbssBANK2:	
   310  0120                     _arrFlow:	
   311  0120                     	ds	32
   312                           
   313                           	psect	clrtext
   314  0A5A                     clear_ram:	
   315                           ;	Called with FSR containing the base address, and
   316                           ;	W with the last address+1
   317                           
   318  0A5A  0064               	clrwdt	;clear the watchdog before getting into this loop
   319  0A5B                     clrloop:	
   320  0A5B  0180               	clrf	0	;clear RAM location pointed to by FSR
   321  0A5C  0A84               	incf	4,f	;increment pointer
   322  0A5D  0604               	xorwf	4,w	;XOR with final address
   323  0A5E  1903               	btfsc	3,2	;have we reached the end yet?
   324  0A5F  3400               	retlw	0	;all done for this memory range, return
   325  0A60  0604               	xorwf	4,w	;XOR again to restore value
   326  0A61  2A5B               	goto	clrloop	;do the next byte
   327                           
   328                           	psect	cstackCOMMON
   329  0072                     __pcstackCOMMON:	
   330  0072                     ??_pReadKey:	
   331  0072                     ?_pInitAD:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0072                     ?_pInitPORT:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0072                     ?_pInitT0:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0072                     ?_pInitT1:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0072                     ?_pInitT2:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0072                     ?_pReadEE:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0072                     ?_pTestMode:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0072                     ?_pKeyProc:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0072                     ?_pFlashTimeCtl:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0072                     ?_pEESaveTimeCtl:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0072                     ?_pDispProc:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0072                     ?_pWashFlow:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0072                     ?_pCalWaterFlow:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0072                     ?_pTimeProc:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0072                     ?_pSwitchMode:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0072                     ?_pRunStep:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0072                     ?_pReLoadTime:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0072                     ?_pTuneHour:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0072                     ?_pTuneMin:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0072                     ?_pRunWashFlow:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0072                     ?_pScanDisp:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0072                     ??_pScanDisp:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0072                     ?_pClrDisp:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0072                     ?_pScanKey:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0072                     ?_pInitMCU:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0072                     ?_isr:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0072                     ?_main:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0072                     ?_pReadKey:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0072                     ?_key_press:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0072                     ?_eeprom_read:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0072                     ?i1_eeprom_write:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0072                     pReadKey@buf:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0072                     i1eeprom_write@value:	
   428                           ; 1 bytes @ 0x0
   429                           
   430                           
   431                           ; 1 bytes @ 0x0
   432  0072                     	ds	1
   433  0073                     ??i1_eeprom_write:	
   434  0073                     pReadKey@tmp:	
   435                           ; 0 bytes @ 0x1
   436                           
   437  0073                     i1eeprom_write@addr:	
   438                           ; 1 bytes @ 0x1
   439                           
   440                           
   441                           ; 1 bytes @ 0x1
   442  0073                     	ds	1
   443  0074                     pReadKey@i:	
   444                           
   445                           ; 1 bytes @ 0x2
   446  0074                     	ds	1
   447  0075                     ??_pScanKey:	
   448  0075                     pScanKey@bKeyBuf:	
   449                           ; 0 bytes @ 0x3
   450                           
   451                           
   452                           ; 1 bytes @ 0x3
   453  0075                     	ds	1
   454  0076                     ??_isr:	
   455                           
   456                           ; 0 bytes @ 0x4
   457  0076                     	ds	3
   458                           
   459                           	psect	cstackBANK0
   460  0020                     __pcstackBANK0:	
   461  0020                     ??_pInitAD:	
   462  0020                     ??_pInitPORT:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0020                     ??_pInitT0:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0020                     ??_pInitT1:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0020                     ??_pInitT2:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0020                     ??_pFlashTimeCtl:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0020                     ??_pEESaveTimeCtl:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0020                     ??_pWashFlow:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     ??_pSwitchMode:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0020                     ??_pRunStep:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0020                     ??_pReLoadTime:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0020                     ??_pTuneHour:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0020                     ??_pTuneMin:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0020                     ??_pRunWashFlow:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0020                     ?_eecpymem:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0020                     ?_memcpyee:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ??_key_press:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ??_eeprom_read:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0020                     ??_pClrDisp:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0020                     ??_pInitMCU:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0020                     ?_eeprom_write:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0020                     ?___lbdiv:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0020                     ?___lbmod:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0020                     ?_filter:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0020                     ?___wmul:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0020                     ?___lwdiv:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0020                     ?___lwmod:	
   538                           ; 2 bytes @ 0x0
   539                           
   540  0020                     ?___llmod:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0020                     ?___lldiv:	
   544                           ; 4 bytes @ 0x0
   545                           
   546  0020                     pSwitchMode@mod:	
   547                           ; 4 bytes @ 0x0
   548                           
   549  0020                     pRunStep@step:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0020                     eeprom_read@addr:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0020                     eeprom_write@value:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0020                     ___lbdiv@divisor:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0020                     ___lbmod@divisor:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0020                     eecpymem@from:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     memcpyee@to:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0020                     ___wmul@multiplier:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0020                     ___lwdiv@divisor:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0020                     ___lwmod@divisor:	
   577                           ; 2 bytes @ 0x0
   578                           
   579  0020                     ___llmod@divisor:	
   580                           ; 2 bytes @ 0x0
   581                           
   582  0020                     ___lldiv@divisor:	
   583                           ; 4 bytes @ 0x0
   584                           
   585                           
   586                           ; 4 bytes @ 0x0
   587  0020                     	ds	1
   588  0021                     ??_eeprom_write:	
   589  0021                     ??___lbdiv:	
   590                           ; 0 bytes @ 0x1
   591                           
   592  0021                     ??___lbmod:	
   593                           ; 0 bytes @ 0x1
   594                           
   595  0021                     eeprom_write@addr:	
   596                           ; 0 bytes @ 0x1
   597                           
   598  0021                     ___lbdiv@dividend:	
   599                           ; 1 bytes @ 0x1
   600                           
   601                           
   602                           ; 1 bytes @ 0x1
   603  0021                     	ds	1
   604  0022                     ??_pKeyProc:	
   605  0022                     ??_filter:	
   606                           ; 0 bytes @ 0x2
   607                           
   608  0022                     eecpymem@size:	
   609                           ; 0 bytes @ 0x2
   610                           
   611  0022                     memcpyee@from:	
   612                           ; 1 bytes @ 0x2
   613                           
   614  0022                     ___lbdiv@counter:	
   615                           ; 1 bytes @ 0x2
   616                           
   617  0022                     ___lbmod@dividend:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  0022                     ___wmul@multiplicand:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0022                     ___lwdiv@dividend:	
   624                           ; 2 bytes @ 0x2
   625                           
   626  0022                     ___lwmod@dividend:	
   627                           ; 2 bytes @ 0x2
   628                           
   629                           
   630                           ; 2 bytes @ 0x2
   631  0022                     	ds	1
   632  0023                     ??_eecpymem:	
   633  0023                     eecpymem@to:	
   634                           ; 0 bytes @ 0x3
   635                           
   636  0023                     memcpyee@size:	
   637                           ; 1 bytes @ 0x3
   638                           
   639  0023                     ___lbdiv@quotient:	
   640                           ; 1 bytes @ 0x3
   641                           
   642  0023                     ___lbmod@counter:	
   643                           ; 1 bytes @ 0x3
   644                           
   645                           
   646                           ; 1 bytes @ 0x3
   647  0023                     	ds	1
   648  0024                     ??_memcpyee:	
   649  0024                     ??___wmul:	
   650                           ; 0 bytes @ 0x4
   651                           
   652  0024                     ??___lwdiv:	
   653                           ; 0 bytes @ 0x4
   654                           
   655  0024                     ??___lwmod:	
   656                           ; 0 bytes @ 0x4
   657                           
   658  0024                     eecpymem@cp:	
   659                           ; 0 bytes @ 0x4
   660                           
   661  0024                     memcpyee@ptr:	
   662                           ; 1 bytes @ 0x4
   663                           
   664  0024                     ___lwmod@counter:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0024                     ___lbmod@rem:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0024                     ___wmul@product:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0024                     ___lwdiv@quotient:	
   674                           ; 2 bytes @ 0x4
   675                           
   676  0024                     ___llmod@dividend:	
   677                           ; 2 bytes @ 0x4
   678                           
   679  0024                     ___lldiv@dividend:	
   680                           ; 4 bytes @ 0x4
   681                           
   682                           
   683                           ; 4 bytes @ 0x4
   684  0024                     	ds	1
   685  0025                     ??_pReadEE:	
   686                           
   687                           ; 0 bytes @ 0x5
   688  0025                     	ds	1
   689  0026                     ___lwdiv@counter:	
   690                           
   691                           ; 1 bytes @ 0x6
   692  0026                     	ds	1
   693  0027                     ??_pTimeProc:	
   694  0027                     ?_pConDisp:	
   695                           ; 0 bytes @ 0x7
   696                           
   697  0027                     pConDisp@dat:	
   698                           ; 0 bytes @ 0x7
   699                           
   700  0027                     pTimeProc@tmp:	
   701                           ; 2 bytes @ 0x7
   702                           
   703                           
   704                           ; 2 bytes @ 0x7
   705  0027                     	ds	1
   706  0028                     ??___llmod:	
   707  0028                     ??___lldiv:	
   708                           ; 0 bytes @ 0x8
   709                           
   710  0028                     ___llmod@counter:	
   711                           ; 0 bytes @ 0x8
   712                           
   713  0028                     ___lldiv@quotient:	
   714                           ; 1 bytes @ 0x8
   715                           
   716  0028                     filter@value_buf:	
   717                           ; 4 bytes @ 0x8
   718                           
   719                           
   720                           ; 32 bytes @ 0x8
   721  0028                     	ds	1
   722  0029                     pConDisp@dot:	
   723                           
   724                           ; 1 bytes @ 0x9
   725  0029                     	ds	1
   726  002A                     ??_pConDisp:	
   727  002A                     pConDisp@s0:	
   728                           ; 0 bytes @ 0xA
   729                           
   730                           
   731                           ; 1 bytes @ 0xA
   732  002A                     	ds	1
   733  002B                     pConDisp@s1:	
   734                           
   735                           ; 1 bytes @ 0xB
   736  002B                     	ds	1
   737  002C                     pConDisp@s2:	
   738  002C                     ___lldiv@counter:	
   739                           ; 1 bytes @ 0xC
   740                           
   741                           
   742                           ; 1 bytes @ 0xC
   743  002C                     	ds	1
   744  002D                     ?_pConLiter:	
   745  002D                     pConLiter@dat:	
   746                           ; 0 bytes @ 0xD
   747                           
   748                           
   749                           ; 4 bytes @ 0xD
   750  002D                     	ds	4
   751  0031                     pConLiter@part:	
   752                           
   753                           ; 1 bytes @ 0x11
   754  0031                     	ds	1
   755  0032                     ??_pConLiter:	
   756  0032                     pConLiter@s0:	
   757                           ; 0 bytes @ 0x12
   758                           
   759                           
   760                           ; 1 bytes @ 0x12
   761  0032                     	ds	1
   762  0033                     pConLiter@s1:	
   763                           
   764                           ; 1 bytes @ 0x13
   765  0033                     	ds	1
   766  0034                     pConLiter@s2:	
   767                           
   768                           ; 1 bytes @ 0x14
   769  0034                     	ds	1
   770  0035                     ??_pDispProc:	
   771  0035                     pDispProc@s2:	
   772                           ; 0 bytes @ 0x15
   773                           
   774                           
   775                           ; 1 bytes @ 0x15
   776  0035                     	ds	1
   777  0036                     pDispProc@s0:	
   778                           
   779                           ; 1 bytes @ 0x16
   780  0036                     	ds	1
   781  0037                     pDispProc@s1:	
   782                           
   783                           ; 1 bytes @ 0x17
   784  0037                     	ds	17
   785  0048                     filter@tmp:	
   786                           
   787                           ; 4 bytes @ 0x28
   788  0048                     	ds	4
   789  004C                     filter@ptArr:	
   790                           
   791                           ; 1 bytes @ 0x2C
   792  004C                     	ds	1
   793  004D                     filter@sum:	
   794                           
   795                           ; 4 bytes @ 0x2D
   796  004D                     	ds	4
   797  0051                     filter@j:	
   798                           
   799                           ; 1 bytes @ 0x31
   800  0051                     	ds	1
   801  0052                     filter@i:	
   802                           
   803                           ; 1 bytes @ 0x32
   804  0052                     	ds	1
   805  0053                     ??_pCalWaterFlow:	
   806                           
   807                           ; 0 bytes @ 0x33
   808  0053                     	ds	12
   809  005F                     pCalWaterFlow@diff:	
   810                           
   811                           ; 2 bytes @ 0x3F
   812  005F                     	ds	2
   813  0061                     pCalWaterFlow@tmp:	
   814                           
   815                           ; 4 bytes @ 0x41
   816  0061                     	ds	4
   817  0065                     pCalWaterFlow@i:	
   818                           
   819                           ; 1 bytes @ 0x45
   820  0065                     	ds	1
   821  0066                     pCalWaterFlow@val:	
   822                           
   823                           ; 4 bytes @ 0x46
   824  0066                     	ds	4
   825  006A                     ??_pTestMode:	
   826  006A                     pTestMode@stat:	
   827                           ; 0 bytes @ 0x4A
   828                           
   829                           
   830                           ; 1 bytes @ 0x4A
   831  006A                     	ds	1
   832  006B                     ??_main:	
   833                           
   834                           	psect	maintext
   835  0B29                     __pmaintext:	
   836                           ; 0 bytes @ 0x4B
   837 ;;Data sizes: Strings 0, constant 19, data 2, bss 97, persistent 0 stack 0
   838 ;;Auto spaces:   Size  Autos    Used
   839 ;; COMMON          14      7      13
   840 ;; BANK0           80     75      80
   841 ;; BANK1           80      0      58
   842 ;; BANK2           80      0      32
   843 ;;
   844 ;; Pointer list with targets:
   845 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   846 ;;
   847 ;; ?_filter	unsigned short  size(1) Largest target is 0
   848 ;;
   849 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   850 ;;
   851 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   852 ;;
   853 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   854 ;;
   855 ;; ?___lwmod	unsigned int  size(1) Largest target is 4
   856 ;;		 -> pCalWaterFlow@tmp(BANK0[4]), 
   857 ;;
   858 ;; memcpyee@to	PTR eeprom unsigned char  size(2) Largest target is 512
   859 ;;		 -> RAM(DATA[512]), 
   860 ;;
   861 ;; memcpyee@from	PTR const unsigned char  size(1) Largest target is 7
   862 ;;		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
   863 ;;		 -> __itoee@data(COMMON[2]), __ctoee@data(COMMON[1]), EE_DATA(BANK1[7]), 
   864 ;;
   865 ;; memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 7
   866 ;;		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
   867 ;;		 -> __itoee@data(COMMON[2]), __ctoee@data(COMMON[1]), EE_DATA(BANK1[7]), 
   868 ;;
   869 ;; eecpymem@from	PTR eeprom unsigned char  size(2) Largest target is 512
   870 ;;		 -> RAM(DATA[512]), 
   871 ;;
   872 ;; eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 7
   873 ;;		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
   874 ;;		 -> __eetoi@data(COMMON[2]), __eetoc@data(COMMON[1]), EE_DATA(BANK1[7]), 
   875 ;;
   876 ;; eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 7
   877 ;;		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
   878 ;;		 -> __eetoi@data(COMMON[2]), __eetoc@data(COMMON[1]), EE_DATA(BANK1[7]), 
   879 ;;
   880 ;; filter@ptArr	PTR unsigned short  size(1) Largest target is 32
   881 ;;		 -> arrFlow(BANK2[32]), 
   882 ;;
   883 ;;
   884 ;; Critical Paths under _main in COMMON
   885 ;;
   886 ;;   None.
   887 ;;
   888 ;; Critical Paths under _isr in COMMON
   889 ;;
   890 ;;   _isr->_pScanKey
   891 ;;   _pScanKey->_pReadKey
   892 ;;
   893 ;; Critical Paths under _main in BANK0
   894 ;;
   895 ;;   _main->_pTestMode
   896 ;;   _pDispProc->_pConLiter
   897 ;;   _pTestMode->_pCalWaterFlow
   898 ;;   _pConLiter->___lldiv
   899 ;;   _pTimeProc->___lwdiv
   900 ;;   _pCalWaterFlow->_filter
   901 ;;   _pKeyProc->_eeprom_write
   902 ;;   _pReadEE->_eecpymem
   903 ;;   _pReadEE->_memcpyee
   904 ;;   _pConDisp->___lwdiv
   905 ;;
   906 ;; Critical Paths under _isr in BANK0
   907 ;;
   908 ;;   None.
   909 ;;
   910 ;; Critical Paths under _main in BANK1
   911 ;;
   912 ;;   None.
   913 ;;
   914 ;; Critical Paths under _isr in BANK1
   915 ;;
   916 ;;   None.
   917 ;;
   918 ;; Critical Paths under _main in BANK2
   919 ;;
   920 ;;   None.
   921 ;;
   922 ;; Critical Paths under _isr in BANK2
   923 ;;
   924 ;;   None.
   925 ;;
   926 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   927 ;;
   928 ;;
   929 ;;Call Graph Tables:
   930 ;;
   931 ;; ---------------------------------------------------------------------------------
   932 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (0) _main                                                 0     0      0    6910
   935 ;;                           _pInitMCU
   936 ;;                           _pClrDisp
   937 ;;                            _pReadEE
   938 ;;                          _pTestMode
   939 ;;                           _pKeyProc
   940 ;;                      _pFlashTimeCtl
   941 ;;                     _pEESaveTimeCtl
   942 ;;                          _pDispProc
   943 ;;                          _pWashFlow
   944 ;;                      _pCalWaterFlow
   945 ;;                          _pTimeProc
   946 ;; ---------------------------------------------------------------------------------
   947 ;; (1) _pDispProc                                            3     3      0    1936
   948 ;;                                             21 BANK0      3     3      0
   949 ;;                           _pConDisp
   950 ;;                           _pRunStep
   951 ;;                            ___lldiv
   952 ;;                            ___llmod
   953 ;;                        _pSwitchMode
   954 ;;                            ___lbdiv
   955 ;;                            ___lbmod
   956 ;;                          _pConLiter
   957 ;; ---------------------------------------------------------------------------------
   958 ;; (1) _pTestMode                                            1     1      0    2772
   959 ;;                                             74 BANK0      1     1      0
   960 ;;                          _key_press
   961 ;;                          _pConLiter
   962 ;;                           _pClrDisp
   963 ;;                           _pConDisp
   964 ;;                      _pCalWaterFlow
   965 ;;                       _eeprom_write
   966 ;;                        _eeprom_read
   967 ;;                           _eecpymem
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (2) _pConLiter                                            8     3      5     569
   970 ;;                                             13 BANK0      8     3      5
   971 ;;                            ___lldiv
   972 ;;                            ___llmod
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (1) _pTimeProc                                            2     2      0     460
   975 ;;                                              7 BANK0      2     2      0
   976 ;;                             ___wmul
   977 ;;                            ___lwdiv
   978 ;;                            ___lwmod
   979 ;;                        _pReLoadTime
   980 ;;                       _pRunWashFlow
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (1) _pCalWaterFlow                                       23    23      0    1468
   983 ;;                                             51 BANK0     23    23      0
   984 ;;                            ___lldiv
   985 ;;                             _filter
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (1) _pWashFlow                                            0     0      0       0
   988 ;;                        _pReLoadTime
   989 ;; ---------------------------------------------------------------------------------
   990 ;; (1) _pKeyProc                                             4     4      0      94
   991 ;;                                              2 BANK0      4     4      0
   992 ;;                        _pSwitchMode
   993 ;;                       _eeprom_write
   994 ;;                           _pRunStep
   995 ;;                        _pReLoadTime
   996 ;;                          _pTuneHour
   997 ;;                           _pTuneMin
   998 ;;                       _pRunWashFlow
   999 ;; ---------------------------------------------------------------------------------
  1000 ;; (1) _pReadEE                                              0     0      0     180
  1001 ;;                           _eecpymem
  1002 ;;                           _memcpyee
  1003 ;;                        _pReLoadTime
  1004 ;; ---------------------------------------------------------------------------------
  1005 ;; (1) _pInitMCU                                             0     0      0       0
  1006 ;;                            _pInitAD
  1007 ;;                          _pInitPORT
  1008 ;;                            _pInitT0
  1009 ;;                            _pInitT1
  1010 ;;                            _pInitT2
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (2) _pConDisp                                             6     3      3     501
  1013 ;;                                              7 BANK0      6     3      3
  1014 ;;                            ___lwmod
  1015 ;;                            ___lwdiv
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; (2) ___lldiv                                             13     5      8     162
  1018 ;;                                              0 BANK0     13     5      8
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (3) ___llmod                                              9     1      8     159
  1021 ;;                                              0 BANK0      9     1      8
  1022 ;; ---------------------------------------------------------------------------------
  1023 ;; (2) ___lbmod                                              5     4      1     159
  1024 ;;                                              0 BANK0      5     4      1
  1025 ;; ---------------------------------------------------------------------------------
  1026 ;; (2) ___lbdiv                                              4     3      1     162
  1027 ;;                                              0 BANK0      4     3      1
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (2) ___lwmod                                              5     1      4     159
  1030 ;;                                              0 BANK0      5     1      4
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (2) ___lwdiv                                              7     3      4     162
  1033 ;;                                              0 BANK0      7     3      4
  1034 ;; ---------------------------------------------------------------------------------
  1035 ;; (2) ___wmul                                               6     2      4      92
  1036 ;;                                              0 BANK0      6     2      4
  1037 ;; ---------------------------------------------------------------------------------
  1038 ;; (2) _eeprom_read                                          1     1      0      22
  1039 ;;                                              0 BANK0      1     1      0
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (2) _key_press                                            0     0      0       0
  1042 ;; ---------------------------------------------------------------------------------
  1043 ;; (2) _memcpyee                                             5     1      4      90
  1044 ;;                                              0 BANK0      5     1      4
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (2) _eecpymem                                             5     2      3      90
  1047 ;;                                              0 BANK0      5     2      3
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (2) _filter                                              51    49      2     640
  1050 ;;                                              0 BANK0     51    49      2
  1051 ;; ---------------------------------------------------------------------------------
  1052 ;; (2) _pRunWashFlow                                         0     0      0       0
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (2) _pTuneMin                                             0     0      0       0
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (2) _pTuneHour                                            0     0      0       0
  1057 ;; ---------------------------------------------------------------------------------
  1058 ;; (2) _pReLoadTime                                          0     0      0       0
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (2) _pRunStep                                             1     1      0      22
  1061 ;;                                              0 BANK0      1     1      0
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (2) _pSwitchMode                                          1     1      0      22
  1064 ;;                                              0 BANK0      1     1      0
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (1) _pEESaveTimeCtl                                       0     0      0       0
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (1) _pFlashTimeCtl                                        0     0      0       0
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; (2) _eeprom_write                                         2     1      1      50
  1071 ;;                                              0 BANK0      2     1      1
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (2) _pInitT2                                              0     0      0       0
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (2) _pInitT1                                              0     0      0       0
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (2) _pInitT0                                              0     0      0       0
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (2) _pInitPORT                                            0     0      0       0
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (2) _pInitAD                                              0     0      0       0
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (2) _pClrDisp                                             0     0      0       0
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; Estimated maximum stack depth 3
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1088 ;; ---------------------------------------------------------------------------------
  1089 ;; (4) _isr                                                  3     3      0     353
  1090 ;;                                              4 COMMON     3     3      0
  1091 ;;                     i1_eeprom_write
  1092 ;;                           _pScanKey
  1093 ;;                          _pScanDisp
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (5) _pScanKey                                             1     1      0     185
  1096 ;;                                              3 COMMON     1     1      0
  1097 ;;                           _pReadKey
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (5) i1_eeprom_write                                       2     1      1     168
  1100 ;;                                              0 COMMON     2     1      1
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; (6) _pReadKey                                             3     3      0     140
  1103 ;;                                              0 COMMON     3     3      0
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (5) _pScanDisp                                            0     0      0       0
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; Estimated maximum stack depth 6
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; Call Graph Graphs:
  1110 ;; _main (ROOT)
  1111 ;;   _pInitMCU
  1112 ;;     _pInitAD
  1113 ;;     _pInitPORT
  1114 ;;     _pInitT0
  1115 ;;     _pInitT1
  1116 ;;     _pInitT2
  1117 ;;   _pClrDisp
  1118 ;;   _pReadEE
  1119 ;;     _eecpymem
  1120 ;;     _memcpyee
  1121 ;;     _pReLoadTime
  1122 ;;   _pTestMode
  1123 ;;     _key_press
  1124 ;;     _pConLiter
  1125 ;;       ___lldiv
  1126 ;;       ___llmod
  1127 ;;     _pClrDisp
  1128 ;;     _pConDisp
  1129 ;;       ___lwmod
  1130 ;;       ___lwdiv
  1131 ;;     _pCalWaterFlow
  1132 ;;       ___lldiv
  1133 ;;       _filter
  1134 ;;     _eeprom_write
  1135 ;;     _eeprom_read
  1136 ;;     _eecpymem
  1137 ;;   _pKeyProc
  1138 ;;     _pSwitchMode
  1139 ;;     _eeprom_write
  1140 ;;     _pRunStep
  1141 ;;     _pReLoadTime
  1142 ;;     _pTuneHour
  1143 ;;     _pTuneMin
  1144 ;;     _pRunWashFlow
  1145 ;;   _pFlashTimeCtl
  1146 ;;   _pEESaveTimeCtl
  1147 ;;   _pDispProc
  1148 ;;     _pConDisp
  1149 ;;       ___lwmod
  1150 ;;       ___lwdiv
  1151 ;;     _pRunStep
  1152 ;;     ___lldiv
  1153 ;;     ___llmod
  1154 ;;     _pSwitchMode
  1155 ;;     ___lbdiv
  1156 ;;     ___lbmod
  1157 ;;     _pConLiter
  1158 ;;       ___lldiv
  1159 ;;       ___llmod
  1160 ;;   _pWashFlow
  1161 ;;     _pReLoadTime
  1162 ;;   _pCalWaterFlow
  1163 ;;     ___lldiv
  1164 ;;     _filter
  1165 ;;   _pTimeProc
  1166 ;;     ___wmul
  1167 ;;     ___lwdiv
  1168 ;;     ___lwmod
  1169 ;;     _pReLoadTime
  1170 ;;     _pRunWashFlow
  1171 ;;
  1172 ;; _isr (ROOT)
  1173 ;;   i1_eeprom_write
  1174 ;;   _pScanKey
  1175 ;;     _pReadKey
  1176 ;;   _pScanDisp
  1177 ;;
  1178 ;; Address spaces:
  1179 ;;Name               Size   Autos  Total    Cost      Usage
  1180 ;;SFR3                 0      0       0       4        0.0%
  1181 ;;BITSFR3              0      0       0       4        0.0%
  1182 ;;BANK2               50      0      20       7       40.0%
  1183 ;;BITBANK2            50      0       0       6        0.0%
  1184 ;;SFR2                 0      0       0       5        0.0%
  1185 ;;BITSFR2              0      0       0       5        0.0%
  1186 ;;SFR1                 0      0       0       2        0.0%
  1187 ;;BITSFR1              0      0       0       2        0.0%
  1188 ;;BANK1               50      0      3A       5       72.5%
  1189 ;;BITBANK1            50      0       0       4        0.0%
  1190 ;;CODE                 0      0       0       0        0.0%
  1191 ;;DATA                 0      0      C0      10        0.0%
  1192 ;;ABS                  0      0      B7       8        0.0%
  1193 ;;NULL                 0      0       0       0        0.0%
  1194 ;;STACK                0      0       9       2        0.0%
  1195 ;;BANK0               50     4B      50       3      100.0%
  1196 ;;BITBANK0            50      0       0       9        0.0%
  1197 ;;SFR0                 0      0       0       1        0.0%
  1198 ;;BITSFR0              0      0       0       1        0.0%
  1199 ;;COMMON               E      7       D       1       92.9%
  1200 ;;BITCOMMON            E      0       2       0       14.3%
  1201 ;;EEDATA             100      0       0       0        0.0%
  1202                           
  1203                           
  1204 ;; *************** function _main *****************
  1205 ;; Defined at:
  1206 ;;		line 290 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;		None               void
  1213 ;; Registers used:
  1214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 17F/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: FFE00/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1220 ;;      Params:         0       0       0       0
  1221 ;;      Locals:         0       0       0       0
  1222 ;;      Temps:          0       0       0       0
  1223 ;;      Totals:         0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels required when called:    6
  1226 ;; This function calls:
  1227 ;;		_pInitMCU
  1228 ;;		_pClrDisp
  1229 ;;		_pReadEE
  1230 ;;		_pTestMode
  1231 ;;		_pKeyProc
  1232 ;;		_pFlashTimeCtl
  1233 ;;		_pEESaveTimeCtl
  1234 ;;		_pDispProc
  1235 ;;		_pWashFlow
  1236 ;;		_pCalWaterFlow
  1237 ;;		_pTimeProc
  1238 ;; This function is called by:
  1239 ;;		Startup code after reset
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242  0B29                     _main:	
  1243                           
  1244                           ;main.c: 291: pInitMCU();
  1245                           
  1246                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1247  0B29  158A  228D  158A   	fcall	_pInitMCU
  1248                           
  1249                           ;main.c: 292: pClrDisp();
  1250  0B2C  118A  24C0  158A   	fcall	_pClrDisp
  1251                           
  1252                           ;main.c: 295: fSaveEE=1;
  1253  0B2F  1471               	bsf	_fSaveEE/(0+8),_fSaveEE& (0+7)
  1254                           
  1255                           ;main.c: 296: pReadEE();
  1256  0B30  118A  203C  158A   	fcall	_pReadEE
  1257                           
  1258                           ;main.c: 299: TMR2ON = 1;
  1259  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0B34  300A               	movlw	10
  1261  0B35  1512               	bsf	18,2
  1262                           
  1263                           ;main.c: 300: GIE = 1;
  1264  0B36  178B               	bsf	11,7
  1265                           
  1266                           ;main.c: 302: bTBCnt=10;
  1267  0B37  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0B38  00D1               	movwf	_bTBCnt^(0+128)
  1269  0B39                     l11733:	
  1270                           
  1271                           ;main.c: 304: {
  1272                           ;main.c: 305: if (f10ms)
  1273  0B39  1C70               	btfss	_f10ms/(0+8),_f10ms& (0+7)
  1274  0B3A  2B42               	goto	l11741
  1275  0B3B  30F6               	movlw	246
  1276                           
  1277                           ;main.c: 306: {
  1278                           ;main.c: 307: f10ms=0;
  1279  0B3C  1070               	bcf	_f10ms/(0+8),_f10ms& (0+7)
  1280                           
  1281                           ;main.c: 308: T0IF=0;
  1282  0B3D  110B               	bcf	11,2
  1283                           
  1284                           ;main.c: 309: TMR0=246;
  1285  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0B3F  0081               	movwf	1	;volatile
  1287                           
  1288                           ;main.c: 310: bTBCnt--;
  1289  0B40  1683               	bsf	3,5	;RP0=1, select bank1
  1290  0B41  03D1               	decf	_bTBCnt^(0+128),f
  1291  0B42                     l11741:	
  1292                           
  1293                           ;main.c: 311: }
  1294                           ;main.c: 312: } while(bTBCnt);
  1295  0B42  08D1               	movf	_bTBCnt^(0+128),f
  1296  0B43  1D03               	skipz
  1297  0B44  2B39               	goto	l11733
  1298                           
  1299                           ;main.c: 315: if (!bKeyData.bits.b2 && !bKeyData.bits.b0)
  1300  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0B46  1D6F               	btfss	_bKeyData,2
  1302  0B47  186F               	btfsc	_bKeyData,0
  1303  0B48  2B4C               	goto	l11747
  1304                           
  1305                           ;main.c: 316: pTestMode();
  1306  0B49  118A  2335  158A   	fcall	_pTestMode
  1307  0B4C                     l11747:	
  1308                           
  1309                           ;main.c: 321: bRunCnt=0;
  1310  0B4C  01EB               	clrf	_bRunCnt
  1311                           
  1312                           ;main.c: 322: bTestCnt=0;
  1313  0B4D  01EE               	clrf	_bTestCnt
  1314  0B4E                     l11751:	
  1315                           
  1316                           ;main.c: 325: {
  1317                           ;main.c: 326: if (f10ms)
  1318  0B4E  1C70               	btfss	_f10ms/(0+8),_f10ms& (0+7)
  1319  0B4F  2B76               	goto	l11763
  1320                           
  1321                           ;main.c: 327: {
  1322                           ;main.c: 328: f10ms = 0;
  1323  0B50  1070               	bcf	_f10ms/(0+8),_f10ms& (0+7)
  1324                           
  1325                           ;main.c: 330: bSeg0 = ~tabSeg[bTestCnt];
  1326  0B51  086E               	movf	_bTestCnt,w
  1327  0B52  3E01               	addlw	low (_tabSeg-__stringbase)
  1328  0B53  0084               	movwf	4
  1329  0B54  158A  2000  158A   	fcall	stringdir
  1330  0B57  3AFF               	xorlw	255
  1331  0B58  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0B59  00CE               	movwf	_bSeg0^(0+128)
  1333                           
  1334                           ;main.c: 331: bSeg1 = ~tabSeg[bTestCnt];
  1335  0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0B5B  086E               	movf	_bTestCnt,w
  1337  0B5C  3E01               	addlw	low (_tabSeg-__stringbase)
  1338  0B5D  0084               	movwf	4
  1339  0B5E  158A  2000  158A   	fcall	stringdir
  1340  0B61  3AFF               	xorlw	255
  1341  0B62  1683               	bsf	3,5	;RP0=1, select bank1
  1342  0B63  00CF               	movwf	_bSeg1^(0+128)
  1343                           
  1344                           ;main.c: 332: bSeg2 = ~tabSeg[bTestCnt];
  1345  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  1346  0B65  086E               	movf	_bTestCnt,w
  1347  0B66  3E01               	addlw	low (_tabSeg-__stringbase)
  1348  0B67  0084               	movwf	4
  1349  0B68  158A  2000  158A   	fcall	stringdir
  1350  0B6B  3AFF               	xorlw	255
  1351  0B6C  1683               	bsf	3,5	;RP0=1, select bank1
  1352  0B6D  00D0               	movwf	_bSeg2^(0+128)
  1353                           
  1354                           ;main.c: 334: if (++bRunCnt>=30)
  1355  0B6E  301E               	movlw	30
  1356  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0B70  0AEB               	incf	_bRunCnt,f
  1358  0B71  026B               	subwf	_bRunCnt,w
  1359  0B72  1C03               	skipc
  1360  0B73  2B76               	goto	l11763
  1361                           
  1362                           ;main.c: 335: {
  1363                           ;main.c: 336: bRunCnt=0;
  1364  0B74  01EB               	clrf	_bRunCnt
  1365                           
  1366                           ;main.c: 337: bTestCnt++;
  1367  0B75  0AEE               	incf	_bTestCnt,f
  1368  0B76                     l11763:	
  1369                           
  1370                           ;main.c: 338: }
  1371                           ;main.c: 339: }
  1372                           ;main.c: 340: }while (bTestCnt!=10);
  1373  0B76  086E               	movf	_bTestCnt,w
  1374  0B77  3A0A               	xorlw	10
  1375  0B78  1D03               	skipz
  1376  0B79  2B4E               	goto	l11751
  1377  0B7A                     l5104:	
  1378                           ;main.c: 345: while (1)
  1379                           
  1380                           
  1381                           ;main.c: 346: {
  1382                           ;main.c: 347: if (f10ms)
  1383  0B7A  1C70               	btfss	_f10ms/(0+8),_f10ms& (0+7)
  1384  0B7B  2B7A               	goto	l5104
  1385                           
  1386                           ;main.c: 348: {
  1387                           ;main.c: 349: f10ms = 0;
  1388  0B7C  1070               	bcf	_f10ms/(0+8),_f10ms& (0+7)
  1389                           
  1390                           ;main.c: 350: pKeyProc();
  1391  0B7D  118A  259B  158A   	fcall	_pKeyProc
  1392                           
  1393                           ;main.c: 354: switch (bTBCnt)
  1394  0B80  2B90               	goto	l11777
  1395  0B81                     l11769:	
  1396                           
  1397                           ;main.c: 357: pFlashTimeCtl();
  1398  0B81  158A  2262  158A   	fcall	_pFlashTimeCtl
  1399                           
  1400                           ;main.c: 358: pEESaveTimeCtl();
  1401  0B84  158A  2252  158A   	fcall	_pEESaveTimeCtl
  1402                           
  1403                           ;main.c: 359: break;
  1404  0B87  2BA0               	goto	l11779
  1405  0B88                     l11771:	
  1406                           
  1407                           ;main.c: 362: pDispProc();
  1408  0B88  118A  205A  158A   	fcall	_pDispProc
  1409                           
  1410                           ;main.c: 363: break;
  1411  0B8B  2BA0               	goto	l11779
  1412  0B8C                     l11773:	
  1413                           
  1414                           ;main.c: 366: pWashFlow();
  1415  0B8C  118A  200F  158A   	fcall	_pWashFlow
  1416                           
  1417                           ;main.c: 367: break;
  1418  0B8F  2BA0               	goto	l11779
  1419  0B90                     l11777:	
  1420  0B90  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0B91  1303               	bcf	3,6	;RP1=0, select bank1
  1422  0B92  0851               	movf	_bTBCnt^(0+128),w
  1423                           
  1424                           ; Switch size 1, requested type "space"
  1425                           ; Number of cases is 4, Range of values is 0 to 3
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte           13     7 (average)
  1429                           ; direct_byte           15     7 (fixed)
  1430                           ; jumptable            260     6 (fixed)
  1431                           ; rangetable             8     6 (fixed)
  1432                           ; spacedrange           14     9 (fixed)
  1433                           ; locatedrange           4     3 (fixed)
  1434                           ;	Chosen strategy is simple_byte
  1435  0B93  3A00               	xorlw	0	; case 0
  1436  0B94  1903               	skipnz
  1437  0B95  2B81               	goto	l11769
  1438  0B96  3A01               	xorlw	1	; case 1
  1439  0B97  1903               	skipnz
  1440  0B98  2B88               	goto	l11771
  1441  0B99  3A03               	xorlw	3	; case 2
  1442  0B9A  1903               	skipnz
  1443  0B9B  2B8C               	goto	l11773
  1444  0B9C  3A01               	xorlw	1	; case 3
  1445  0B9D  1903               	skipnz
  1446  0B9E  2BA0               	goto	l11779
  1447  0B9F  2BA0               	goto	l11779
  1448  0BA0                     l11779:	
  1449                           
  1450                           ;main.c: 375: if (++bTBCnt >= 10)
  1451  0BA0  300A               	movlw	10
  1452  0BA1  0AD1               	incf	_bTBCnt^(0+128),f
  1453  0BA2  0251               	subwf	_bTBCnt^(0+128),w
  1454  0BA3  1803               	btfsc	3,0
  1455                           
  1456                           ;main.c: 376: {
  1457                           ;main.c: 377: bTBCnt=0;
  1458  0BA4  01D1               	clrf	_bTBCnt^(0+128)
  1459                           
  1460                           ;main.c: 378: }
  1461                           ;main.c: 381: if (++b50ms >= 5)
  1462  0BA5  3005               	movlw	5
  1463  0BA6  0ABA               	incf	_b50ms^(0+128),f
  1464  0BA7  023A               	subwf	_b50ms^(0+128),w
  1465  0BA8  1C03               	skipc
  1466  0BA9  2BAE               	goto	l11789
  1467                           
  1468                           ;main.c: 382: {
  1469                           ;main.c: 383: b50ms=0;
  1470  0BAA  01BA               	clrf	_b50ms^(0+128)
  1471                           
  1472                           ;main.c: 384: pCalWaterFlow();
  1473  0BAB  158A  24FC  158A   	fcall	_pCalWaterFlow
  1474  0BAE                     l11789:	
  1475                           
  1476                           ;main.c: 385: }
  1477                           ;main.c: 389: if (++b1s >= 100)
  1478  0BAE  3064               	movlw	100
  1479  0BAF  0AB9               	incf	_b1s^(0+128),f
  1480  0BB0  0239               	subwf	_b1s^(0+128),w
  1481  0BB1  1C03               	skipc
  1482  0BB2  2B7A               	goto	l5104
  1483                           
  1484                           ;main.c: 390: {
  1485                           ;main.c: 391: b1s=0;
  1486  0BB3  01B9               	clrf	_b1s^(0+128)
  1487                           
  1488                           ;main.c: 392: pTimeProc();
  1489  0BB4  158A  22CD  158A   	fcall	_pTimeProc
  1490  0BB7  2B7A               	goto	l5104
  1491  0BB8                     __end_of_main:	
  1492                           
  1493                           	psect	swtext1
  1494  07EC                     __pswtext1:	
  1495  07EC                     S11825:	
  1496  07EC  118A  2861         	ljmp	l11549
  1497  07EE  118A  286E         	ljmp	l11557
  1498  07F0  118A  2887         	ljmp	l11567
  1499  07F2  118A  28B2         	ljmp	l11589
  1500  07F4  118A  28CB         	ljmp	l11599
  1501  07F6  118A  28E5         	ljmp	l11613
  1502  07F8  118A  28F3         	ljmp	l11621
  1503                           
  1504                           	psect	text930
  1505  0ACD                     __ptext930:	
  1506 ;; =============== function _pConLiter ends ============
  1507                           
  1508                           
  1509 ;; *************** function _pTimeProc *****************
  1510 ;; Defined at:
  1511 ;;		line 1197 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  tmp             2    7[BANK0 ] unsigned short 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;		None               void
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 60/20
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: FFF9F/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1525 ;;      Params:         0       0       0       0
  1526 ;;      Locals:         0       2       0       0
  1527 ;;      Temps:          0       0       0       0
  1528 ;;      Totals:         0       2       0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    4
  1532 ;; This function calls:
  1533 ;;		___wmul
  1534 ;;		___lwdiv
  1535 ;;		___lwmod
  1536 ;;		_pReLoadTime
  1537 ;;		_pRunWashFlow
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542  0ACD                     _pTimeProc:	
  1543                           
  1544                           ;main.c: 1198: U16 tmp;
  1545                           ;main.c: 1200: if (++bSec>=60)
  1546                           
  1547                           ; Regs used in _pTimeProc: [wreg+status,2+status,0+pclath+cstack]
  1548  0ACD  303C               	movlw	60
  1549  0ACE  0ACD               	incf	_bSec^(0+128),f
  1550  0ACF  024D               	subwf	_bSec^(0+128),w
  1551  0AD0  1C03               	skipc
  1552  0AD1  0008               	return
  1553                           
  1554                           ;main.c: 1201: {
  1555                           ;main.c: 1202: bSec=0;
  1556  0AD2  01CD               	clrf	_bSec^(0+128)
  1557                           
  1558                           ;main.c: 1203: tmp = (U16)bHour*60+(U16)bMin;
  1559  0AD3  0842               	movf	_bHour^(0+128),w
  1560  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0AD5  00A0               	movwf	?___wmul
  1562  0AD6  303C               	movlw	60
  1563  0AD7  01A1               	clrf	?___wmul+1
  1564  0AD8  00A2               	movwf	?___wmul+2
  1565  0AD9  01A3               	clrf	?___wmul+3
  1566  0ADA  2310               	fcall	___wmul
  1567  0ADB  0821               	movf	?___wmul+1,w
  1568  0ADC  00A8               	movwf	pTimeProc@tmp+1
  1569  0ADD  0820               	movf	?___wmul,w
  1570  0ADE  00A7               	movwf	pTimeProc@tmp
  1571  0ADF  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0AE0  0847               	movf	_bMin^(0+128),w
  1573  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0AE2  07A7               	addwf	pTimeProc@tmp,f
  1575  0AE3  1803               	skipnc
  1576  0AE4  0AA8               	incf	pTimeProc@tmp+1,f
  1577                           
  1578                           ;main.c: 1204: tmp--;
  1579  0AE5  3001               	movlw	1
  1580  0AE6  02A7               	subwf	pTimeProc@tmp,f
  1581  0AE7  3000               	movlw	0
  1582  0AE8  1C03               	skipc
  1583  0AE9  03A8               	decf	pTimeProc@tmp+1,f
  1584  0AEA  02A8               	subwf	pTimeProc@tmp+1,f
  1585                           
  1586                           ;main.c: 1206: bHour = tmp/60;
  1587  0AEB  303C               	movlw	60
  1588  0AEC  00A0               	movwf	?___lwdiv
  1589  0AED  01A1               	clrf	?___lwdiv+1
  1590  0AEE  0828               	movf	pTimeProc@tmp+1,w
  1591  0AEF  00A3               	movwf	?___lwdiv+3
  1592  0AF0  0827               	movf	pTimeProc@tmp,w
  1593  0AF1  00A2               	movwf	?___lwdiv+2
  1594  0AF2  118A  2511  158A   	fcall	___lwdiv
  1595  0AF5  0820               	movf	?___lwdiv,w
  1596  0AF6  1683               	bsf	3,5	;RP0=1, select bank1
  1597  0AF7  00C2               	movwf	_bHour^(0+128)
  1598                           
  1599                           ;main.c: 1207: bMin = tmp%60;
  1600  0AF8  303C               	movlw	60
  1601  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0AFA  00A0               	movwf	?___lwmod
  1603  0AFB  01A1               	clrf	?___lwmod+1
  1604  0AFC  0828               	movf	pTimeProc@tmp+1,w
  1605  0AFD  00A3               	movwf	?___lwmod+3
  1606  0AFE  0827               	movf	pTimeProc@tmp,w
  1607  0AFF  00A2               	movwf	?___lwmod+2
  1608  0B00  118A  253B  158A   	fcall	___lwmod
  1609  0B03  0820               	movf	?___lwmod,w
  1610  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0B05  00C7               	movwf	_bMin^(0+128)
  1612                           
  1613                           ;main.c: 1209: if ((bHour==0)&&(bMin==0))
  1614  0B06  08C2               	movf	_bHour^(0+128),f
  1615  0B07  1D03               	skipz
  1616  0B08  0008               	return
  1617  0B09  08C7               	movf	_bMin^(0+128),f
  1618  0B0A  1D03               	skipz
  1619  0B0B  0008               	return
  1620                           
  1621                           ;main.c: 1210: {
  1622                           ;main.c: 1211: pReLoadTime();
  1623  0B0C  118A  2698         	fcall	_pReLoadTime
  1624                           
  1625                           ;main.c: 1212: pRunWashFlow();
  1626  0B0E  118A  2EE9         	ljmp	l10687
  1627  0B10                     __end_of_pTimeProc:	
  1628  0B10                     __ptext943:	
  1629 ;; =============== function ___lwdiv ends ============
  1630                           
  1631                           
  1632 ;; *************** function ___wmul *****************
  1633 ;; Defined at:
  1634 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1637 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  product         2    4[BANK0 ] unsigned int 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2    0[BANK0 ] unsigned int 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 60/0
  1646 ;;		On exit  : 60/0
  1647 ;;		Unchanged: FFF9F/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1649 ;;      Params:         0       4       0       0
  1650 ;;      Locals:         0       2       0       0
  1651 ;;      Temps:          0       0       0       0
  1652 ;;      Totals:         0       6       0       0
  1653 ;;Total ram usage:        6 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    3
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_pTimeProc
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662  0B10                     ___wmul:	
  1663                           
  1664                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1665  0B10  01A4               	clrf	___wmul@product
  1666  0B11  01A5               	clrf	___wmul@product+1
  1667  0B12                     l10807:	
  1668  0B12  1C20               	btfss	___wmul@multiplier,0
  1669  0B13  2B1A               	goto	l10811
  1670  0B14  0822               	movf	___wmul@multiplicand,w
  1671  0B15  07A4               	addwf	___wmul@product,f
  1672  0B16  1803               	skipnc
  1673  0B17  0AA5               	incf	___wmul@product+1,f
  1674  0B18  0823               	movf	___wmul@multiplicand+1,w
  1675  0B19  07A5               	addwf	___wmul@product+1,f
  1676  0B1A                     l10811:	
  1677  0B1A  1003               	clrc
  1678  0B1B  0DA2               	rlf	___wmul@multiplicand,f
  1679  0B1C  0DA3               	rlf	___wmul@multiplicand+1,f
  1680  0B1D  1003               	clrc
  1681  0B1E  0CA1               	rrf	___wmul@multiplier+1,f
  1682  0B1F  0CA0               	rrf	___wmul@multiplier,f
  1683  0B20  0821               	movf	___wmul@multiplier+1,w
  1684  0B21  0420               	iorwf	___wmul@multiplier,w
  1685  0B22  1D03               	skipz
  1686  0B23  2B12               	goto	l10807
  1687  0B24  0825               	movf	___wmul@product+1,w
  1688  0B25  00A1               	movwf	?___wmul+1
  1689  0B26  0824               	movf	___wmul@product,w
  1690  0B27  00A0               	movwf	?___wmul
  1691  0B28  0008               	return
  1692  0B29                     __end_of___wmul:	
  1693                           
  1694                           	psect	text931
  1695  0CFC                     __ptext931:	
  1696 ;; =============== function _pTimeProc ends ============
  1697                           
  1698                           
  1699 ;; *************** function _pCalWaterFlow *****************
  1700 ;; Defined at:
  1701 ;;		line 1035 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  val             4   70[BANK0 ] unsigned long 
  1706 ;;  tmp             4   65[BANK0 ] unsigned long 
  1707 ;;  diff            2   63[BANK0 ] unsigned short 
  1708 ;;  i               1   69[BANK0 ] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;		None               void
  1711 ;; Registers used:
  1712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 60/20
  1715 ;;		On exit  : 60/20
  1716 ;;		Unchanged: FFE9F/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1718 ;;      Params:         0       0       0       0
  1719 ;;      Locals:         0      11       0       0
  1720 ;;      Temps:          0      12       0       0
  1721 ;;      Totals:         0      23       0       0
  1722 ;;Total ram usage:       23 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    4
  1725 ;; This function calls:
  1726 ;;		___lldiv
  1727 ;;		_filter
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;;		_pTestMode
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733  0CFC                     _pCalWaterFlow:	
  1734                           
  1735                           ;main.c: 1036: U8 i;
  1736                           ;main.c: 1037: U16 diff;
  1737                           ;main.c: 1038: U32 tmp,val;
  1738                           ;main.c: 1040: if (fCalFlow)
  1739                           
  1740                           ; Regs used in _pCalWaterFlow: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1741  0CFC  1CF0               	btfss	_fCalFlow/(0+8),_fCalFlow& (0+7)
  1742  0CFD  2EFB               	goto	l11257
  1743                           
  1744                           ;main.c: 1041: {
  1745                           ;main.c: 1042: fCalFlow=1;
  1746  0CFE  14F0               	bsf	_fCalFlow/(0+8),_fCalFlow& (0+7)
  1747                           
  1748                           ;main.c: 1044: tmp = ((U32)bCapT2<<16)+((U32)bCapT1<<8)+(U32)bCapT0-250;
  1749  0CFF  083D               	movf	_bCapT2^(0+128),w
  1750  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0D01  01E1               	clrf	pCalWaterFlow@tmp
  1752  0D02  01E2               	clrf	pCalWaterFlow@tmp+1
  1753  0D03  00E3               	movwf	pCalWaterFlow@tmp+2
  1754  0D04  01E4               	clrf	pCalWaterFlow@tmp+3
  1755  0D05  1683               	bsf	3,5	;RP0=1, select bank1
  1756  0D06  083C               	movf	_bCapT1^(0+128),w
  1757  0D07  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0D08  00D3               	movwf	??_pCalWaterFlow
  1759  0D09  01D4               	clrf	??_pCalWaterFlow+1
  1760  0D0A  01D5               	clrf	??_pCalWaterFlow+2
  1761  0D0B  01D6               	clrf	??_pCalWaterFlow+3
  1762  0D0C  0855               	movf	??_pCalWaterFlow+2,w
  1763  0D0D  00D6               	movwf	??_pCalWaterFlow+3
  1764  0D0E  0854               	movf	??_pCalWaterFlow+1,w
  1765  0D0F  00D5               	movwf	??_pCalWaterFlow+2
  1766  0D10  0853               	movf	??_pCalWaterFlow,w
  1767  0D11  00D4               	movwf	??_pCalWaterFlow+1
  1768  0D12  01D3               	clrf	??_pCalWaterFlow
  1769  0D13  0853               	movf	??_pCalWaterFlow,w
  1770  0D14  07E1               	addwf	pCalWaterFlow@tmp,f
  1771  0D15  0854               	movf	??_pCalWaterFlow+1,w
  1772  0D16  1103               	clrz
  1773  0D17  1803               	skipnc
  1774  0D18  3E01               	addlw	1
  1775  0D19  1D03               	btfss	3,2
  1776  0D1A  07E2               	addwf	pCalWaterFlow@tmp+1,f
  1777  0D1B  0855               	movf	??_pCalWaterFlow+2,w
  1778  0D1C  1103               	clrz
  1779  0D1D  1803               	skipnc
  1780  0D1E  3E01               	addlw	1
  1781  0D1F  1D03               	btfss	3,2
  1782  0D20  07E3               	addwf	pCalWaterFlow@tmp+2,f
  1783  0D21  0856               	movf	??_pCalWaterFlow+3,w
  1784  0D22  1103               	clrz
  1785  0D23  1803               	skipnc
  1786  0D24  3E01               	addlw	1
  1787  0D25  1D03               	btfss	3,2
  1788  0D26  07E4               	addwf	pCalWaterFlow@tmp+3,f
  1789  0D27  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0D28  083B               	movf	_bCapT0^(0+128),w
  1791  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0D2A  07E1               	addwf	pCalWaterFlow@tmp,f
  1793  0D2B  3001               	movlw	1
  1794  0D2C  1803               	skipnc
  1795  0D2D  07E2               	addwf	pCalWaterFlow@tmp+1,f
  1796  0D2E  1803               	skipnc
  1797  0D2F  07E3               	addwf	pCalWaterFlow@tmp+2,f
  1798  0D30  1803               	skipnc
  1799  0D31  07E4               	addwf	pCalWaterFlow@tmp+3,f
  1800  0D32  3006               	movlw	6
  1801  0D33  07E1               	addwf	pCalWaterFlow@tmp,f
  1802  0D34  30FF               	movlw	255
  1803  0D35  1C03               	skipc
  1804  0D36  07E2               	addwf	pCalWaterFlow@tmp+1,f
  1805  0D37  1C03               	skipc
  1806  0D38  07E3               	addwf	pCalWaterFlow@tmp+2,f
  1807  0D39  1C03               	skipc
  1808  0D3A  07E4               	addwf	pCalWaterFlow@tmp+3,f
  1809  0D3B  3000               	movlw	0
  1810                           
  1811                           ;main.c: 1045: fCalFlow=0;
  1812  0D3C  10F0               	bcf	_fCalFlow/(0+8),_fCalFlow& (0+7)
  1813                           
  1814                           ;main.c: 1048: if (tmp < 30300)
  1815  0D3D  0264               	subwf	pCalWaterFlow@tmp+3,w
  1816  0D3E  1D03               	skipz
  1817  0D3F  2D4A               	goto	u3225
  1818  0D40  3000               	movlw	0
  1819  0D41  0263               	subwf	pCalWaterFlow@tmp+2,w
  1820  0D42  1D03               	skipz
  1821  0D43  2D4A               	goto	u3225
  1822  0D44  3076               	movlw	118
  1823  0D45  0262               	subwf	pCalWaterFlow@tmp+1,w
  1824  0D46  1D03               	skipz
  1825  0D47  2D4A               	goto	u3225
  1826  0D48  305C               	movlw	92
  1827  0D49  0261               	subwf	pCalWaterFlow@tmp,w
  1828  0D4A                     u3225:	
  1829  0D4A  1803               	skipnc
  1830  0D4B  2D52               	goto	l5271
  1831                           
  1832                           ;main.c: 1049: tmp = 30300;
  1833  0D4C  3076               	movlw	118
  1834  0D4D  01E4               	clrf	pCalWaterFlow@tmp+3
  1835  0D4E  01E3               	clrf	pCalWaterFlow@tmp+2
  1836  0D4F  00E2               	movwf	pCalWaterFlow@tmp+1
  1837  0D50  305C               	movlw	92
  1838  0D51  00E1               	movwf	pCalWaterFlow@tmp
  1839  0D52                     l5271:	
  1840                           
  1841                           ;main.c: 1050: if (tmp >=909090)
  1842  0D52  3000               	movlw	0
  1843  0D53  0264               	subwf	pCalWaterFlow@tmp+3,w
  1844  0D54  1D03               	skipz
  1845  0D55  2D60               	goto	u3235
  1846  0D56  300D               	movlw	13
  1847  0D57  0263               	subwf	pCalWaterFlow@tmp+2,w
  1848  0D58  1D03               	skipz
  1849  0D59  2D60               	goto	u3235
  1850  0D5A  30DF               	movlw	223
  1851  0D5B  0262               	subwf	pCalWaterFlow@tmp+1,w
  1852  0D5C  1D03               	skipz
  1853  0D5D  2D60               	goto	u3235
  1854  0D5E  3022               	movlw	34
  1855  0D5F  0261               	subwf	pCalWaterFlow@tmp,w
  1856  0D60                     u3235:	
  1857  0D60  1C03               	skipc
  1858  0D61  2D69               	goto	l11153
  1859                           
  1860                           ;main.c: 1051: tmp = 909090;
  1861  0D62  300D               	movlw	13
  1862  0D63  01E4               	clrf	pCalWaterFlow@tmp+3
  1863  0D64  00E3               	movwf	pCalWaterFlow@tmp+2
  1864  0D65  30DF               	movlw	223
  1865  0D66  00E2               	movwf	pCalWaterFlow@tmp+1
  1866  0D67  3022               	movlw	34
  1867  0D68  00E1               	movwf	pCalWaterFlow@tmp
  1868  0D69                     l11153:	
  1869                           
  1870                           ;main.c: 1052: val = ((U32)181818182L / tmp);
  1871  0D69  0864               	movf	pCalWaterFlow@tmp+3,w
  1872  0D6A  00A3               	movwf	?___lldiv+3
  1873  0D6B  0863               	movf	pCalWaterFlow@tmp+2,w
  1874  0D6C  00A2               	movwf	?___lldiv+2
  1875  0D6D  0862               	movf	pCalWaterFlow@tmp+1,w
  1876  0D6E  00A1               	movwf	?___lldiv+1
  1877  0D6F  0861               	movf	pCalWaterFlow@tmp,w
  1878  0D70  00A0               	movwf	?___lldiv
  1879  0D71  300A               	movlw	10
  1880  0D72  00A7               	movwf	?___lldiv+7
  1881  0D73  30D6               	movlw	214
  1882  0D74  00A6               	movwf	?___lldiv+6
  1883  0D75  3053               	movlw	83
  1884  0D76  00A5               	movwf	?___lldiv+5
  1885  0D77  3046               	movlw	70
  1886  0D78  00A4               	movwf	?___lldiv+4
  1887  0D79  118A  22ED  158A   	fcall	___lldiv
  1888  0D7C  27B1  158A         	fcall	PL8	;call to abstracted procedure
  1889                           
  1890                           ;main.c: 1054: if (fFirstLoad)
  1891  0D7E  1E70               	btfss	_fFirstLoad/(0+8),_fFirstLoad& (0+7)
  1892  0D7F  2D8F               	goto	l11163
  1893                           
  1894                           ;main.c: 1055: {
  1895                           ;main.c: 1056: arrFlow[bFlowIdx]=val;
  1896  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0D81  1003               	clrc
  1898  0D82  0D40               	rlf	_bFlowIdx^(0+128),w
  1899  0D83  3E20               	addlw	_arrFlow& (0+255)
  1900  0D84  0084               	movwf	4
  1901  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  1902                           
  1903                           ;main.c: 1057: if (++bFlowIdx >= 16)
  1904  0D86  27DA  158A         	fcall	PL21	;call to abstracted procedure
  1905  0D88  1683               	bsf	3,5	;RP0=1, select bank1
  1906  0D89  0AC0               	incf	_bFlowIdx^(0+128),f
  1907  0D8A  0240               	subwf	_bFlowIdx^(0+128),w
  1908  0D8B  1C03               	skipc
  1909  0D8C  2DD3               	goto	l11203
  1910                           
  1911                           ;main.c: 1058: bFlowIdx=0;
  1912  0D8D  01C0               	clrf	_bFlowIdx^(0+128)
  1913  0D8E  2DD3               	goto	l11203
  1914  0D8F                     l11163:	
  1915                           
  1916                           ;main.c: 1060: else
  1917                           ;main.c: 1061: {
  1918                           ;main.c: 1062: for (i=0;i<16;i++)
  1919  0D8F  01E5               	clrf	pCalWaterFlow@i
  1920                           
  1921                           ;main.c: 1063: arrFlow[i]=val;
  1922  0D90  1003               	clrc
  1923  0D91                     L10:	
  1924  0D91  0D65               	rlf	pCalWaterFlow@i,w
  1925  0D92  3E20               	addlw	_arrFlow& (0+255)
  1926  0D93  0084               	movwf	4
  1927  0D94  27DA  158A         	fcall	PL21	;call to abstracted procedure
  1928  0D96  0AE5               	incf	pCalWaterFlow@i,f
  1929  0D97  0265               	subwf	pCalWaterFlow@i,w
  1930  0D98  1C03               	skipc
  1931  0D99  2D91               	goto	L10
  1932                           
  1933                           ;main.c: 1064: val = filter(arrFlow);
  1934  0D9A  3020               	movlw	_arrFlow& (0+255)
  1935  0D9B  2702  158A         	fcall	_filter
  1936  0D9D  27E1  158A         	fcall	PL25	;call to abstracted procedure
  1937                           
  1938                           ;main.c: 1065: wSum = val<<3;
  1939  0D9F  0869               	movf	pCalWaterFlow@val+3,w
  1940  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  1941  0DA1  00B3               	movwf	(_wSum+3)^(0+128)
  1942  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0DA3  0868               	movf	pCalWaterFlow@val+2,w
  1944  0DA4  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0DA5  00B2               	movwf	(_wSum+2)^(0+128)
  1946  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0DA7  0867               	movf	pCalWaterFlow@val+1,w
  1948  0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0DA9  00B1               	movwf	(_wSum+1)^(0+128)
  1950  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0DAB  0866               	movf	pCalWaterFlow@val,w
  1952  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  1953  0DAD  00B0               	movwf	_wSum^(0+128)
  1954  0DAE  3003               	movlw	3
  1955  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0DB0  00D3               	movwf	??_pCalWaterFlow
  1957  0DB1                     u3275:	
  1958  0DB1  1003               	clrc
  1959  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0DB3  0DB0               	rlf	_wSum^(0+128),f
  1961  0DB4  0DB1               	rlf	(_wSum+1)^(0+128),f
  1962  0DB5  0DB2               	rlf	(_wSum+2)^(0+128),f
  1963  0DB6  0DB3               	rlf	(_wSum+3)^(0+128),f
  1964  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0DB8  0BD3               	decfsz	??_pCalWaterFlow,f
  1966  0DB9  2DB1               	goto	u3275
  1967                           
  1968                           ;main.c: 1066: val = (val+5)/10;
  1969  0DBA  300A               	movlw	10
  1970  0DBB  2791               	fcall	PL3	;call to abstracted procedure
  1971  0DBC  118A  22ED  158A   	fcall	___lldiv
  1972  0DBF  27B1  158A         	fcall	PL8	;call to abstracted procedure
  1973                           
  1974                           ;main.c: 1068: for (i=0;i<8;i++)
  1975  0DC1  01E5               	clrf	pCalWaterFlow@i
  1976                           
  1977                           ;main.c: 1069: arrFlow2[i]=val;
  1978  0DC2  1003               	clrc
  1979  0DC3                     L11:	
  1980  0DC3  0D65               	rlf	pCalWaterFlow@i,w
  1981  0DC4  3EA0               	addlw	_arrFlow2& (0+255)
  1982  0DC5  0084               	movwf	4
  1983  0DC6  27EF  158A         	fcall	PL27	;call to abstracted procedure
  1984  0DC8  0AE5               	incf	pCalWaterFlow@i,f
  1985  0DC9  0265               	subwf	pCalWaterFlow@i,w
  1986  0DCA  1C03               	skipc
  1987  0DCB  2DC3               	goto	L11
  1988                           
  1989                           ;main.c: 1071: bFlowIdx=0;
  1990  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  1991  0DCD  01C0               	clrf	_bFlowIdx^(0+128)
  1992                           
  1993                           ;main.c: 1072: bFlowIdx2=0;
  1994  0DCE  01C1               	clrf	_bFlowIdx2^(0+128)
  1995                           
  1996                           ;main.c: 1073: wWFlow = val;
  1997  0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  1998                           
  1999                           ;main.c: 1074: bFilterCnt=10;
  2000  0DD0  27CB  158A         	fcall	PL16	;call to abstracted procedure
  2001                           
  2002                           ;main.c: 1076: fFirstLoad = 1;
  2003  0DD2  1670               	bsf	_fFirstLoad/(0+8),_fFirstLoad& (0+7)
  2004  0DD3                     l11203:	
  2005                           
  2006                           ;main.c: 1077: }
  2007                           ;main.c: 1085: val = filter(arrFlow);
  2008  0DD3  3020               	movlw	_arrFlow& (0+255)
  2009  0DD4  2702  158A         	fcall	_filter
  2010  0DD6  27E1  158A         	fcall	PL25	;call to abstracted procedure
  2011                           
  2012                           ;main.c: 1086: wSum = wSum - (wSum >> 3) + val;
  2013  0DD8  0866               	movf	pCalWaterFlow@val,w
  2014  0DD9  00D3               	movwf	??_pCalWaterFlow
  2015  0DDA  0867               	movf	pCalWaterFlow@val+1,w
  2016  0DDB  00D4               	movwf	??_pCalWaterFlow+1
  2017  0DDC  0868               	movf	pCalWaterFlow@val+2,w
  2018  0DDD  00D5               	movwf	??_pCalWaterFlow+2
  2019  0DDE  0869               	movf	pCalWaterFlow@val+3,w
  2020  0DDF  00D6               	movwf	??_pCalWaterFlow+3
  2021  0DE0  1683               	bsf	3,5	;RP0=1, select bank1
  2022  0DE1  0830               	movf	_wSum^(0+128),w
  2023  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0DE3  00D7               	movwf	??_pCalWaterFlow+4
  2025  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0DE5  0831               	movf	(_wSum+1)^(0+128),w
  2027  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0DE7  00D8               	movwf	??_pCalWaterFlow+5
  2029  0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0DE9  0832               	movf	(_wSum+2)^(0+128),w
  2031  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0DEB  00D9               	movwf	??_pCalWaterFlow+6
  2033  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  2034  0DED  0833               	movf	(_wSum+3)^(0+128),w
  2035  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0DEF  00DA               	movwf	??_pCalWaterFlow+7
  2037  0DF0  3003               	movlw	3
  2038  0DF1                     u3305:	
  2039  0DF1  1003               	clrc
  2040  0DF2  0CDA               	rrf	??_pCalWaterFlow+7,f
  2041  0DF3  0CD9               	rrf	??_pCalWaterFlow+6,f
  2042  0DF4  0CD8               	rrf	??_pCalWaterFlow+5,f
  2043  0DF5  0CD7               	rrf	??_pCalWaterFlow+4,f
  2044  0DF6  3EFF               	addlw	-1
  2045  0DF7  1D03               	skipz
  2046  0DF8  2DF1               	goto	u3305
  2047  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0DFA  0830               	movf	_wSum^(0+128),w
  2049  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0DFC  00DB               	movwf	??_pCalWaterFlow+8
  2051  0DFD  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0DFE  0831               	movf	(_wSum+1)^(0+128),w
  2053  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0E00  00DC               	movwf	??_pCalWaterFlow+9
  2055  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  2056  0E02  0832               	movf	(_wSum+2)^(0+128),w
  2057  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0E04  00DD               	movwf	??_pCalWaterFlow+10
  2059  0E05  1683               	bsf	3,5	;RP0=1, select bank1
  2060  0E06  0833               	movf	(_wSum+3)^(0+128),w
  2061  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0E08  00DE               	movwf	??_pCalWaterFlow+11
  2063  0E09  0857               	movf	??_pCalWaterFlow+4,w
  2064  0E0A  02DB               	subwf	??_pCalWaterFlow+8,f
  2065  0E0B  0858               	movf	??_pCalWaterFlow+5,w
  2066  0E0C  1C03               	skipc
  2067  0E0D  0F58               	incfsz	??_pCalWaterFlow+5,w
  2068  0E0E  02DC               	subwf	??_pCalWaterFlow+9,f
  2069  0E0F  0859               	movf	??_pCalWaterFlow+6,w
  2070  0E10  1C03               	skipc
  2071  0E11  0F59               	incfsz	??_pCalWaterFlow+6,w
  2072  0E12  02DD               	subwf	??_pCalWaterFlow+10,f
  2073  0E13  085A               	movf	??_pCalWaterFlow+7,w
  2074  0E14  1C03               	skipc
  2075  0E15  0F5A               	incfsz	??_pCalWaterFlow+7,w
  2076  0E16  02DE               	subwf	??_pCalWaterFlow+11,f
  2077  0E17  085B               	movf	??_pCalWaterFlow+8,w
  2078  0E18  07D3               	addwf	??_pCalWaterFlow,f
  2079  0E19  085C               	movf	??_pCalWaterFlow+9,w
  2080  0E1A  1803               	skipnc
  2081  0E1B  0F5C               	incfsz	??_pCalWaterFlow+9,w
  2082  0E1C  07D4               	addwf	??_pCalWaterFlow+1,f
  2083  0E1D  085D               	movf	??_pCalWaterFlow+10,w
  2084  0E1E  1803               	skipnc
  2085  0E1F  0F5D               	incfsz	??_pCalWaterFlow+10,w
  2086  0E20  07D5               	addwf	??_pCalWaterFlow+2,f
  2087  0E21  085E               	movf	??_pCalWaterFlow+11,w
  2088  0E22  1803               	skipnc
  2089  0E23  0A5E               	incf	??_pCalWaterFlow+11,w
  2090  0E24  07D6               	addwf	??_pCalWaterFlow+3,f
  2091  0E25  0856               	movf	??_pCalWaterFlow+3,w
  2092  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0E27  00B3               	movwf	(_wSum+3)^(0+128)
  2094  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0E29  0855               	movf	??_pCalWaterFlow+2,w
  2096  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0E2B  00B2               	movwf	(_wSum+2)^(0+128)
  2098  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0E2D  0854               	movf	??_pCalWaterFlow+1,w
  2100  0E2E  1683               	bsf	3,5	;RP0=1, select bank1
  2101  0E2F  00B1               	movwf	(_wSum+1)^(0+128)
  2102  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0E31  0853               	movf	??_pCalWaterFlow,w
  2104  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0E33  00B0               	movwf	_wSum^(0+128)
  2106                           
  2107                           ;main.c: 1087: val = wSum >> 3;
  2108  0E34  0833               	movf	(_wSum+3)^(0+128),w
  2109  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0E36  00E9               	movwf	pCalWaterFlow@val+3
  2111  0E37  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0E38  0832               	movf	(_wSum+2)^(0+128),w
  2113  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0E3A  00E8               	movwf	pCalWaterFlow@val+2
  2115  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0E3C  0831               	movf	(_wSum+1)^(0+128),w
  2117  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0E3E  00E7               	movwf	pCalWaterFlow@val+1
  2119  0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  2120  0E40  0830               	movf	_wSum^(0+128),w
  2121  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0E42  00E6               	movwf	pCalWaterFlow@val
  2123  0E43  3003               	movlw	3
  2124  0E44                     u3335:	
  2125  0E44  27E8  158A         	fcall	PL26	;call to abstracted procedure
  2126  0E46  1D03               	skipz
  2127  0E47  2E44               	goto	u3335
  2128                           
  2129                           ;main.c: 1088: val = (val+5)/10;
  2130  0E48  300A               	movlw	10
  2131  0E49  2791               	fcall	PL3	;call to abstracted procedure
  2132  0E4A  118A  22ED  158A   	fcall	___lldiv
  2133  0E4D  27B1  158A         	fcall	PL8	;call to abstracted procedure
  2134                           
  2135                           ;main.c: 1090: if (wWFlow >= val)
  2136  0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0E50  27BA  158A         	fcall	PL13	;call to abstracted procedure
  2138  0E52  0256               	subwf	??_pCalWaterFlow+3,w
  2139  0E53  1D03               	skipz
  2140  0E54  2E5F               	goto	u3355
  2141  0E55  0868               	movf	pCalWaterFlow@val+2,w
  2142  0E56  0255               	subwf	??_pCalWaterFlow+2,w
  2143  0E57  1D03               	skipz
  2144  0E58  2E5F               	goto	u3355
  2145  0E59  0867               	movf	pCalWaterFlow@val+1,w
  2146  0E5A  0254               	subwf	??_pCalWaterFlow+1,w
  2147  0E5B  1D03               	skipz
  2148  0E5C  2E5F               	goto	u3355
  2149  0E5D  0866               	movf	pCalWaterFlow@val,w
  2150  0E5E  0253               	subwf	??_pCalWaterFlow,w
  2151  0E5F                     u3355:	
  2152  0E5F  1C03               	skipc
  2153  0E60  2E6D               	goto	l11217
  2154                           
  2155                           ;main.c: 1091: diff = wWFlow - val;
  2156  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0E62  0837               	movf	(_wWFlow+1)^(0+128),w
  2158  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0E64  00E0               	movwf	pCalWaterFlow@diff+1
  2160  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  2161  0E66  0836               	movf	_wWFlow^(0+128),w
  2162  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0E68  00DF               	movwf	pCalWaterFlow@diff
  2164  0E69  0866               	movf	pCalWaterFlow@val,w
  2165  0E6A  02DF               	subwf	pCalWaterFlow@diff,f
  2166  0E6B  0867               	movf	pCalWaterFlow@val+1,w
  2167  0E6C  2E78               	goto	L9
  2168  0E6D                     l11217:	
  2169                           
  2170                           ;main.c: 1092: else
  2171                           ;main.c: 1093: diff = val - wWFlow;
  2172  0E6D  0867               	movf	pCalWaterFlow@val+1,w
  2173  0E6E  00E0               	movwf	pCalWaterFlow@diff+1
  2174  0E6F  0866               	movf	pCalWaterFlow@val,w
  2175  0E70  00DF               	movwf	pCalWaterFlow@diff
  2176  0E71  1683               	bsf	3,5	;RP0=1, select bank1
  2177  0E72  0836               	movf	_wWFlow^(0+128),w
  2178  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0E74  02DF               	subwf	pCalWaterFlow@diff,f
  2180  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0E76  0837               	movf	(_wWFlow+1)^(0+128),w
  2182  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0E78                     L9:	
  2184  0E78  1C03               	skipc
  2185  0E79  03E0               	decf	pCalWaterFlow@diff+1,f
  2186  0E7A  02E0               	subwf	pCalWaterFlow@diff+1,f
  2187                           
  2188                           ;main.c: 1095: if (diff >15)
  2189  0E7B  3000               	movlw	0
  2190  0E7C  0260               	subwf	pCalWaterFlow@diff+1,w
  2191  0E7D  3010               	movlw	16
  2192  0E7E  1903               	skipnz
  2193  0E7F  025F               	subwf	pCalWaterFlow@diff,w
  2194  0E80  1803               	btfsc	3,0
  2195                           
  2196                           ;main.c: 1096: fFirstLoad=0;
  2197  0E81  1270               	bcf	_fFirstLoad/(0+8),_fFirstLoad& (0+7)
  2198                           
  2199                           ;main.c: 1097: if (diff <= 1)
  2200  0E82  3000               	movlw	0
  2201  0E83  0260               	subwf	pCalWaterFlow@diff+1,w
  2202  0E84  3002               	movlw	2
  2203  0E85  1903               	skipnz
  2204  0E86  025F               	subwf	pCalWaterFlow@diff,w
  2205  0E87  1803               	skipnc
  2206  0E88  2E93               	goto	l11225
  2207                           
  2208                           ;main.c: 1098: val = wWFlow;
  2209  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0E8A  0836               	movf	_wWFlow^(0+128),w
  2211  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0E8C  00E6               	movwf	pCalWaterFlow@val
  2213  0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  2214  0E8E  0837               	movf	(_wWFlow+1)^(0+128),w
  2215  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0E90  00E7               	movwf	pCalWaterFlow@val+1
  2217  0E91  01E8               	clrf	pCalWaterFlow@val+2
  2218  0E92  01E9               	clrf	pCalWaterFlow@val+3
  2219  0E93                     l11225:	
  2220                           
  2221                           ;main.c: 1100: arrFlow2[bFlowIdx2]=val;
  2222  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0E94  1003               	clrc
  2224  0E95  0D41               	rlf	_bFlowIdx2^(0+128),w
  2225  0E96  3EA0               	addlw	_arrFlow2& (0+255)
  2226  0E97  0084               	movwf	4
  2227  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  2228                           
  2229                           ;main.c: 1101: if (++bFlowIdx2 >= 8)
  2230  0E99  27EF  158A         	fcall	PL27	;call to abstracted procedure
  2231  0E9B  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0E9C  0AC1               	incf	_bFlowIdx2^(0+128),f
  2233  0E9D  0241               	subwf	_bFlowIdx2^(0+128),w
  2234  0E9E  1803               	btfsc	3,0
  2235                           
  2236                           ;main.c: 1102: bFlowIdx2=0;
  2237  0E9F  01C1               	clrf	_bFlowIdx2^(0+128)
  2238                           
  2239                           ;main.c: 1106: tmp=0;
  2240  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0EA1  01E1               	clrf	pCalWaterFlow@tmp
  2242  0EA2  01E2               	clrf	pCalWaterFlow@tmp+1
  2243  0EA3  01E3               	clrf	pCalWaterFlow@tmp+2
  2244  0EA4  01E4               	clrf	pCalWaterFlow@tmp+3
  2245                           
  2246                           ;main.c: 1107: for (i=0;i<8;i++)
  2247  0EA5  01E5               	clrf	pCalWaterFlow@i
  2248                           
  2249                           ;main.c: 1108: tmp+=arrFlow2[i];
  2250  0EA6  1003               	clrc
  2251  0EA7                     L12:	
  2252  0EA7  0D65               	rlf	pCalWaterFlow@i,w
  2253  0EA8  3EA0               	addlw	_arrFlow2& (0+255)
  2254  0EA9  0084               	movwf	4
  2255  0EAA  0800               	movf	0,w
  2256  0EAB  00D3               	movwf	??_pCalWaterFlow
  2257  0EAC  0A84               	incf	4,f
  2258  0EAD  0800               	movf	0,w
  2259  0EAE  00D4               	movwf	??_pCalWaterFlow+1
  2260  0EAF  0853               	movf	??_pCalWaterFlow,w
  2261  0EB0  00D5               	movwf	??_pCalWaterFlow+2
  2262  0EB1  0854               	movf	??_pCalWaterFlow+1,w
  2263  0EB2  00D6               	movwf	??_pCalWaterFlow+3
  2264  0EB3  01D7               	clrf	??_pCalWaterFlow+4
  2265  0EB4  01D8               	clrf	??_pCalWaterFlow+5
  2266  0EB5  0855               	movf	??_pCalWaterFlow+2,w
  2267  0EB6  07E1               	addwf	pCalWaterFlow@tmp,f
  2268  0EB7  0856               	movf	??_pCalWaterFlow+3,w
  2269  0EB8  1103               	clrz
  2270  0EB9  1803               	skipnc
  2271  0EBA  3E01               	addlw	1
  2272  0EBB  1D03               	btfss	3,2
  2273  0EBC  07E2               	addwf	pCalWaterFlow@tmp+1,f
  2274  0EBD  0857               	movf	??_pCalWaterFlow+4,w
  2275  0EBE  1103               	clrz
  2276  0EBF  1803               	skipnc
  2277  0EC0  3E01               	addlw	1
  2278  0EC1  1D03               	btfss	3,2
  2279  0EC2  07E3               	addwf	pCalWaterFlow@tmp+2,f
  2280  0EC3  0858               	movf	??_pCalWaterFlow+5,w
  2281  0EC4  1103               	clrz
  2282  0EC5  1803               	skipnc
  2283  0EC6  3E01               	addlw	1
  2284  0EC7  1D03               	btfss	3,2
  2285  0EC8  07E4               	addwf	pCalWaterFlow@tmp+3,f
  2286  0EC9  3008               	movlw	8
  2287  0ECA  0AE5               	incf	pCalWaterFlow@i,f
  2288  0ECB  0265               	subwf	pCalWaterFlow@i,w
  2289  0ECC  1C03               	skipc
  2290  0ECD  2EA7               	goto	L12
  2291                           
  2292                           ;main.c: 1109: val = (tmp>>3);
  2293  0ECE  0864               	movf	pCalWaterFlow@tmp+3,w
  2294  0ECF  00E9               	movwf	pCalWaterFlow@val+3
  2295  0ED0  0863               	movf	pCalWaterFlow@tmp+2,w
  2296  0ED1  00E8               	movwf	pCalWaterFlow@val+2
  2297  0ED2  0862               	movf	pCalWaterFlow@tmp+1,w
  2298  0ED3  00E7               	movwf	pCalWaterFlow@val+1
  2299  0ED4  0861               	movf	pCalWaterFlow@tmp,w
  2300  0ED5  00E6               	movwf	pCalWaterFlow@val
  2301  0ED6  3003               	movlw	3
  2302  0ED7                     u3415:	
  2303  0ED7  27E8  158A         	fcall	PL26	;call to abstracted procedure
  2304  0ED9  1D03               	skipz
  2305  0EDA  2ED7               	goto	u3415
  2306                           
  2307                           ;main.c: 1124: if (val != wWFlow)
  2308  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0EDC  27BA  158A         	fcall	PL13	;call to abstracted procedure
  2310  0EDE  0656               	xorwf	??_pCalWaterFlow+3,w
  2311  0EDF  1D03               	skipz
  2312  0EE0  2EEB               	goto	u3425
  2313  0EE1  0868               	movf	pCalWaterFlow@val+2,w
  2314  0EE2  0655               	xorwf	??_pCalWaterFlow+2,w
  2315  0EE3  1D03               	skipz
  2316  0EE4  2EEB               	goto	u3425
  2317  0EE5  0867               	movf	pCalWaterFlow@val+1,w
  2318  0EE6  0654               	xorwf	??_pCalWaterFlow+1,w
  2319  0EE7  1D03               	skipz
  2320  0EE8  2EEB               	goto	u3425
  2321  0EE9  0866               	movf	pCalWaterFlow@val,w
  2322  0EEA  0653               	xorwf	??_pCalWaterFlow,w
  2323  0EEB                     u3425:	
  2324  0EEB  1903               	skipnz
  2325  0EEC  2EF6               	goto	l11253
  2326                           
  2327                           ;main.c: 1125: {
  2328                           ;main.c: 1126: if (++bFilterCnt >= 20)
  2329  0EED  3014               	movlw	20
  2330  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  2331  0EEF  0ABE               	incf	_bFilterCnt^(0+128),f
  2332  0EF0  023E               	subwf	_bFilterCnt^(0+128),w
  2333  0EF1  1C03               	skipc
  2334  0EF2  0008               	return
  2335                           
  2336                           ;main.c: 1127: {
  2337                           ;main.c: 1128: wWFlow = val;
  2338  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  2339                           
  2340                           ;main.c: 1129: bFilterCnt=10;
  2341  0EF4  27CB               	fcall	PL16	;call to abstracted procedure
  2342  0EF5  0008               	return
  2343  0EF6                     l11253:	
  2344                           
  2345                           ;main.c: 1132: else
  2346                           ;main.c: 1133: {
  2347                           ;main.c: 1134: if (bFilterCnt>0)
  2348  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  2349  0EF7  083E               	movf	_bFilterCnt^(0+128),w
  2350  0EF8  1D03               	skipz
  2351                           
  2352                           ;main.c: 1135: bFilterCnt--;
  2353  0EF9  03BE               	decf	_bFilterCnt^(0+128),f
  2354  0EFA  0008               	return
  2355  0EFB                     l11257:	
  2356                           
  2357                           ;main.c: 1142: else if (bTMR1U >= 30)
  2358  0EFB  301E               	movlw	30
  2359  0EFC  0259               	subwf	_bTMR1U^(0+128),w
  2360  0EFD  1C03               	skipc
  2361  0EFE  0008               	return
  2362                           
  2363                           ;main.c: 1143: wWFlow = 0;
  2364  0EFF  01B6               	clrf	_wWFlow^(0+128)
  2365  0F00  01B7               	clrf	(_wWFlow+1)^(0+128)
  2366  0F01  0008               	return
  2367  0F02                     __end_of_pCalWaterFlow:	
  2368  0F02                     __ptext948:	
  2369 ;; =============== function _eecpymem ends ============
  2370                           
  2371                           
  2372 ;; *************** function _filter *****************
  2373 ;; Defined at:
  2374 ;;		line 1152 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  ptArr           1    wreg     PTR unsigned short 
  2377 ;;		 -> arrFlow(32), 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  ptArr           1   44[BANK0 ] PTR unsigned short 
  2380 ;;		 -> arrFlow(32), 
  2381 ;;  value_buf      32    8[BANK0 ] unsigned short [16]
  2382 ;;  sum             4   45[BANK0 ] unsigned long 
  2383 ;;  tmp             4   40[BANK0 ] unsigned long 
  2384 ;;  i               1   50[BANK0 ] unsigned char 
  2385 ;;  j               1   49[BANK0 ] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2    0[BANK0 ] unsigned short 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 40/100
  2392 ;;		On exit  : 160/0
  2393 ;;		Unchanged: FFE9F/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2395 ;;      Params:         0       2       0       0
  2396 ;;      Locals:         0      43       0       0
  2397 ;;      Temps:          0       6       0       0
  2398 ;;      Totals:         0      51       0       0
  2399 ;;Total ram usage:       51 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    3
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_pCalWaterFlow
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408  0F02                     _filter:	
  2409                           
  2410                           ; Regs used in _filter: [wreg-fsr0h+status,2+status,0]
  2411                           ;filter@ptArr stored from wreg
  2412  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0F03  00CC               	movwf	filter@ptArr
  2414                           
  2415                           ;main.c: 1153: U8 i,j;
  2416                           ;main.c: 1154: U16 value_buf[16];
  2417                           ;main.c: 1155: U32 sum,tmp;
  2418                           ;main.c: 1158: for (i=0;i<16;i++)
  2419  0F04  01D2               	clrf	filter@i
  2420  0F05                     l10699:	
  2421                           
  2422                           ;main.c: 1159: value_buf[i]=*ptArr++;
  2423  0F05  084C               	movf	filter@ptArr,w
  2424  0F06  0084               	movwf	4
  2425  0F07  1783               	bsf	3,7	;select IRP bank2
  2426  0F08  27C5  158A         	fcall	PL14	;call to abstracted procedure
  2427  0F0A  27FA  158A         	fcall	PL30	;call to abstracted procedure
  2428  0F0C  1383               	bcf	3,7	;select IRP bank0
  2429  0F0D  0080               	movwf	0
  2430  0F0E  0A84               	incf	4,f
  2431  0F0F  0823               	movf	??_filter+1,w
  2432  0F10  0080               	movwf	0
  2433  0F11  3010               	movlw	16
  2434  0F12  0ACC               	incf	filter@ptArr,f
  2435  0F13  0ACC               	incf	filter@ptArr,f
  2436  0F14  0AD2               	incf	filter@i,f
  2437  0F15  0252               	subwf	filter@i,w
  2438  0F16  1C03               	skipc
  2439  0F17  2F05               	goto	l10699
  2440                           
  2441                           ;main.c: 1162: for (i=0;i<15;i++)
  2442  0F18  01D2               	clrf	filter@i
  2443  0F19                     l10713:	
  2444                           
  2445                           ;main.c: 1163: {
  2446                           ;main.c: 1164: for (j=(i+1);j<16;j++)
  2447  0F19  0A52               	incf	filter@i,w
  2448  0F1A  00D1               	movwf	filter@j
  2449  0F1B                     l10715:	
  2450  0F1B  3010               	movlw	16
  2451  0F1C  0251               	subwf	filter@j,w
  2452  0F1D  1803               	btfsc	3,0
  2453  0F1E  2F54               	goto	l10727
  2454                           
  2455                           ;main.c: 1165: {
  2456                           ;main.c: 1166: if (value_buf[i] > value_buf[j])
  2457  0F1F  1003               	clrc
  2458  0F20  27D5  158A         	fcall	PL19	;call to abstracted procedure
  2459  0F22  27C5  158A         	fcall	PL14	;call to abstracted procedure
  2460  0F24  27F5  158A         	fcall	PL29	;call to abstracted procedure
  2461  0F26  0800               	movf	0,w
  2462  0F27  00A4               	movwf	??_filter+2
  2463  0F28  0A84               	incf	4,f
  2464  0F29  0800               	movf	0,w
  2465  0F2A  00A5               	movwf	??_filter+3
  2466  0F2B  0823               	movf	??_filter+1,w
  2467  0F2C  0225               	subwf	??_filter+3,w
  2468  0F2D  1D03               	skipz
  2469  0F2E  2F31               	goto	u2505
  2470  0F2F  0822               	movf	??_filter,w
  2471  0F30  0224               	subwf	??_filter+2,w
  2472  0F31                     u2505:	
  2473  0F31  1803               	skipnc
  2474  0F32  2F52               	goto	l10723
  2475                           
  2476                           ;main.c: 1167: {
  2477                           ;main.c: 1168: tmp = value_buf[i];
  2478  0F33  1003               	clrc
  2479  0F34  0D52               	rlf	filter@i,w
  2480  0F35  3E28               	addlw	filter@value_buf& (0+255)
  2481  0F36  0084               	movwf	4
  2482  0F37  27C5  158A         	fcall	PL14	;call to abstracted procedure
  2483  0F39  0822               	movf	??_filter,w
  2484  0F3A  00C8               	movwf	filter@tmp
  2485  0F3B  0823               	movf	??_filter+1,w
  2486  0F3C  00C9               	movwf	filter@tmp+1
  2487  0F3D  01CA               	clrf	filter@tmp+2
  2488  0F3E  01CB               	clrf	filter@tmp+3
  2489                           
  2490                           ;main.c: 1169: value_buf[i] = value_buf[j];
  2491  0F3F  27F5  158A         	fcall	PL29	;call to abstracted procedure
  2492  0F41  27C5  158A         	fcall	PL14	;call to abstracted procedure
  2493  0F43  27FA  158A         	fcall	PL30	;call to abstracted procedure
  2494  0F45  0080               	movwf	0
  2495  0F46  0A84               	incf	4,f
  2496  0F47  0823               	movf	??_filter+1,w
  2497  0F48  0080               	movwf	0
  2498                           
  2499                           ;main.c: 1170: value_buf[j] = tmp;
  2500  0F49  1003               	clrc
  2501  0F4A  0D51               	rlf	filter@j,w
  2502  0F4B  3E28               	addlw	filter@value_buf& (0+255)
  2503  0F4C  0084               	movwf	4
  2504  0F4D  0848               	movf	filter@tmp,w
  2505  0F4E  0080               	movwf	0
  2506  0F4F  0A84               	incf	4,f
  2507  0F50  0849               	movf	filter@tmp+1,w
  2508  0F51  0080               	movwf	0
  2509  0F52                     l10723:	
  2510  0F52  0AD1               	incf	filter@j,f
  2511  0F53  2F1B               	goto	l10715
  2512  0F54                     l10727:	
  2513  0F54  300F               	movlw	15
  2514  0F55  0AD2               	incf	filter@i,f
  2515  0F56  0252               	subwf	filter@i,w
  2516  0F57  1C03               	skipc
  2517  0F58  2F19               	goto	l10713
  2518  0F59  3004               	movlw	4
  2519                           
  2520                           ;main.c: 1171: }
  2521                           ;main.c: 1172: }
  2522                           ;main.c: 1173: }
  2523                           ;main.c: 1175: sum=0;
  2524  0F5A  01CD               	clrf	filter@sum
  2525  0F5B  01CE               	clrf	filter@sum+1
  2526  0F5C  01CF               	clrf	filter@sum+2
  2527  0F5D  01D0               	clrf	filter@sum+3
  2528                           
  2529                           ;main.c: 1176: for (i=4;i<=11;i++)
  2530  0F5E  00D2               	movwf	filter@i
  2531                           
  2532                           ;main.c: 1177: sum+=value_buf[i];
  2533  0F5F  1003               	clrc
  2534  0F60                     L25:	
  2535  0F60  27D5  158A         	fcall	PL19	;call to abstracted procedure
  2536  0F62  27C5  158A         	fcall	PL14	;call to abstracted procedure
  2537  0F64  0822               	movf	??_filter,w
  2538  0F65  00A4               	movwf	??_filter+2
  2539  0F66  0823               	movf	??_filter+1,w
  2540  0F67  00A5               	movwf	??_filter+3
  2541  0F68  01A6               	clrf	??_filter+4
  2542  0F69  01A7               	clrf	??_filter+5
  2543  0F6A  0824               	movf	??_filter+2,w
  2544  0F6B  07CD               	addwf	filter@sum,f
  2545  0F6C  0825               	movf	??_filter+3,w
  2546  0F6D  1103               	clrz
  2547  0F6E  1803               	skipnc
  2548  0F6F  3E01               	addlw	1
  2549  0F70  1D03               	btfss	3,2
  2550  0F71  07CE               	addwf	filter@sum+1,f
  2551  0F72  0826               	movf	??_filter+4,w
  2552  0F73  1103               	clrz
  2553  0F74  1803               	skipnc
  2554  0F75  3E01               	addlw	1
  2555  0F76  1D03               	btfss	3,2
  2556  0F77  07CF               	addwf	filter@sum+2,f
  2557  0F78  0827               	movf	??_filter+5,w
  2558  0F79  1103               	clrz
  2559  0F7A  1803               	skipnc
  2560  0F7B  3E01               	addlw	1
  2561  0F7C  1D03               	btfss	3,2
  2562  0F7D  07D0               	addwf	filter@sum+3,f
  2563  0F7E  300C               	movlw	12
  2564  0F7F  0AD2               	incf	filter@i,f
  2565  0F80  0252               	subwf	filter@i,w
  2566  0F81  1C03               	skipc
  2567  0F82  2F60               	goto	L25
  2568                           
  2569                           ;main.c: 1178: sum>>=3;
  2570  0F83  3003               	movlw	3
  2571  0F84                     u2545:	
  2572  0F84  1003               	clrc
  2573  0F85  0CD0               	rrf	filter@sum+3,f
  2574  0F86  0CCF               	rrf	filter@sum+2,f
  2575  0F87  0CCE               	rrf	filter@sum+1,f
  2576  0F88  0CCD               	rrf	filter@sum,f
  2577  0F89  3EFF               	addlw	-1
  2578  0F8A  1D03               	skipz
  2579  0F8B  2F84               	goto	u2545
  2580                           
  2581                           ;main.c: 1180: return sum;
  2582  0F8C  084E               	movf	filter@sum+1,w
  2583  0F8D  00A1               	movwf	?_filter+1
  2584  0F8E  084D               	movf	filter@sum,w
  2585  0F8F  00A0               	movwf	?_filter
  2586  0F90  0008               	return
  2587  0F91                     __end_of_filter:	
  2588  0F91                     PL3:	
  2589  0F91  00A0               	movwf	?___lldiv
  2590  0F92  3005               	movlw	5
  2591  0F93  01A1               	clrf	?___lldiv+1
  2592  0F94  01A2               	clrf	?___lldiv+2
  2593  0F95  01A3               	clrf	?___lldiv+3
  2594  0F96  00D3               	movwf	??_pCalWaterFlow
  2595  0F97  01D4               	clrf	??_pCalWaterFlow+1
  2596  0F98  01D5               	clrf	??_pCalWaterFlow+2
  2597  0F99  01D6               	clrf	??_pCalWaterFlow+3
  2598  0F9A  0866               	movf	pCalWaterFlow@val,w
  2599  0F9B  07D3               	addwf	??_pCalWaterFlow,f
  2600  0F9C  0867               	movf	pCalWaterFlow@val+1,w
  2601  0F9D  1803               	skipnc
  2602  0F9E  0F67               	incfsz	pCalWaterFlow@val+1,w
  2603  0F9F  07D4               	addwf	??_pCalWaterFlow+1,f
  2604  0FA0  0868               	movf	pCalWaterFlow@val+2,w
  2605  0FA1  1803               	skipnc
  2606  0FA2  0F68               	incfsz	pCalWaterFlow@val+2,w
  2607  0FA3  07D5               	addwf	??_pCalWaterFlow+2,f
  2608  0FA4  0869               	movf	pCalWaterFlow@val+3,w
  2609  0FA5  1803               	skipnc
  2610  0FA6  0A69               	incf	pCalWaterFlow@val+3,w
  2611  0FA7  07D6               	addwf	??_pCalWaterFlow+3,f
  2612  0FA8  0856               	movf	??_pCalWaterFlow+3,w
  2613  0FA9  00A7               	movwf	?___lldiv+7
  2614  0FAA  0855               	movf	??_pCalWaterFlow+2,w
  2615  0FAB  00A6               	movwf	?___lldiv+6
  2616  0FAC  0854               	movf	??_pCalWaterFlow+1,w
  2617  0FAD  00A5               	movwf	?___lldiv+5
  2618  0FAE  0853               	movf	??_pCalWaterFlow,w
  2619  0FAF  00A4               	movwf	?___lldiv+4
  2620  0FB0  0008               	return
  2621  0FB1                     PL8:	
  2622  0FB1  0823               	movf	?___lldiv+3,w
  2623  0FB2  00E9               	movwf	pCalWaterFlow@val+3
  2624  0FB3  0822               	movf	?___lldiv+2,w
  2625  0FB4  00E8               	movwf	pCalWaterFlow@val+2
  2626  0FB5  0821               	movf	?___lldiv+1,w
  2627  0FB6  00E7               	movwf	pCalWaterFlow@val+1
  2628  0FB7  0820               	movf	?___lldiv,w
  2629  0FB8  00E6               	movwf	pCalWaterFlow@val
  2630  0FB9  0008               	return
  2631  0FBA                     PL13:	
  2632  0FBA  0836               	movf	_wWFlow^(0+128),w
  2633  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  2634  0FBC  00D3               	movwf	??_pCalWaterFlow
  2635  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  2636  0FBE  0837               	movf	(_wWFlow+1)^(0+128),w
  2637  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0FC0  00D4               	movwf	??_pCalWaterFlow+1
  2639  0FC1  01D5               	clrf	??_pCalWaterFlow+2
  2640  0FC2  01D6               	clrf	??_pCalWaterFlow+3
  2641  0FC3  0869               	movf	pCalWaterFlow@val+3,w
  2642  0FC4  0008               	return
  2643  0FC5                     PL14:	
  2644  0FC5  0800               	movf	0,w
  2645  0FC6  00A2               	movwf	??_filter
  2646  0FC7  0A84               	incf	4,f
  2647  0FC8  0800               	movf	0,w
  2648  0FC9  00A3               	movwf	??_filter+1
  2649  0FCA  0008               	return
  2650  0FCB                     PL16:	
  2651  0FCB  0867               	movf	pCalWaterFlow@val+1,w
  2652  0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  2653  0FCD  00B7               	movwf	(_wWFlow+1)^(0+128)
  2654  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0FCF  0866               	movf	pCalWaterFlow@val,w
  2656  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  2657  0FD1  00B6               	movwf	_wWFlow^(0+128)
  2658  0FD2  300A               	movlw	10
  2659  0FD3  00BE               	movwf	_bFilterCnt^(0+128)
  2660  0FD4  0008               	return
  2661  0FD5                     PL19:	
  2662  0FD5  0D52               	rlf	filter@i,w
  2663  0FD6  3E28               	addlw	filter@value_buf& (0+255)
  2664  0FD7  0084               	movwf	4
  2665  0FD8  1383               	bcf	3,7	;select IRP bank0
  2666  0FD9  0008               	return
  2667  0FDA                     PL21:	
  2668  0FDA  0866               	movf	pCalWaterFlow@val,w
  2669  0FDB  1783               	bsf	3,7	;select IRP bank2
  2670  0FDC  0080               	movwf	0
  2671  0FDD  0A84               	incf	4,f
  2672  0FDE  0867               	movf	pCalWaterFlow@val+1,w
  2673  0FDF  0080               	movwf	0
  2674  0FE0  3410               	retlw	16
  2675  0FE1                     PL25:	
  2676  0FE1  0820               	movf	?_filter,w
  2677  0FE2  00E6               	movwf	pCalWaterFlow@val
  2678  0FE3  0821               	movf	?_filter+1,w
  2679  0FE4  00E7               	movwf	pCalWaterFlow@val+1
  2680  0FE5  01E8               	clrf	pCalWaterFlow@val+2
  2681  0FE6  01E9               	clrf	pCalWaterFlow@val+3
  2682  0FE7  0008               	return
  2683  0FE8                     PL26:	
  2684  0FE8  1003               	clrc
  2685  0FE9  0CE9               	rrf	pCalWaterFlow@val+3,f
  2686  0FEA  0CE8               	rrf	pCalWaterFlow@val+2,f
  2687  0FEB  0CE7               	rrf	pCalWaterFlow@val+1,f
  2688  0FEC  0CE6               	rrf	pCalWaterFlow@val,f
  2689  0FED  3EFF               	addlw	-1
  2690  0FEE  0008               	return
  2691  0FEF                     PL27:	
  2692  0FEF  0866               	movf	pCalWaterFlow@val,w
  2693  0FF0  0080               	movwf	0
  2694  0FF1  0A84               	incf	4,f
  2695  0FF2  0867               	movf	pCalWaterFlow@val+1,w
  2696  0FF3  0080               	movwf	0
  2697  0FF4  3408               	retlw	8
  2698  0FF5                     PL29:	
  2699  0FF5  1003               	clrc
  2700  0FF6  0D51               	rlf	filter@j,w
  2701  0FF7  3E28               	addlw	filter@value_buf& (0+255)
  2702  0FF8  0084               	movwf	4
  2703  0FF9  0008               	return
  2704  0FFA                     PL30:	
  2705  0FFA  1003               	clrc
  2706  0FFB  0D52               	rlf	filter@i,w
  2707  0FFC  3E28               	addlw	filter@value_buf& (0+255)
  2708  0FFD  0084               	movwf	4
  2709  0FFE  0822               	movf	??_filter,w
  2710  0FFF  0008               	return
  2711                           
  2712                           	psect	text932
  2713  000F                     __ptext932:	
  2714 ;; =============== function _pCalWaterFlow ends ============
  2715                           
  2716                           
  2717 ;; *************** function _pWashFlow *****************
  2718 ;; Defined at:
  2719 ;;		line 957 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;		None               void
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 40/20
  2730 ;;		On exit  : 60/20
  2731 ;;		Unchanged: FFF9F/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2733 ;;      Params:         0       0       0       0
  2734 ;;      Locals:         0       0       0       0
  2735 ;;      Temps:          0       0       0       0
  2736 ;;      Totals:         0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    4
  2740 ;; This function calls:
  2741 ;;		_pReLoadTime
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746  000F                     _pWashFlow:	
  2747                           
  2748                           ;main.c: 958: if (fRunWash)
  2749                           
  2750                           ; Regs used in _pWashFlow: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2751  000F  1FF0               	btfss	_fRunWash/(0+8),_fRunWash& (0+7)
  2752  0010  2835               	goto	l5255
  2753                           
  2754                           ;main.c: 959: {
  2755                           ;main.c: 961: pReLoadTime();
  2756  0011  2698  118A         	fcall	_pReLoadTime
  2757                           
  2758                           ;main.c: 962: switch (bRunWashStep)
  2759  0013  282D               	goto	l11137
  2760  0014                     l5257:	
  2761                           ;main.c: 963: {
  2762                           ;main.c: 965: case 0:
  2763                           
  2764                           
  2765                           ;main.c: 966: RA2=1;
  2766  0014  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0015  3064               	movlw	100
  2768  0016  1505               	bsf	5,2
  2769                           
  2770                           ;main.c: 967: RA1=0;
  2771  0017  1085               	bcf	5,1
  2772                           
  2773                           ;main.c: 969: if (++bRunWashT >= 100)
  2774  0018  1683               	bsf	3,5	;RP0=1, select bank1
  2775  0019  0ACA               	incf	_bRunWashT^(0+128),f
  2776  001A  024A               	subwf	_bRunWashT^(0+128),w
  2777  001B  1C03               	skipc
  2778  001C  0008               	return
  2779                           
  2780                           ;main.c: 970: {
  2781                           ;main.c: 971: bRunWashT=0;
  2782  001D  01CA               	clrf	_bRunWashT^(0+128)
  2783                           
  2784                           ;main.c: 972: bRunWashStep++;
  2785  001E  0AC9               	incf	_bRunWashStep^(0+128),f
  2786  001F  0008               	return
  2787  0020                     l5260:	
  2788                           ;main.c: 977: case 1:
  2789                           
  2790                           
  2791                           ;main.c: 978: RA2=1;
  2792  0020  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0021  3064               	movlw	100
  2794  0022  1505               	bsf	5,2
  2795                           
  2796                           ;main.c: 979: RA1=1;
  2797  0023  1485               	bsf	5,1
  2798                           
  2799                           ;main.c: 981: if (++bRunWashT >= 100)
  2800  0024  1683               	bsf	3,5	;RP0=1, select bank1
  2801  0025  0ACA               	incf	_bRunWashT^(0+128),f
  2802  0026  024A               	subwf	_bRunWashT^(0+128),w
  2803  0027  1C03               	skipc
  2804  0028  0008               	return
  2805                           
  2806                           ;main.c: 982: {
  2807                           ;main.c: 983: bRunWashT=0;
  2808  0029  01CA               	clrf	_bRunWashT^(0+128)
  2809                           
  2810                           ;main.c: 984: bRunWashStep=0;
  2811  002A  01C9               	clrf	_bRunWashStep^(0+128)
  2812                           
  2813                           ;main.c: 985: fRunWash=0;
  2814  002B  13F0               	bcf	_fRunWash/(0+8),_fRunWash& (0+7)
  2815  002C  0008               	return
  2816  002D                     l11137:	
  2817  002D  0849               	movf	_bRunWashStep^(0+128),w
  2818                           
  2819                           ; Switch size 1, requested type "space"
  2820                           ; Number of cases is 2, Range of values is 0 to 1
  2821                           ; switch strategies available:
  2822                           ; Name         Instructions Cycles
  2823                           ; simple_byte            7     4 (average)
  2824                           ; direct_byte           11     7 (fixed)
  2825                           ; jumptable            260     6 (fixed)
  2826                           ; rangetable             6     6 (fixed)
  2827                           ; spacedrange           10     9 (fixed)
  2828                           ; locatedrange           2     3 (fixed)
  2829                           ;	Chosen strategy is simple_byte
  2830  002E  3A00               	xorlw	0	; case 0
  2831  002F  1903               	skipnz
  2832  0030  2814               	goto	l5257
  2833  0031  3A01               	xorlw	1	; case 1
  2834  0032  1903               	skipnz
  2835  0033  2820               	goto	l5260
  2836  0034  283B               	goto	l5263
  2837  0035                     l5255:	
  2838                           
  2839                           ;main.c: 990: else
  2840                           ;main.c: 991: {
  2841                           ;main.c: 992: RA2=0;
  2842  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0036  1105               	bcf	5,2
  2844                           
  2845                           ;main.c: 993: RA1=0;
  2846  0037  1085               	bcf	5,1
  2847                           
  2848                           ;main.c: 994: bRunWashStep=0;
  2849  0038  1683               	bsf	3,5	;RP0=1, select bank1
  2850  0039  01C9               	clrf	_bRunWashStep^(0+128)
  2851                           
  2852                           ;main.c: 995: bRunWashT=0;
  2853  003A  01CA               	clrf	_bRunWashT^(0+128)
  2854  003B                     l5263:	
  2855  003B  0008               	return
  2856  003C                     __end_of_pWashFlow:	
  2857  003C                     __ptext934:	
  2858 ;; =============== function _pKeyProc ends ============
  2859                           
  2860                           
  2861 ;; *************** function _pReadEE *****************
  2862 ;; Defined at:
  2863 ;;		line 1259 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;		None               void
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 17F/20
  2874 ;;		On exit  : 7F/20
  2875 ;;		Unchanged: FFE80/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2877 ;;      Params:         0       0       0       0
  2878 ;;      Locals:         0       0       0       0
  2879 ;;      Temps:          0       0       0       0
  2880 ;;      Totals:         0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    4
  2884 ;; This function calls:
  2885 ;;		_eecpymem
  2886 ;;		_memcpyee
  2887 ;;		_pReLoadTime
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892  003C                     _pReadEE:	
  2893                           
  2894                           ;main.c: 1260: eecpymem(EE_DATA.arrEEData,01,7);
  2895                           
  2896                           ; Regs used in _pReadEE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2897  003C  1283               	bcf	3,5	;RP0=0, select bank0
  2898  003D  278A  118A         	fcall	PL24	;call to abstracted procedure
  2899  003F  255F  118A         	fcall	_eecpymem
  2900                           
  2901                           ;main.c: 1263: if (EE_DATA.var.STAT!=0xA5)
  2902  0041  1683               	bsf	3,5	;RP0=1, select bank1
  2903  0042  0858               	movf	(_EE_DATA^(0+128)+6),w
  2904  0043  3AA5               	xorlw	165
  2905  0044  1903               	skipnz
  2906  0045  2859               	goto	l11015
  2907  0046  30A5               	movlw	165
  2908                           
  2909                           ;main.c: 1264: {
  2910                           ;main.c: 1265: EE_DATA.var.TOLLITER = 0;
  2911  0047  01D2               	clrf	_EE_DATA^(0+128)
  2912  0048  01D3               	clrf	(_EE_DATA+1)^(0+128)
  2913  0049  01D4               	clrf	(_EE_DATA+2)^(0+128)
  2914  004A  01D5               	clrf	(_EE_DATA+3)^(0+128)
  2915                           
  2916                           ;main.c: 1266: EE_DATA.var.SETHOUR=1;
  2917  004B  01D6               	clrf	(_EE_DATA^(0+128)+4)
  2918  004C  0AD6               	incf	(_EE_DATA^(0+128)+4),f
  2919                           
  2920                           ;main.c: 1267: EE_DATA.var.SETMIN=0;
  2921  004D  01D7               	clrf	(_EE_DATA^(0+128)+5)
  2922                           
  2923                           ;main.c: 1268: EE_DATA.var.STAT = 0xA5;
  2924  004E  00D8               	movwf	(_EE_DATA^(0+128)+6)
  2925                           
  2926                           ;main.c: 1269: memcpyee(01,EE_DATA.arrEEData,7);
  2927  004F  1283               	bcf	3,5	;RP0=0, select bank0
  2928  0050  30D2               	movlw	_EE_DATA& (0+255)
  2929  0051  01A0               	clrf	?_memcpyee
  2930  0052  0AA0               	incf	?_memcpyee,f
  2931  0053  01A1               	clrf	?_memcpyee+1
  2932  0054  00A2               	movwf	?_memcpyee+2
  2933  0055  3007               	movlw	7
  2934  0056  00A3               	movwf	?_memcpyee+3
  2935  0057  27B7  118A         	fcall	_memcpyee
  2936  0059                     l11015:	
  2937                           
  2938                           ;main.c: 1270: }
  2939                           ;main.c: 1272: pReLoadTime();
  2940  0059  2E98               	ljmp	l10653
  2941  005A                     __end_of_pReadEE:	
  2942  005A                     __ptext927:	
  2943 ;; =============== function _main ends ============
  2944                           
  2945                           
  2946 ;; *************** function _pDispProc *****************
  2947 ;; Defined at:
  2948 ;;		line 675 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  s1              1   23[BANK0 ] unsigned char 
  2953 ;;  s0              1   22[BANK0 ] unsigned char 
  2954 ;;  s2              1   21[BANK0 ] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;		None               void
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 40/20
  2961 ;;		On exit  : 60/20
  2962 ;;		Unchanged: FFF9F/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2964 ;;      Params:         0       0       0       0
  2965 ;;      Locals:         0       3       0       0
  2966 ;;      Temps:          0       0       0       0
  2967 ;;      Totals:         0       3       0       0
  2968 ;;Total ram usage:        3 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    5
  2971 ;; This function calls:
  2972 ;;		_pConDisp
  2973 ;;		_pRunStep
  2974 ;;		___lldiv
  2975 ;;		___llmod
  2976 ;;		_pSwitchMode
  2977 ;;		___lbdiv
  2978 ;;		___lbmod
  2979 ;;		_pConLiter
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984  005A                     _pDispProc:	
  2985                           
  2986                           ;main.c: 676: U8 s0,s1,s2;
  2987                           ;main.c: 678: switch (bRunMode)
  2988                           
  2989                           ; Regs used in _pDispProc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2990  005A  29F0               	goto	l11711
  2991  005B                     l11547:	
  2992                           
  2993                           ;main.c: 684: pConDisp(wWFlow,1);
  2994  005B  1683               	bsf	3,5	;RP0=1, select bank1
  2995  005C  2754  118A         	fcall	PL15	;call to abstracted procedure
  2996  005E  24D5  118A         	fcall	_pConDisp
  2997                           
  2998                           ;main.c: 685: break;
  2999  0060  29FF               	goto	l5193
  3000  0061                     l11549:	
  3001                           
  3002                           ;main.c: 694: s2=16;
  3003  0061  3010               	movlw	16
  3004  0062  00B5               	movwf	pDispProc@s2
  3005  0063  300A               	movlw	10
  3006                           
  3007                           ;main.c: 695: s1=1;
  3008  0064  01B7               	clrf	pDispProc@s1
  3009  0065  0AB7               	incf	pDispProc@s1,f
  3010                           
  3011                           ;main.c: 696: s0=10;
  3012                           
  3013                           ;main.c: 698: if (++bRunCnt >= 20)
  3014  0066  2795  118A         	fcall	PL31	;call to abstracted procedure
  3015  0068  1C03               	skipc
  3016  0069  2926               	goto	l11643
  3017                           
  3018                           ;main.c: 699: pRunStep(1);
  3019  006A  3001               	movlw	1
  3020  006B  2209  118A         	fcall	_pRunStep
  3021  006D  2926               	goto	l11643
  3022  006E                     l11557:	
  3023                           
  3024                           ;main.c: 704: s2=17;
  3025  006E  3011               	movlw	17
  3026                           
  3027                           ;main.c: 705: s1=10;
  3028                           
  3029                           ;main.c: 706: s0=10;
  3030  006F  27B2  118A         	fcall	PL37	;call to abstracted procedure
  3031                           
  3032                           ;main.c: 708: if (fFlash)
  3033  0071  1EF0               	btfss	_fFlash/(0+8),_fFlash& (0+7)
  3034  0072  287E               	goto	l11563
  3035                           
  3036                           ;main.c: 709: {
  3037                           ;main.c: 710: s1=bSetTmp/10;
  3038  0073  300A               	movlw	10
  3039  0074  2737  118A         	fcall	PL10	;call to abstracted procedure
  3040  0076  22ED  118A         	fcall	___lldiv
  3041                           
  3042                           ;main.c: 711: s0=bSetTmp%10;
  3043  0078  2714  118A         	fcall	PL6	;call to abstracted procedure
  3044  007A  22AF  118A         	fcall	___llmod
  3045  007C  0820               	movf	?___llmod,w
  3046  007D  00B6               	movwf	pDispProc@s0
  3047  007E                     l11563:	
  3048                           
  3049                           ;main.c: 712: }
  3050                           ;main.c: 714: if (++bRunCnt >= 100)
  3051  007E  3064               	movlw	100
  3052  007F  0AEB               	incf	_bRunCnt,f
  3053  0080  026B               	subwf	_bRunCnt,w
  3054  0081  1C03               	skipc
  3055  0082  2926               	goto	l11643
  3056                           
  3057                           ;main.c: 715: pSwitchMode(0);
  3058  0083  3000               	movlw	0
  3059  0084  2210  118A         	fcall	_pSwitchMode
  3060  0086  2926               	goto	l11643
  3061  0087                     l11567:	
  3062                           
  3063                           ;main.c: 720: s2=17;
  3064  0087  3011               	movlw	17
  3065  0088  00B5               	movwf	pDispProc@s2
  3066                           
  3067                           ;main.c: 721: s1=EE_DATA.var.SETHOUR/10;
  3068  0089  300A               	movlw	10
  3069  008A  00A0               	movwf	?___lbdiv
  3070  008B  1683               	bsf	3,5	;RP0=1, select bank1
  3071  008C  0856               	movf	(_EE_DATA^(0+128)+4),w
  3072  008D  2218  118A         	fcall	___lbdiv
  3073  008F  00B7               	movwf	pDispProc@s1
  3074                           
  3075                           ;main.c: 722: s0=EE_DATA.var.SETHOUR%10;
  3076  0090  300A               	movlw	10
  3077  0091  00A0               	movwf	?___lbmod
  3078  0092  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0093  0856               	movf	(_EE_DATA^(0+128)+4),w
  3080  0094  2234  118A         	fcall	___lbmod
  3081                           
  3082                           ;main.c: 724: if (++bRunCnt >= 20)
  3083  0096  2795  118A         	fcall	PL31	;call to abstracted procedure
  3084  0098  1C03               	skipc
  3085  0099  2926               	goto	l11643
  3086                           
  3087                           ;main.c: 725: {
  3088                           ;main.c: 726: if ((EE_DATA.var.SETHOUR==0)&&(EE_DATA.var.SETMIN==0))
  3089  009A  1683               	bsf	3,5	;RP0=1, select bank1
  3090  009B  08D6               	movf	(_EE_DATA^(0+128)+4),f
  3091  009C  1D03               	skipz
  3092  009D  28A3               	goto	l11581
  3093  009E  08D7               	movf	(_EE_DATA^(0+128)+5),f
  3094  009F  1D03               	skipz
  3095  00A0  28A3               	goto	l11581
  3096                           
  3097                           ;main.c: 727: bSetTmp=10;
  3098  00A1  300A               	movlw	10
  3099  00A2  28AA               	goto	L1
  3100  00A3                     l11581:	
  3101                           
  3102                           ;main.c: 728: else if (EE_DATA.var.SETHOUR==24)
  3103  00A3  0856               	movf	(_EE_DATA^(0+128)+4),w
  3104  00A4  3A18               	xorlw	24
  3105  00A5  1D03               	skipz
  3106  00A6  28A9               	goto	l11585
  3107                           
  3108                           ;main.c: 729: bSetTmp=0;
  3109  00A7  01F9               	clrf	_bSetTmp
  3110  00A8  28AB               	goto	L2
  3111  00A9                     l11585:	
  3112                           
  3113                           ;main.c: 730: else
  3114                           ;main.c: 731: bSetTmp=EE_DATA.var.SETMIN;
  3115  00A9  0857               	movf	(_EE_DATA^(0+128)+5),w
  3116  00AA                     L1:	
  3117  00AA  00F9               	movwf	_bSetTmp
  3118  00AB                     L2:	
  3119  00AB  3003               	movlw	3
  3120  00AC  01FA               	clrf	_bSetTmp+1
  3121  00AD  01FB               	clrf	_bSetTmp+2
  3122  00AE  01FC               	clrf	_bSetTmp+3
  3123                           
  3124                           ;main.c: 732: pRunStep(3);
  3125  00AF  2209  118A         	fcall	_pRunStep
  3126  00B1  2926               	goto	l11643
  3127  00B2                     l11589:	
  3128                           
  3129                           ;main.c: 738: s2=18;
  3130  00B2  3012               	movlw	18
  3131                           
  3132                           ;main.c: 739: s1=10;
  3133                           
  3134                           ;main.c: 740: s0=10;
  3135  00B3  27B2  118A         	fcall	PL37	;call to abstracted procedure
  3136                           
  3137                           ;main.c: 742: if (fFlash)
  3138  00B5  1EF0               	btfss	_fFlash/(0+8),_fFlash& (0+7)
  3139  00B6  28C2               	goto	l11595
  3140                           
  3141                           ;main.c: 743: {
  3142                           ;main.c: 744: s1=bSetTmp/10;
  3143  00B7  300A               	movlw	10
  3144  00B8  2737  118A         	fcall	PL10	;call to abstracted procedure
  3145  00BA  22ED  118A         	fcall	___lldiv
  3146                           
  3147                           ;main.c: 745: s0=bSetTmp%10;
  3148  00BC  2714  118A         	fcall	PL6	;call to abstracted procedure
  3149  00BE  22AF  118A         	fcall	___llmod
  3150  00C0  0820               	movf	?___llmod,w
  3151  00C1  00B6               	movwf	pDispProc@s0
  3152  00C2                     l11595:	
  3153                           
  3154                           ;main.c: 746: }
  3155                           ;main.c: 748: if (++bRunCnt >= 100)
  3156  00C2  3064               	movlw	100
  3157  00C3  0AEB               	incf	_bRunCnt,f
  3158  00C4  026B               	subwf	_bRunCnt,w
  3159  00C5  1C03               	skipc
  3160  00C6  2926               	goto	l11643
  3161                           
  3162                           ;main.c: 749: pRunStep(4);
  3163  00C7  3004               	movlw	4
  3164  00C8  2209  118A         	fcall	_pRunStep
  3165  00CA  2926               	goto	l11643
  3166  00CB                     l11599:	
  3167                           
  3168                           ;main.c: 754: if ((EE_DATA.var.SETHOUR==0)&&(EE_DATA.var.SETMIN==0))
  3169  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  3170  00CC  08D6               	movf	(_EE_DATA^(0+128)+4),f
  3171  00CD  1D03               	skipz
  3172  00CE  28D5               	goto	l11605
  3173  00CF  08D7               	movf	(_EE_DATA^(0+128)+5),f
  3174  00D0  1D03               	skipz
  3175  00D1  28D5               	goto	l11605
  3176                           
  3177                           ;main.c: 755: EE_DATA.var.SETMIN = 50;
  3178  00D2  3032               	movlw	50
  3179  00D3  00D7               	movwf	(_EE_DATA^(0+128)+5)
  3180  00D4  28E1               	goto	l5213
  3181  00D5                     l11605:	
  3182                           
  3183                           ;main.c: 756: else if ((EE_DATA.var.SETHOUR==24)&&(EE_DATA.var.SETMIN!=0))
  3184  00D5  0856               	movf	(_EE_DATA^(0+128)+4),w
  3185  00D6  3A18               	xorlw	24
  3186  00D7  1D03               	skipz
  3187  00D8  28DE               	goto	l11611
  3188  00D9  0857               	movf	(_EE_DATA^(0+128)+5),w
  3189  00DA  1903               	btfsc	3,2
  3190  00DB  28DE               	goto	l11611
  3191                           
  3192                           ;main.c: 757: EE_DATA.var.SETMIN = 0;
  3193  00DC  01D7               	clrf	(_EE_DATA^(0+128)+5)
  3194  00DD  28E1               	goto	l5213
  3195  00DE                     l11611:	
  3196                           
  3197                           ;main.c: 758: else
  3198                           ;main.c: 759: pSwitchMode(0);
  3199  00DE  3000               	movlw	0
  3200  00DF  2210  118A         	fcall	_pSwitchMode
  3201  00E1                     l5213:	
  3202                           
  3203                           ;main.c: 761: pRunStep(5);
  3204  00E1  3005               	movlw	5
  3205  00E2  2209  118A         	fcall	_pRunStep
  3206                           
  3207                           ;main.c: 762: break;
  3208  00E4  2926               	goto	l11643
  3209  00E5                     l11613:	
  3210                           
  3211                           ;main.c: 766: s2=14;
  3212  00E5  300E               	movlw	14
  3213  00E6  00B5               	movwf	pDispProc@s2
  3214                           
  3215                           ;main.c: 767: s1=14;
  3216  00E7  00B7               	movwf	pDispProc@s1
  3217                           
  3218                           ;main.c: 768: s0=14;
  3219  00E8  00B6               	movwf	pDispProc@s0
  3220  00E9  3014               	movlw	20
  3221                           
  3222                           ;main.c: 770: fErr=1;
  3223  00EA  15F0               	bsf	_fErr/(0+8),_fErr& (0+7)
  3224                           
  3225                           ;main.c: 772: if (++bRunCnt >= 20)
  3226  00EB  0AEB               	incf	_bRunCnt,f
  3227  00EC  026B               	subwf	_bRunCnt,w
  3228  00ED  1C03               	skipc
  3229  00EE  2926               	goto	l11643
  3230                           
  3231                           ;main.c: 773: pRunStep(6);
  3232  00EF  3006               	movlw	6
  3233  00F0  2209  118A         	fcall	_pRunStep
  3234  00F2  2926               	goto	l11643
  3235  00F3                     l11621:	
  3236                           
  3237                           ;main.c: 778: s2=18;
  3238  00F3  3012               	movlw	18
  3239  00F4  00B5               	movwf	pDispProc@s2
  3240                           
  3241                           ;main.c: 779: s1=EE_DATA.var.SETMIN/10;
  3242  00F5  300A               	movlw	10
  3243  00F6  00A0               	movwf	?___lbdiv
  3244  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  3245  00F8  0857               	movf	(_EE_DATA^(0+128)+5),w
  3246  00F9  2218  118A         	fcall	___lbdiv
  3247  00FB  00B7               	movwf	pDispProc@s1
  3248                           
  3249                           ;main.c: 780: s0=EE_DATA.var.SETMIN%10;
  3250  00FC  300A               	movlw	10
  3251  00FD  00A0               	movwf	?___lbmod
  3252  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  3253  00FF  0857               	movf	(_EE_DATA^(0+128)+5),w
  3254  0100  2234  118A         	fcall	___lbmod
  3255                           
  3256                           ;main.c: 782: if (++bRunCnt >= 20)
  3257  0102  2795  118A         	fcall	PL31	;call to abstracted procedure
  3258  0104  1C03               	skipc
  3259  0105  2926               	goto	l11643
  3260                           
  3261                           ;main.c: 783: {
  3262                           ;main.c: 784: if (fErr)
  3263  0106  1DF0               	btfss	_fErr/(0+8),_fErr& (0+7)
  3264  0107  290D               	goto	l11635
  3265  0108  3000               	movlw	0
  3266                           
  3267                           ;main.c: 785: {
  3268                           ;main.c: 786: fErr=0;
  3269  0109  11F0               	bcf	_fErr/(0+8),_fErr& (0+7)
  3270                           
  3271                           ;main.c: 787: pSwitchMode(0);
  3272  010A  2210  118A         	fcall	_pSwitchMode
  3273                           
  3274                           ;main.c: 788: }
  3275  010C  2926               	goto	l11643
  3276  010D                     l11635:	
  3277                           
  3278                           ;main.c: 789: else
  3279                           ;main.c: 790: {
  3280                           ;main.c: 791: bSetTmp = EE_DATA.var.TOLLITER;
  3281  010D  1683               	bsf	3,5	;RP0=1, select bank1
  3282  010E  0855               	movf	(_EE_DATA+3)^(0+128),w
  3283  010F  00FC               	movwf	_bSetTmp+3
  3284  0110  0854               	movf	(_EE_DATA+2)^(0+128),w
  3285  0111  00FB               	movwf	_bSetTmp+2
  3286  0112  0853               	movf	(_EE_DATA+1)^(0+128),w
  3287  0113  00FA               	movwf	_bSetTmp+1
  3288  0114  0852               	movf	_EE_DATA^(0+128),w
  3289  0115  00F9               	movwf	_bSetTmp
  3290                           
  3291                           ;main.c: 792: pSwitchMode(2);
  3292  0116  3002               	movlw	2
  3293  0117  2210  118A         	fcall	_pSwitchMode
  3294  0119  2926               	goto	l11643
  3295  011A                     l11641:	
  3296  011A  086D               	movf	_bRunStep,w
  3297                           
  3298                           ; Switch size 1, requested type "space"
  3299                           ; Number of cases is 7, Range of values is 0 to 6
  3300                           ; switch strategies available:
  3301                           ; Name         Instructions Cycles
  3302                           ; direct_byte           21     7 (fixed)
  3303                           ; simple_byte           22    12 (average)
  3304                           ; jumptable            260     6 (fixed)
  3305                           ; rangetable            11     6 (fixed)
  3306                           ; spacedrange           20     9 (fixed)
  3307                           ; locatedrange           7     3 (fixed)
  3308                           ;	Chosen strategy is direct_byte
  3309  011B  0084               	movwf	4
  3310  011C  3007               	movlw	7
  3311  011D  0204               	subwf	4,w
  3312  011E  1803               	skipnc
  3313  011F  2926               	goto	l11643
  3314  0120  3007               	movlw	high S11825
  3315  0121  008A               	movwf	10
  3316  0122  1003               	clrc
  3317  0123  0D04               	rlf	4,w
  3318  0124  3EEC               	addlw	low S11825
  3319  0125  0082               	movwf	2
  3320  0126                     l11643:	
  3321                           
  3322                           ;main.c: 798: bSeg2 = ~tabSeg[s2];
  3323  0126  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0127  0835               	movf	pDispProc@s2,w
  3325  0128  3E01               	addlw	low (_tabSeg-__stringbase)
  3326  0129  0084               	movwf	4
  3327  012A  158A  2000  118A   	fcall	stringdir
  3328                           
  3329                           ;main.c: 799: bSeg1 = ~tabSeg[s1];
  3330  012D  274C               	fcall	PL12	;call to abstracted procedure
  3331  012E  158A  2000  118A   	fcall	stringdir
  3332                           
  3333                           ;main.c: 800: bSeg0 = ~tabSeg[s0];
  3334  0131  2744               	fcall	PL11	;call to abstracted procedure
  3335  0132  158A  2000  118A   	fcall	stringdir
  3336  0135  3AFF               	xorlw	255
  3337  0136  1683               	bsf	3,5	;RP0=1, select bank1
  3338  0137  00CE               	movwf	_bSeg0^(0+128)
  3339                           
  3340                           ;main.c: 802: break;
  3341  0138  29FF               	goto	l5193
  3342  0139                     l11645:	
  3343                           
  3344                           ;main.c: 811: bSeg2 = ~tabSeg[16];
  3345  0139  3011               	movlw	(_tabSeg-__stringbase+16)
  3346  013A  0084               	movwf	4
  3347  013B  158A  2000  118A   	fcall	stringdir
  3348  013E  3AFF               	xorlw	255
  3349  013F  1683               	bsf	3,5	;RP0=1, select bank1
  3350  0140  00D0               	movwf	_bSeg2^(0+128)
  3351                           
  3352                           ;main.c: 812: bSeg1 = ~tabSeg[2];
  3353  0141  3003               	movlw	(_tabSeg-__stringbase+2)
  3354  0142  0084               	movwf	4
  3355  0143  158A  2000  118A   	fcall	stringdir
  3356                           
  3357                           ;main.c: 813: bSeg0 = ~tabSeg[10];
  3358  0146  27A9               	fcall	PL35	;call to abstracted procedure
  3359  0147  158A  2000  118A   	fcall	stringdir
  3360  014A  3AFF               	xorlw	255
  3361  014B  00CE               	movwf	_bSeg0^(0+128)
  3362                           
  3363                           ;main.c: 815: if (++bRunCnt >= 20)
  3364  014C  3014               	movlw	20
  3365  014D  1283               	bcf	3,5	;RP0=0, select bank0
  3366  014E  0AEB               	incf	_bRunCnt,f
  3367  014F  026B               	subwf	_bRunCnt,w
  3368  0150  1C03               	skipc
  3369  0151  29FF               	goto	l5193
  3370                           
  3371                           ;main.c: 816: pRunStep(1);
  3372  0152  3001               	movlw	1
  3373  0153  2209  118A         	fcall	_pRunStep
  3374  0155  29FF               	goto	l5193
  3375  0156                     l11651:	
  3376                           
  3377                           ;main.c: 821: pConLiter(bSetTmp,1);
  3378  0156  275E  118A         	fcall	PL17	;call to abstracted procedure
  3379  0158  0AB1               	incf	?_pConLiter+4,f
  3380  0159  2251  118A         	fcall	_pConLiter
  3381                           
  3382                           ;main.c: 823: if (++bRunCnt >= 40)
  3383  015B  27A4  118A         	fcall	PL34	;call to abstracted procedure
  3384  015D  1C03               	skipc
  3385  015E  29FF               	goto	l5193
  3386                           
  3387                           ;main.c: 824: pRunStep(2);
  3388  015F  3002               	movlw	2
  3389  0160  2209  118A         	fcall	_pRunStep
  3390  0162  29FF               	goto	l5193
  3391  0163                     l11657:	
  3392                           
  3393                           ;main.c: 829: pConLiter(bSetTmp,0);
  3394  0163  275E  118A         	fcall	PL17	;call to abstracted procedure
  3395  0165  2251  118A         	fcall	_pConLiter
  3396                           
  3397                           ;main.c: 831: if (++bRunCnt >= 100)
  3398  0167  279A  118A         	fcall	PL32	;call to abstracted procedure
  3399  0169  1C03               	skipc
  3400  016A  29FF               	goto	l5193
  3401                           
  3402                           ;main.c: 832: pSwitchMode(0);
  3403  016B  3000               	movlw	0
  3404  016C  2210  118A         	fcall	_pSwitchMode
  3405  016E  29FF               	goto	l5193
  3406  016F                     l11665:	
  3407  016F  086D               	movf	_bRunStep,w
  3408                           
  3409                           ; Switch size 1, requested type "space"
  3410                           ; Number of cases is 3, Range of values is 0 to 2
  3411                           ; switch strategies available:
  3412                           ; Name         Instructions Cycles
  3413                           ; simple_byte           10     6 (average)
  3414                           ; direct_byte           13     7 (fixed)
  3415                           ; jumptable            260     6 (fixed)
  3416                           ; rangetable             7     6 (fixed)
  3417                           ; spacedrange           12     9 (fixed)
  3418                           ; locatedrange           3     3 (fixed)
  3419                           ;	Chosen strategy is simple_byte
  3420  0170  3A00               	xorlw	0	; case 0
  3421  0171  1903               	skipnz
  3422  0172  2939               	goto	l11645
  3423  0173  3A01               	xorlw	1	; case 1
  3424  0174  1903               	skipnz
  3425  0175  2956               	goto	l11651
  3426  0176  3A03               	xorlw	3	; case 2
  3427  0177  1903               	skipnz
  3428  0178  2963               	goto	l11657
  3429  0179  29FF               	goto	l5193
  3430  017A                     l11667:	
  3431                           
  3432                           ;main.c: 845: s1=bHour/10;
  3433  017A  300A               	movlw	10
  3434  017B  00A0               	movwf	?___lbdiv
  3435  017C  1683               	bsf	3,5	;RP0=1, select bank1
  3436  017D  0842               	movf	_bHour^(0+128),w
  3437  017E  2218  118A         	fcall	___lbdiv
  3438  0180  00B7               	movwf	pDispProc@s1
  3439                           
  3440                           ;main.c: 846: s0=bHour%10;
  3441  0181  300A               	movlw	10
  3442  0182  00A0               	movwf	?___lbmod
  3443  0183  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0184  0842               	movf	_bHour^(0+128),w
  3445  0185  2234               	fcall	___lbmod
  3446  0186  00B6               	movwf	pDispProc@s0
  3447                           
  3448                           ;main.c: 848: bSeg2 = ~tabSeg[17];
  3449  0187  3012               	movlw	(_tabSeg-__stringbase+17)
  3450  0188  0084               	movwf	4
  3451  0189  158A  2000  118A   	fcall	stringdir
  3452                           
  3453                           ;main.c: 849: bSeg1 = ~tabSeg[s1];
  3454  018C  274C               	fcall	PL12	;call to abstracted procedure
  3455  018D  158A  2000  118A   	fcall	stringdir
  3456                           
  3457                           ;main.c: 850: bSeg0 = ~tabSeg[s0]&0x7F;
  3458  0190  2744               	fcall	PL11	;call to abstracted procedure
  3459  0191  158A  2000  118A   	fcall	stringdir
  3460  0194  3AFF               	xorlw	255
  3461  0195  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0196  00CE               	movwf	_bSeg0^(0+128)
  3463  0197  3028               	movlw	40
  3464  0198  13CE               	bcf	_bSeg0^(0+128),7
  3465                           
  3466                           ;main.c: 852: if (++bRunCnt >= 40)
  3467  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3468  019A  0AEB               	incf	_bRunCnt,f
  3469  019B  026B               	subwf	_bRunCnt,w
  3470  019C  1C03               	skipc
  3471  019D  29FF               	goto	l5193
  3472                           
  3473                           ;main.c: 853: pRunStep(1);
  3474  019E  3001               	movlw	1
  3475  019F  2209  118A         	fcall	_pRunStep
  3476  01A1  29FF               	goto	l5193
  3477  01A2                     l11681:	
  3478                           
  3479                           ;main.c: 858: s1=bMin/10;
  3480  01A2  300A               	movlw	10
  3481  01A3  00A0               	movwf	?___lbdiv
  3482  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3483  01A5  0847               	movf	_bMin^(0+128),w
  3484  01A6  2218  118A         	fcall	___lbdiv
  3485  01A8  00B7               	movwf	pDispProc@s1
  3486                           
  3487                           ;main.c: 859: s0=bMin%10;
  3488  01A9  300A               	movlw	10
  3489  01AA  00A0               	movwf	?___lbmod
  3490  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  3491  01AC  0847               	movf	_bMin^(0+128),w
  3492  01AD  2234               	fcall	___lbmod
  3493  01AE  00B6               	movwf	pDispProc@s0
  3494                           
  3495                           ;main.c: 861: bSeg2 = ~tabSeg[18];
  3496  01AF  3013               	movlw	(_tabSeg-__stringbase+18)
  3497  01B0  0084               	movwf	4
  3498  01B1  158A  2000  118A   	fcall	stringdir
  3499                           
  3500                           ;main.c: 862: bSeg1 = ~tabSeg[s1];
  3501  01B4  274C               	fcall	PL12	;call to abstracted procedure
  3502  01B5  158A  2000  118A   	fcall	stringdir
  3503                           
  3504                           ;main.c: 863: bSeg0 = ~tabSeg[s0];
  3505  01B8  2744               	fcall	PL11	;call to abstracted procedure
  3506  01B9  158A  2000  118A   	fcall	stringdir
  3507  01BC  3AFF               	xorlw	255
  3508  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  3509  01BE  00CE               	movwf	_bSeg0^(0+128)
  3510                           
  3511                           ;main.c: 865: if (++bRunCnt >= 100)
  3512  01BF  279A  118A         	fcall	PL32	;call to abstracted procedure
  3513  01C1  1C03               	skipc
  3514  01C2  29FF               	goto	l5193
  3515                           
  3516                           ;main.c: 866: pSwitchMode(0);
  3517  01C3  3000               	movlw	0
  3518  01C4  2210  118A         	fcall	_pSwitchMode
  3519  01C6  29FF               	goto	l5193
  3520  01C7                     l11693:	
  3521                           
  3522                           ;main.c: 871: pConLiter(EE_DATA.var.TOLLITER,1);
  3523  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  3524  01C8  26F1  118A         	fcall	PL2	;call to abstracted procedure
  3525  01CA  0AB1               	incf	?_pConLiter+4,f
  3526  01CB  2251  118A         	fcall	_pConLiter
  3527                           
  3528                           ;main.c: 873: if (++bRunCnt >= 40)
  3529  01CD  27A4  118A         	fcall	PL34	;call to abstracted procedure
  3530  01CF  1C03               	skipc
  3531  01D0  29FF               	goto	l5193
  3532                           
  3533                           ;main.c: 874: pRunStep(3);
  3534  01D1  3003               	movlw	3
  3535  01D2  2209  118A         	fcall	_pRunStep
  3536  01D4  29FF               	goto	l5193
  3537  01D5                     l11699:	
  3538                           
  3539                           ;main.c: 879: pConLiter(EE_DATA.var.TOLLITER,0);
  3540  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  3541  01D6  26F1  118A         	fcall	PL2	;call to abstracted procedure
  3542  01D8  2251  118A         	fcall	_pConLiter
  3543                           
  3544                           ;main.c: 881: if (++bRunCnt >= 100)
  3545  01DA  279A  118A         	fcall	PL32	;call to abstracted procedure
  3546  01DC  1C03               	skipc
  3547  01DD  29FF               	goto	l5193
  3548                           
  3549                           ;main.c: 882: pSwitchMode(0);
  3550  01DE  3000               	movlw	0
  3551  01DF  2210  118A         	fcall	_pSwitchMode
  3552  01E1  29FF               	goto	l5193
  3553  01E2                     l11707:	
  3554  01E2  086D               	movf	_bRunStep,w
  3555                           
  3556                           ; Switch size 1, requested type "space"
  3557                           ; Number of cases is 4, Range of values is 0 to 3
  3558                           ; switch strategies available:
  3559                           ; Name         Instructions Cycles
  3560                           ; simple_byte           13     7 (average)
  3561                           ; direct_byte           15     7 (fixed)
  3562                           ; jumptable            260     6 (fixed)
  3563                           ; rangetable             8     6 (fixed)
  3564                           ; spacedrange           14     9 (fixed)
  3565                           ; locatedrange           4     3 (fixed)
  3566                           ;	Chosen strategy is simple_byte
  3567  01E3  3A00               	xorlw	0	; case 0
  3568  01E4  1903               	skipnz
  3569  01E5  297A               	goto	l11667
  3570  01E6  3A01               	xorlw	1	; case 1
  3571  01E7  1903               	skipnz
  3572  01E8  29A2               	goto	l11681
  3573  01E9  3A03               	xorlw	3	; case 2
  3574  01EA  1903               	skipnz
  3575  01EB  29C7               	goto	l11693
  3576  01EC  3A01               	xorlw	1	; case 3
  3577  01ED  1903               	skipnz
  3578  01EE  29D5               	goto	l11699
  3579  01EF  29FF               	goto	l5193
  3580  01F0                     l11711:	
  3581  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  3582  01F1  086C               	movf	_bRunMode,w
  3583                           
  3584                           ; Switch size 1, requested type "space"
  3585                           ; Number of cases is 4, Range of values is 0 to 3
  3586                           ; switch strategies available:
  3587                           ; Name         Instructions Cycles
  3588                           ; simple_byte           13     7 (average)
  3589                           ; direct_byte           15     7 (fixed)
  3590                           ; jumptable            260     6 (fixed)
  3591                           ; rangetable             8     6 (fixed)
  3592                           ; spacedrange           14     9 (fixed)
  3593                           ; locatedrange           4     3 (fixed)
  3594                           ;	Chosen strategy is simple_byte
  3595  01F2  3A00               	xorlw	0	; case 0
  3596  01F3  1903               	skipnz
  3597  01F4  285B               	goto	l11547
  3598  01F5  3A01               	xorlw	1	; case 1
  3599  01F6  1903               	skipnz
  3600  01F7  291A               	goto	l11641
  3601  01F8  3A03               	xorlw	3	; case 2
  3602  01F9  1903               	skipnz
  3603  01FA  296F               	goto	l11665
  3604  01FB  3A01               	xorlw	1	; case 3
  3605  01FC  1903               	skipnz
  3606  01FD  29E2               	goto	l11707
  3607  01FE  29FF               	goto	l5193
  3608  01FF                     l5193:	
  3609                           
  3610                           ;main.c: 892: if (fRunWash)
  3611  01FF  1FF0               	btfss	_fRunWash/(0+8),_fRunWash& (0+7)
  3612  0200  2A05               	goto	l5242
  3613                           
  3614                           ;main.c: 893: {
  3615                           ;main.c: 894: bLed.bits.b0 = 0;
  3616  0201  1683               	bsf	3,5	;RP0=1, select bank1
  3617  0202  1046               	bcf	_bLed^(0+128),0
  3618                           
  3619                           ;main.c: 895: bLed.bits.b1 = 1;
  3620  0203  14C6               	bsf	_bLed^(0+128),1
  3621                           
  3622                           ;main.c: 896: }
  3623  0204  0008               	return
  3624  0205                     l5242:	
  3625                           
  3626                           ;main.c: 897: else
  3627                           ;main.c: 898: {
  3628                           ;main.c: 899: bLed.bits.b0 = 1;
  3629  0205  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0206  1446               	bsf	_bLed^(0+128),0
  3631                           
  3632                           ;main.c: 900: bLed.bits.b1 = 0;
  3633  0207  10C6               	bcf	_bLed^(0+128),1
  3634  0208  0008               	return
  3635  0209                     __end_of_pDispProc:	
  3636  0209                     __ptext953:	
  3637 ;; =============== function _pReLoadTime ends ============
  3638                           
  3639                           
  3640 ;; *************** function _pRunStep *****************
  3641 ;; Defined at:
  3642 ;;		line 906 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  step            1    wreg     unsigned char 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  step            1    0[BANK0 ] unsigned char 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;		None               void
  3649 ;; Registers used:
  3650 ;;		wreg, status,2
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 60/20
  3654 ;;		Unchanged: FFF9F/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3656 ;;      Params:         0       0       0       0
  3657 ;;      Locals:         0       1       0       0
  3658 ;;      Temps:          0       0       0       0
  3659 ;;      Totals:         0       1       0       0
  3660 ;;Total ram usage:        1 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    3
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_pKeyProc
  3667 ;;		_pDispProc
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670  0209                     _pRunStep:	
  3671                           
  3672                           ; Regs used in _pRunStep: [wreg+status,2]
  3673                           ;pRunStep@step stored from wreg
  3674  0209  1283               	bcf	3,5	;RP0=0, select bank0
  3675  020A  1303               	bcf	3,6	;RP1=0, select bank0
  3676  020B  00A0               	movwf	pRunStep@step
  3677                           
  3678                           ;main.c: 907: bRunCnt=0;
  3679  020C  01EB               	clrf	_bRunCnt
  3680                           
  3681                           ;main.c: 908: bRunStep=step;
  3682  020D  00ED               	movwf	_bRunStep
  3683                           
  3684                           ;main.c: 909: {bFlashCnt=3; fFlash=1;};
  3685  020E  3003               	movlw	3
  3686  020F  2FAE               	ljmp	PL36	;call to abstracted procedure
  3687  0210                     __end_of_pRunStep:	
  3688  0210                     __ptext954:	
  3689 ;; =============== function _pRunStep ends ============
  3690                           
  3691                           
  3692 ;; *************** function _pSwitchMode *****************
  3693 ;; Defined at:
  3694 ;;		line 591 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  mod             1    wreg     unsigned char 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  mod             1    0[BANK0 ] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;		None               void
  3701 ;; Registers used:
  3702 ;;		wreg, status,2
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 60/20
  3706 ;;		Unchanged: FFF9F/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3708 ;;      Params:         0       0       0       0
  3709 ;;      Locals:         0       1       0       0
  3710 ;;      Temps:          0       0       0       0
  3711 ;;      Totals:         0       1       0       0
  3712 ;;Total ram usage:        1 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    3
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_pKeyProc
  3719 ;;		_pDispProc
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722  0210                     _pSwitchMode:	
  3723                           
  3724                           ; Regs used in _pSwitchMode: [wreg+status,2]
  3725                           ;pSwitchMode@mod stored from wreg
  3726  0210  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0211  1303               	bcf	3,6	;RP1=0, select bank0
  3728  0212  00A0               	movwf	pSwitchMode@mod
  3729                           
  3730                           ;main.c: 592: bRunMode=mod;
  3731  0213  00EC               	movwf	_bRunMode
  3732  0214  3003               	movlw	3
  3733                           
  3734                           ;main.c: 593: bRunStep=0;
  3735  0215  01ED               	clrf	_bRunStep
  3736  0216  01EB               	clrf	_bRunCnt
  3737                           
  3738                           ;main.c: 595: {bFlashCnt=3; fFlash=1;};
  3739  0217  2FAE               	ljmp	PL36	;call to abstracted procedure
  3740  0218                     __end_of_pSwitchMode:	
  3741  0218                     __ptext940:	
  3742 ;; =============== function ___lbmod ends ============
  3743                           
  3744                           
  3745 ;; *************** function ___lbdiv *****************
  3746 ;; Defined at:
  3747 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  dividend        1    wreg     unsigned char 
  3750 ;;  divisor         1    0[BANK0 ] unsigned char 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  dividend        1    1[BANK0 ] unsigned char 
  3753 ;;  quotient        1    3[BANK0 ] unsigned char 
  3754 ;;  counter         1    2[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      unsigned char 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0
  3759 ;; Tracked objects:
  3760 ;;		On entry : 60/20
  3761 ;;		On exit  : 60/0
  3762 ;;		Unchanged: FFF9F/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3764 ;;      Params:         0       1       0       0
  3765 ;;      Locals:         0       3       0       0
  3766 ;;      Temps:          0       0       0       0
  3767 ;;      Totals:         0       4       0       0
  3768 ;;Total ram usage:        4 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    3
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_pDispProc
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777  0218                     ___lbdiv:	
  3778                           
  3779                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  3780                           ;___lbdiv@dividend stored from wreg
  3781  0218  1283               	bcf	3,5	;RP0=0, select bank0
  3782  0219  00A1               	movwf	___lbdiv@dividend
  3783  021A  01A3               	clrf	___lbdiv@quotient
  3784  021B  0820               	movf	___lbdiv@divisor,w
  3785  021C  1903               	btfsc	3,2
  3786  021D  2A32               	goto	l10887
  3787  021E  01A2               	clrf	___lbdiv@counter
  3788  021F                     l10873:	
  3789  021F  0AA2               	incf	___lbdiv@counter,f
  3790  0220  1BA0               	btfsc	___lbdiv@divisor,7
  3791  0221  2A25               	goto	l8145
  3792  0222  1003               	clrc
  3793  0223  0DA0               	rlf	___lbdiv@divisor,f
  3794  0224  2A1F               	goto	l10873
  3795  0225                     l8145:	
  3796  0225  1003               	clrc
  3797  0226  0DA3               	rlf	___lbdiv@quotient,f
  3798  0227  0820               	movf	___lbdiv@divisor,w
  3799  0228  0221               	subwf	___lbdiv@dividend,w
  3800  0229  1C03               	skipc
  3801  022A  2A2F               	goto	L20
  3802  022B  0820               	movf	___lbdiv@divisor,w
  3803  022C  02A1               	subwf	___lbdiv@dividend,f
  3804  022D  1423               	bsf	___lbdiv@quotient,0
  3805  022E  1003               	clrc
  3806  022F                     L20:	
  3807  022F  0CA0               	rrf	___lbdiv@divisor,f
  3808  0230  0BA2               	decfsz	___lbdiv@counter,f
  3809  0231  2A25               	goto	l8145
  3810  0232                     l10887:	
  3811  0232  0823               	movf	___lbdiv@quotient,w
  3812  0233  0008               	return
  3813  0234                     __end_of___lbdiv:	
  3814  0234                     __ptext939:	
  3815 ;; =============== function ___llmod ends ============
  3816                           
  3817                           
  3818 ;; *************** function ___lbmod *****************
  3819 ;; Defined at:
  3820 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  dividend        1    wreg     unsigned char 
  3823 ;;  divisor         1    0[BANK0 ] unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  dividend        1    2[BANK0 ] unsigned char 
  3826 ;;  rem             1    4[BANK0 ] unsigned char 
  3827 ;;  counter         1    3[BANK0 ] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      unsigned char 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 60/20
  3834 ;;		On exit  : 60/0
  3835 ;;		Unchanged: FFF9F/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3837 ;;      Params:         0       1       0       0
  3838 ;;      Locals:         0       3       0       0
  3839 ;;      Temps:          0       1       0       0
  3840 ;;      Totals:         0       5       0       0
  3841 ;;Total ram usage:        5 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    3
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_pDispProc
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850  0234                     ___lbmod:	
  3851                           
  3852                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3853                           ;___lbmod@dividend stored from wreg
  3854  0234  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0235  00A2               	movwf	___lbmod@dividend
  3856  0236  3008               	movlw	8
  3857  0237  00A3               	movwf	___lbmod@counter
  3858  0238  01A4               	clrf	___lbmod@rem
  3859  0239                     l10895:	
  3860  0239  0822               	movf	___lbmod@dividend,w
  3861  023A  00A1               	movwf	??___lbmod
  3862  023B  3007               	movlw	7
  3863  023C  1003               	clrc
  3864  023D                     L19:	
  3865  023D  0CA1               	rrf	??___lbmod,f
  3866  023E  3EFF               	addlw	-1
  3867  023F  1003               	clrc
  3868  0240  1D03               	skipz
  3869  0241  2A3D               	goto	L19
  3870  0242  0D24               	rlf	___lbmod@rem,w
  3871  0243  0421               	iorwf	??___lbmod,w
  3872  0244  00A4               	movwf	___lbmod@rem
  3873  0245  1003               	clrc
  3874  0246  0DA2               	rlf	___lbmod@dividend,f
  3875  0247  0820               	movf	___lbmod@divisor,w
  3876  0248  0224               	subwf	___lbmod@rem,w
  3877  0249  1C03               	skipc
  3878  024A  2A4D               	goto	l10903
  3879  024B  0820               	movf	___lbmod@divisor,w
  3880  024C  02A4               	subwf	___lbmod@rem,f
  3881  024D                     l10903:	
  3882  024D  0BA3               	decfsz	___lbmod@counter,f
  3883  024E  2A39               	goto	l10895
  3884  024F  0824               	movf	___lbmod@rem,w
  3885  0250  0008               	return
  3886  0251                     __end_of___lbmod:	
  3887  0251                     __ptext929:	
  3888  0251                     __end_of_pTestMode:	
  3889                           
  3890 ;; =============== function _pTestMode ends ============
  3891 ;; *************** function _pConLiter *****************
  3892 ;; Defined at:
  3893 ;;		line 915 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  dat             4   13[BANK0 ] unsigned long 
  3896 ;;  part            1   17[BANK0 ] unsigned char 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  s2              1   20[BANK0 ] unsigned char 
  3899 ;;  s1              1   19[BANK0 ] unsigned char 
  3900 ;;  s0              1   18[BANK0 ] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;		None               void
  3903 ;; Registers used:
  3904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 60/0
  3907 ;;		On exit  : 40/0
  3908 ;;		Unchanged: FFF9F/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3910 ;;      Params:         0       5       0       0
  3911 ;;      Locals:         0       3       0       0
  3912 ;;      Temps:          0       0       0       0
  3913 ;;      Totals:         0       8       0       0
  3914 ;;Total ram usage:        8 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    4
  3917 ;; This function calls:
  3918 ;;		___lldiv
  3919 ;;		___llmod
  3920 ;; This function is called by:
  3921 ;;		_pDispProc
  3922 ;;		_pTestMode
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925  0251                     _pConLiter:	
  3926                           
  3927                           ;main.c: 916: U8 s0,s1,s2;
  3928                           ;main.c: 918: if (part==1)
  3929                           
  3930                           ; Regs used in _pConLiter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3931  0251  0B31               	decfsz	pConLiter@part,w
  3932  0252  2A69               	goto	l5250
  3933                           
  3934                           ;main.c: 919: dat/=1000;
  3935  0253  3003               	movlw	3
  3936  0254  01A3               	clrf	?___lldiv+3
  3937  0255  01A2               	clrf	?___lldiv+2
  3938  0256  00A1               	movwf	?___lldiv+1
  3939  0257  30E8               	movlw	232
  3940  0258  00A0               	movwf	?___lldiv
  3941  0259  0830               	movf	pConLiter@dat+3,w
  3942  025A  00A7               	movwf	?___lldiv+7
  3943  025B  082F               	movf	pConLiter@dat+2,w
  3944  025C  00A6               	movwf	?___lldiv+6
  3945  025D  082E               	movf	pConLiter@dat+1,w
  3946  025E  00A5               	movwf	?___lldiv+5
  3947  025F  082D               	movf	pConLiter@dat,w
  3948  0260  00A4               	movwf	?___lldiv+4
  3949  0261  22ED  118A         	fcall	___lldiv
  3950  0263  2732  118A         	fcall	PL9	;call to abstracted procedure
  3951  0265  0821               	movf	?___lldiv+1,w
  3952  0266  00AE               	movwf	pConLiter@dat+1
  3953  0267  0820               	movf	?___lldiv,w
  3954  0268  00AD               	movwf	pConLiter@dat
  3955  0269                     l5250:	
  3956                           
  3957                           ;main.c: 921: s0=dat%10;
  3958  0269  300A               	movlw	10
  3959  026A  2702  118A         	fcall	PL4	;call to abstracted procedure
  3960  026C  22AF  118A         	fcall	___llmod
  3961  026E  0820               	movf	?___llmod,w
  3962  026F  00B2               	movwf	pConLiter@s0
  3963                           
  3964                           ;main.c: 922: dat/=10;
  3965  0270  2724  118A         	fcall	PL7	;call to abstracted procedure
  3966  0272  22ED  118A         	fcall	___lldiv
  3967  0274  2732  118A         	fcall	PL9	;call to abstracted procedure
  3968                           
  3969                           ;main.c: 923: s1=dat%10;
  3970  0276  270F  118A         	fcall	PL5	;call to abstracted procedure
  3971  0278  2702  118A         	fcall	PL4	;call to abstracted procedure
  3972  027A  22AF  118A         	fcall	___llmod
  3973  027C  0820               	movf	?___llmod,w
  3974  027D  00B3               	movwf	pConLiter@s1
  3975                           
  3976                           ;main.c: 924: dat/=10;
  3977  027E  2724  118A         	fcall	PL7	;call to abstracted procedure
  3978  0280  22ED  118A         	fcall	___lldiv
  3979  0282  2732  118A         	fcall	PL9	;call to abstracted procedure
  3980                           
  3981                           ;main.c: 925: s2=dat%10;
  3982  0284  270F  118A         	fcall	PL5	;call to abstracted procedure
  3983  0286  2702  118A         	fcall	PL4	;call to abstracted procedure
  3984  0288  22AF               	fcall	___llmod
  3985  0289  0820               	movf	?___llmod,w
  3986  028A  00B4               	movwf	pConLiter@s2
  3987                           
  3988                           ;main.c: 927: bSeg0 = ~tabSeg[s0];
  3989  028B  0832               	movf	pConLiter@s0,w
  3990  028C  3E01               	addlw	low (_tabSeg-__stringbase)
  3991  028D  0084               	movwf	4
  3992  028E  158A  2000  118A   	fcall	stringdir
  3993  0291  3AFF               	xorlw	255
  3994  0292  1683               	bsf	3,5	;RP0=1, select bank1
  3995  0293  00CE               	movwf	_bSeg0^(0+128)
  3996                           
  3997                           ;main.c: 928: bSeg1 = ~tabSeg[s1];
  3998  0294  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0295  0833               	movf	pConLiter@s1,w
  4000  0296  3E01               	addlw	low (_tabSeg-__stringbase)
  4001  0297  0084               	movwf	4
  4002  0298  158A  2000  118A   	fcall	stringdir
  4003  029B  3AFF               	xorlw	255
  4004  029C  1683               	bsf	3,5	;RP0=1, select bank1
  4005  029D  00CF               	movwf	_bSeg1^(0+128)
  4006                           
  4007                           ;main.c: 929: bSeg2 = ~tabSeg[s2];
  4008  029E  1283               	bcf	3,5	;RP0=0, select bank0
  4009  029F  0834               	movf	pConLiter@s2,w
  4010  02A0  3E01               	addlw	low (_tabSeg-__stringbase)
  4011  02A1  0084               	movwf	4
  4012  02A2  158A  2000  118A   	fcall	stringdir
  4013  02A5  3AFF               	xorlw	255
  4014  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  4015  02A7  00D0               	movwf	_bSeg2^(0+128)
  4016                           
  4017                           ;main.c: 933: if (part==0)
  4018  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  4019  02A9  08B1               	movf	pConLiter@part,f
  4020  02AA  1D03               	skipz
  4021  02AB  0008               	return
  4022                           
  4023                           ;main.c: 934: {
  4024                           ;main.c: 935: bSeg0 &= 0x7F;
  4025  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  4026  02AD  13CE               	bcf	_bSeg0^(0+128),7
  4027  02AE  0008               	return
  4028  02AF                     __end_of_pConLiter:	
  4029  02AF                     __ptext938:	
  4030 ;; =============== function ___lldiv ends ============
  4031                           
  4032                           
  4033 ;; *************** function ___llmod *****************
  4034 ;; Defined at:
  4035 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\llmod.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  divisor         4    0[BANK0 ] unsigned long 
  4038 ;;  dividend        4    4[BANK0 ] unsigned long 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  counter         1    8[BANK0 ] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  4    0[BANK0 ] unsigned long 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 60/0
  4047 ;;		On exit  : 60/0
  4048 ;;		Unchanged: FFF9F/0
  4049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4050 ;;      Params:         0       8       0       0
  4051 ;;      Locals:         0       1       0       0
  4052 ;;      Temps:          0       0       0       0
  4053 ;;      Totals:         0       9       0       0
  4054 ;;Total ram usage:        9 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    3
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_pDispProc
  4061 ;;		_pConLiter
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064  02AF                     ___llmod:	
  4065                           
  4066                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4067  02AF  0823               	movf	___llmod@divisor+3,w
  4068  02B0  0422               	iorwf	___llmod@divisor+2,w
  4069  02B1  0421               	iorwf	___llmod@divisor+1,w
  4070  02B2  0420               	iorwf	___llmod@divisor,w
  4071  02B3  1903               	skipnz
  4072  02B4  2AE4               	goto	l10925
  4073  02B5  01A8               	clrf	___llmod@counter
  4074  02B6                     L17:	
  4075  02B6  0AA8               	incf	___llmod@counter,f
  4076  02B7  1BA3               	btfsc	___llmod@divisor+3,7
  4077  02B8  2ABF               	goto	l10917
  4078  02B9  1003               	clrc
  4079  02BA  0DA0               	rlf	___llmod@divisor,f
  4080  02BB  0DA1               	rlf	___llmod@divisor+1,f
  4081  02BC  0DA2               	rlf	___llmod@divisor+2,f
  4082  02BD  0DA3               	rlf	___llmod@divisor+3,f
  4083  02BE  2AB6               	goto	L17
  4084  02BF                     l10917:	
  4085  02BF  0823               	movf	___llmod@divisor+3,w
  4086  02C0  0227               	subwf	___llmod@dividend+3,w
  4087  02C1  1D03               	skipz
  4088  02C2  2ACD               	goto	u2845
  4089  02C3  0822               	movf	___llmod@divisor+2,w
  4090  02C4  0226               	subwf	___llmod@dividend+2,w
  4091  02C5  1D03               	skipz
  4092  02C6  2ACD               	goto	u2845
  4093  02C7  0821               	movf	___llmod@divisor+1,w
  4094  02C8  0225               	subwf	___llmod@dividend+1,w
  4095  02C9  1D03               	skipz
  4096  02CA  2ACD               	goto	u2845
  4097  02CB  0820               	movf	___llmod@divisor,w
  4098  02CC  0224               	subwf	___llmod@dividend,w
  4099  02CD                     u2845:	
  4100  02CD  1C03               	skipc
  4101  02CE  2ADE               	goto	L18
  4102  02CF  0820               	movf	___llmod@divisor,w
  4103  02D0  02A4               	subwf	___llmod@dividend,f
  4104  02D1  0821               	movf	___llmod@divisor+1,w
  4105  02D2  1C03               	skipc
  4106  02D3  0F21               	incfsz	___llmod@divisor+1,w
  4107  02D4  02A5               	subwf	___llmod@dividend+1,f
  4108  02D5  0822               	movf	___llmod@divisor+2,w
  4109  02D6  1C03               	skipc
  4110  02D7  0F22               	incfsz	___llmod@divisor+2,w
  4111  02D8  02A6               	subwf	___llmod@dividend+2,f
  4112  02D9  0823               	movf	___llmod@divisor+3,w
  4113  02DA  1C03               	skipc
  4114  02DB  0F23               	incfsz	___llmod@divisor+3,w
  4115  02DC  02A7               	subwf	___llmod@dividend+3,f
  4116  02DD  1003               	clrc
  4117  02DE                     L18:	
  4118  02DE  0CA3               	rrf	___llmod@divisor+3,f
  4119  02DF  0CA2               	rrf	___llmod@divisor+2,f
  4120  02E0  0CA1               	rrf	___llmod@divisor+1,f
  4121  02E1  0CA0               	rrf	___llmod@divisor,f
  4122  02E2  0BA8               	decfsz	___llmod@counter,f
  4123  02E3  2ABF               	goto	l10917
  4124  02E4                     l10925:	
  4125  02E4  0827               	movf	___llmod@dividend+3,w
  4126  02E5  00A3               	movwf	?___llmod+3
  4127  02E6  0826               	movf	___llmod@dividend+2,w
  4128  02E7  00A2               	movwf	?___llmod+2
  4129  02E8  0825               	movf	___llmod@dividend+1,w
  4130  02E9  00A1               	movwf	?___llmod+1
  4131  02EA  0824               	movf	___llmod@dividend,w
  4132  02EB  00A0               	movwf	?___llmod
  4133  02EC  0008               	return
  4134  02ED                     __end_of___llmod:	
  4135  02ED                     __ptext937:	
  4136 ;; =============== function _pConDisp ends ============
  4137                           
  4138                           
  4139 ;; *************** function ___lldiv *****************
  4140 ;; Defined at:
  4141 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  divisor         4    0[BANK0 ] unsigned long 
  4144 ;;  dividend        4    4[BANK0 ] unsigned long 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  quotient        4    8[BANK0 ] unsigned long 
  4147 ;;  counter         1   12[BANK0 ] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  4    0[BANK0 ] unsigned long 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 60/0
  4154 ;;		On exit  : 60/0
  4155 ;;		Unchanged: FFF9F/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4157 ;;      Params:         0       8       0       0
  4158 ;;      Locals:         0       5       0       0
  4159 ;;      Temps:          0       0       0       0
  4160 ;;      Totals:         0      13       0       0
  4161 ;;Total ram usage:       13 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    3
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_pDispProc
  4168 ;;		_pConLiter
  4169 ;;		_pCalWaterFlow
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172  02ED                     ___lldiv:	
  4173                           
  4174                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4175  02ED  01A8               	clrf	___lldiv@quotient
  4176  02EE  01A9               	clrf	___lldiv@quotient+1
  4177  02EF  01AA               	clrf	___lldiv@quotient+2
  4178  02F0  01AB               	clrf	___lldiv@quotient+3
  4179  02F1  0823               	movf	___lldiv@divisor+3,w
  4180  02F2  0422               	iorwf	___lldiv@divisor+2,w
  4181  02F3  0421               	iorwf	___lldiv@divisor+1,w
  4182  02F4  0420               	iorwf	___lldiv@divisor,w
  4183  02F5  1903               	skipnz
  4184  02F6  2B2C               	goto	l10951
  4185  02F7  01AC               	clrf	___lldiv@counter
  4186  02F8                     L15:	
  4187  02F8  0AAC               	incf	___lldiv@counter,f
  4188  02F9  1BA3               	btfsc	___lldiv@divisor+3,7
  4189  02FA  2B01               	goto	l10939
  4190  02FB  1003               	clrc
  4191  02FC  0DA0               	rlf	___lldiv@divisor,f
  4192  02FD  0DA1               	rlf	___lldiv@divisor+1,f
  4193  02FE  0DA2               	rlf	___lldiv@divisor+2,f
  4194  02FF  0DA3               	rlf	___lldiv@divisor+3,f
  4195  0300  2AF8               	goto	L15
  4196  0301                     l10939:	
  4197  0301  1003               	clrc
  4198  0302  0DA8               	rlf	___lldiv@quotient,f
  4199  0303  0DA9               	rlf	___lldiv@quotient+1,f
  4200  0304  0DAA               	rlf	___lldiv@quotient+2,f
  4201  0305  0DAB               	rlf	___lldiv@quotient+3,f
  4202  0306  0823               	movf	___lldiv@divisor+3,w
  4203  0307  0227               	subwf	___lldiv@dividend+3,w
  4204  0308  1D03               	skipz
  4205  0309  2B14               	goto	u2885
  4206  030A  0822               	movf	___lldiv@divisor+2,w
  4207  030B  0226               	subwf	___lldiv@dividend+2,w
  4208  030C  1D03               	skipz
  4209  030D  2B14               	goto	u2885
  4210  030E  0821               	movf	___lldiv@divisor+1,w
  4211  030F  0225               	subwf	___lldiv@dividend+1,w
  4212  0310  1D03               	skipz
  4213  0311  2B14               	goto	u2885
  4214  0312  0820               	movf	___lldiv@divisor,w
  4215  0313  0224               	subwf	___lldiv@dividend,w
  4216  0314                     u2885:	
  4217  0314  1C03               	skipc
  4218  0315  2B26               	goto	L16
  4219  0316  0820               	movf	___lldiv@divisor,w
  4220  0317  02A4               	subwf	___lldiv@dividend,f
  4221  0318  0821               	movf	___lldiv@divisor+1,w
  4222  0319  1C03               	skipc
  4223  031A  0F21               	incfsz	___lldiv@divisor+1,w
  4224  031B  02A5               	subwf	___lldiv@dividend+1,f
  4225  031C  0822               	movf	___lldiv@divisor+2,w
  4226  031D  1C03               	skipc
  4227  031E  0F22               	incfsz	___lldiv@divisor+2,w
  4228  031F  02A6               	subwf	___lldiv@dividend+2,f
  4229  0320  0823               	movf	___lldiv@divisor+3,w
  4230  0321  1C03               	skipc
  4231  0322  0F23               	incfsz	___lldiv@divisor+3,w
  4232  0323  02A7               	subwf	___lldiv@dividend+3,f
  4233  0324  1428               	bsf	___lldiv@quotient,0
  4234  0325  1003               	clrc
  4235  0326                     L16:	
  4236  0326  0CA3               	rrf	___lldiv@divisor+3,f
  4237  0327  0CA2               	rrf	___lldiv@divisor+2,f
  4238  0328  0CA1               	rrf	___lldiv@divisor+1,f
  4239  0329  0CA0               	rrf	___lldiv@divisor,f
  4240  032A  0BAC               	decfsz	___lldiv@counter,f
  4241  032B  2B01               	goto	l10939
  4242  032C                     l10951:	
  4243  032C  082B               	movf	___lldiv@quotient+3,w
  4244  032D  00A3               	movwf	?___lldiv+3
  4245  032E  082A               	movf	___lldiv@quotient+2,w
  4246  032F  00A2               	movwf	?___lldiv+2
  4247  0330  0829               	movf	___lldiv@quotient+1,w
  4248  0331  00A1               	movwf	?___lldiv+1
  4249  0332  0828               	movf	___lldiv@quotient,w
  4250  0333  00A0               	movwf	?___lldiv
  4251  0334  0008               	return
  4252  0335                     __end_of___lldiv:	
  4253  0335                     __ptext928:	
  4254 ;; =============== function _pDispProc ends ============
  4255                           
  4256                           
  4257 ;; *************** function _pTestMode *****************
  4258 ;; Defined at:
  4259 ;;		line 1290 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  stat            1   74[BANK0 ] unsigned char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;		None               void
  4266 ;; Registers used:
  4267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 7F/0
  4270 ;;		On exit  : 60/0
  4271 ;;		Unchanged: FFE00/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4273 ;;      Params:         0       0       0       0
  4274 ;;      Locals:         0       1       0       0
  4275 ;;      Temps:          0       0       0       0
  4276 ;;      Totals:         0       1       0       0
  4277 ;;Total ram usage:        1 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    5
  4280 ;; This function calls:
  4281 ;;		_key_press
  4282 ;;		_pConLiter
  4283 ;;		_pClrDisp
  4284 ;;		_pConDisp
  4285 ;;		_pCalWaterFlow
  4286 ;;		_eeprom_write
  4287 ;;		_eeprom_read
  4288 ;;		_eecpymem
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293  0335                     _pTestMode:	
  4294                           
  4295                           ;main.c: 1291: U8 stat;
  4296                           ;main.c: 1294: fSaveEE=1;
  4297                           
  4298                           ; Regs used in _pTestMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4299  0335  1471               	bsf	_fSaveEE/(0+8),_fSaveEE& (0+7)
  4300  0336                     l11299:	
  4301  0336  24B5  118A         	fcall	_key_press
  4302  0338  3800               	iorlw	0
  4303  0339  1D03               	skipz
  4304  033A  2B36               	goto	l11299
  4305  033B                     l5329:	
  4306                           ;main.c: 1303: while(1)
  4307                           
  4308                           
  4309                           ;main.c: 1304: {
  4310                           ;main.c: 1305: if (f10ms)
  4311  033B  1C70               	btfss	_f10ms/(0+8),_f10ms& (0+7)
  4312  033C  2B42               	goto	l11303
  4313                           
  4314                           ;main.c: 1306: pConLiter(EE_DATA.var.TOLLITER,0);
  4315  033D  1683               	bsf	3,5	;RP0=1, select bank1
  4316  033E  26F1  118A         	fcall	PL2	;call to abstracted procedure
  4317  0340  2251  118A         	fcall	_pConLiter
  4318  0342                     l11303:	
  4319                           
  4320                           ;main.c: 1308: if (!bKeyData.bits.b0)
  4321  0342  1283               	bcf	3,5	;RP0=0, select bank0
  4322  0343  186F               	btfsc	_bKeyData,0
  4323  0344  2B3B               	goto	l5329
  4324                           
  4325                           ;main.c: 1310: }
  4326                           ;main.c: 1313: pClrDisp();
  4327  0345  24C0  118A         	fcall	_pClrDisp
  4328  0347                     l11309:	
  4329                           ;main.c: 1314: while(key_press());
  4330                           
  4331  0347  24B5  118A         	fcall	_key_press
  4332  0349  3800               	iorlw	0
  4333  034A  1D03               	skipz
  4334  034B  2B47               	goto	l11309
  4335                           
  4336                           ;main.c: 1318: bRunCnt=0;
  4337  034C  1283               	bcf	3,5	;RP0=0, select bank0
  4338  034D  01EB               	clrf	_bRunCnt
  4339                           
  4340                           ;main.c: 1319: bTestCnt=0;
  4341  034E  01EE               	clrf	_bTestCnt
  4342                           
  4343                           ;main.c: 1320: bLed.byte = 0x01;
  4344  034F  1683               	bsf	3,5	;RP0=1, select bank1
  4345  0350  01C6               	clrf	_bLed^(0+128)
  4346  0351  0AC6               	incf	_bLed^(0+128),f
  4347  0352                     l11315:	
  4348                           
  4349                           ;main.c: 1322: {
  4350                           ;main.c: 1323: if (f10ms)
  4351  0352  1C70               	btfss	_f10ms/(0+8),_f10ms& (0+7)
  4352  0353  2B52               	goto	l11315
  4353                           
  4354                           ;main.c: 1324: {
  4355                           ;main.c: 1325: f10ms = 0;
  4356  0354  1070               	bcf	_f10ms/(0+8),_f10ms& (0+7)
  4357                           
  4358                           ;main.c: 1326: if (bRunCnt==0)
  4359  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4360  0356  08EB               	movf	_bRunCnt,f
  4361  0357  1D03               	skipz
  4362  0358  2BA2               	goto	l11353
  4363                           
  4364                           ;main.c: 1327: {
  4365                           ;main.c: 1328: bRunCnt=40;
  4366  0359  3028               	movlw	40
  4367  035A  00EB               	movwf	_bRunCnt
  4368                           
  4369                           ;main.c: 1329: switch (bTestCnt)
  4370  035B  2B8A               	goto	l11345
  4371  035C                     l11323:	
  4372                           
  4373                           ;main.c: 1332: bSeg2 = 0b01111111;
  4374  035C  307F               	movlw	127
  4375  035D  1683               	bsf	3,5	;RP0=1, select bank1
  4376  035E  00D0               	movwf	_bSeg2^(0+128)
  4377                           
  4378                           ;main.c: 1333: bSeg1 = 0b01111111;
  4379  035F  00CF               	movwf	_bSeg1^(0+128)
  4380  0360  2B88               	goto	L4
  4381  0361                     l11325:	
  4382                           ;main.c: 1335: break;
  4383                           
  4384                           ;main.c: 1334: bSeg0 = 0b01111111;
  4385                           
  4386                           
  4387                           ;main.c: 1338: bSeg2 = 0b00000000;
  4388  0361  1683               	bsf	3,5	;RP0=1, select bank1
  4389  0362  30FF               	movlw	255
  4390  0363  01D0               	clrf	_bSeg2^(0+128)
  4391                           
  4392                           ;main.c: 1339: bSeg1 = 0b11111111;
  4393  0364  00CF               	movwf	_bSeg1^(0+128)
  4394  0365                     l11329:	
  4395                           
  4396                           ;main.c: 1340: bSeg0 = 0b11111111;
  4397  0365  30FF               	movlw	255
  4398  0366  2B88               	goto	L4
  4399  0367                     l11331:	
  4400                           ;main.c: 1341: break;
  4401                           
  4402                           
  4403                           ;main.c: 1344: bSeg2 = 0b11111111;
  4404  0367  30FF               	movlw	255
  4405  0368  1683               	bsf	3,5	;RP0=1, select bank1
  4406  0369  00D0               	movwf	_bSeg2^(0+128)
  4407                           
  4408                           ;main.c: 1345: bSeg1 = 0b00000000;
  4409  036A  01CF               	clrf	_bSeg1^(0+128)
  4410  036B  2B65               	goto	l11329
  4411  036C                     l11337:	
  4412                           
  4413                           ;main.c: 1350: bSeg2 = 0b11111111;
  4414  036C  30FF               	movlw	255
  4415  036D  1683               	bsf	3,5	;RP0=1, select bank1
  4416  036E  00D0               	movwf	_bSeg2^(0+128)
  4417                           
  4418                           ;main.c: 1351: bSeg1 = 0b11111111;
  4419  036F  00CF               	movwf	_bSeg1^(0+128)
  4420                           
  4421                           ;main.c: 1352: bSeg0 = 0b00000000;
  4422  0370  01CE               	clrf	_bSeg0^(0+128)
  4423                           
  4424                           ;main.c: 1353: break;
  4425  0371  2B98               	goto	l11347
  4426  0372                     l11341:	
  4427                           
  4428                           ;main.c: 1356: bSeg2 = ~tabSeg[bTestCnt];
  4429  0372  086E               	movf	_bTestCnt,w
  4430  0373  3E01               	addlw	low (_tabSeg-__stringbase)
  4431  0374  0084               	movwf	4
  4432  0375  158A  2000  118A   	fcall	stringdir
  4433  0378  3AFF               	xorlw	255
  4434  0379  1683               	bsf	3,5	;RP0=1, select bank1
  4435  037A  00D0               	movwf	_bSeg2^(0+128)
  4436                           
  4437                           ;main.c: 1357: bSeg1 = ~tabSeg[bTestCnt];
  4438  037B  279F               	fcall	PL33	;call to abstracted procedure
  4439  037C  158A  2000  118A   	fcall	stringdir
  4440  037F  3AFF               	xorlw	255
  4441  0380  1683               	bsf	3,5	;RP0=1, select bank1
  4442  0381  00CF               	movwf	_bSeg1^(0+128)
  4443                           
  4444                           ;main.c: 1358: bSeg0 = ~tabSeg[bTestCnt];
  4445  0382  279F               	fcall	PL33	;call to abstracted procedure
  4446  0383  158A  2000  118A   	fcall	stringdir
  4447  0386  3AFF               	xorlw	255
  4448  0387  1683               	bsf	3,5	;RP0=1, select bank1
  4449  0388                     L4:	
  4450  0388  00CE               	movwf	_bSeg0^(0+128)
  4451                           
  4452                           ;main.c: 1359: break;
  4453  0389  2B98               	goto	l11347
  4454  038A                     l11345:	
  4455  038A  086E               	movf	_bTestCnt,w
  4456                           
  4457                           ; Switch size 1, requested type "space"
  4458                           ; Number of cases is 4, Range of values is 10 to 13
  4459                           ; switch strategies available:
  4460                           ; Name         Instructions Cycles
  4461                           ; simple_byte           13     7 (average)
  4462                           ; direct_byte           18    10 (fixed)
  4463                           ; jumptable            263     9 (fixed)
  4464                           ;	Chosen strategy is simple_byte
  4465  038B  3A0A               	xorlw	10	; case 10
  4466  038C  1903               	skipnz
  4467  038D  2B5C               	goto	l11323
  4468  038E  3A01               	xorlw	1	; case 11
  4469  038F  1903               	skipnz
  4470  0390  2B61               	goto	l11325
  4471  0391  3A07               	xorlw	7	; case 12
  4472  0392  1903               	skipnz
  4473  0393  2B67               	goto	l11331
  4474  0394  3A01               	xorlw	1	; case 13
  4475  0395  1903               	skipnz
  4476  0396  2B6C               	goto	l11337
  4477  0397  2B72               	goto	l11341
  4478  0398                     l11347:	
  4479                           
  4480                           ;main.c: 1362: if (++bTestCnt > 13)
  4481  0398  300E               	movlw	14
  4482  0399  1283               	bcf	3,5	;RP0=0, select bank0
  4483  039A  0AEE               	incf	_bTestCnt,f
  4484  039B  026E               	subwf	_bTestCnt,w
  4485  039C  1803               	btfsc	3,0
  4486                           
  4487                           ;main.c: 1363: bTestCnt=0;
  4488  039D  01EE               	clrf	_bTestCnt
  4489                           
  4490                           ;main.c: 1366: bLed.byte ^= 0x03;
  4491  039E  3003               	movlw	3
  4492  039F  1683               	bsf	3,5	;RP0=1, select bank1
  4493  03A0  06C6               	xorwf	_bLed^(0+128),f
  4494                           
  4495                           ;main.c: 1367: }
  4496  03A1  2BA3               	goto	l11355
  4497  03A2                     l11353:	
  4498                           
  4499                           ;main.c: 1368: else
  4500                           ;main.c: 1369: bRunCnt--;
  4501  03A2  03EB               	decf	_bRunCnt,f
  4502  03A3                     l11355:	
  4503                           
  4504                           ;main.c: 1371: if (!bKeyData.bits.b0)
  4505  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  4506  03A4  186F               	btfsc	_bKeyData,0
  4507  03A5  2B52               	goto	l11315
  4508                           
  4509                           ;main.c: 1373: }
  4510                           ;main.c: 1374: }
  4511                           ;main.c: 1376: pClrDisp();
  4512  03A6  24C0  118A         	fcall	_pClrDisp
  4513  03A8                     l11361:	
  4514                           ;main.c: 1377: while(key_press());
  4515                           
  4516  03A8  24B5  118A         	fcall	_key_press
  4517  03AA  3800               	iorlw	0
  4518  03AB  1D03               	skipz
  4519  03AC  2BA8               	goto	l11361
  4520                           
  4521                           ;main.c: 1380: stat=0;
  4522  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  4523  03AE  01EA               	clrf	pTestMode@stat
  4524                           
  4525                           ;main.c: 1381: bRunCnt=0;
  4526  03AF  01EB               	clrf	_bRunCnt
  4527                           
  4528                           ;main.c: 1382: bTestCnt=0;
  4529  03B0  01EE               	clrf	_bTestCnt
  4530  03B1                     l11365:	
  4531                           
  4532                           ;main.c: 1385: {
  4533                           ;main.c: 1386: if (f10ms)
  4534  03B1  1C70               	btfss	_f10ms/(0+8),_f10ms& (0+7)
  4535  03B2  2BB1               	goto	l11365
  4536                           
  4537                           ;main.c: 1387: {
  4538                           ;main.c: 1388: f10ms=0;
  4539  03B3  1070               	bcf	_f10ms/(0+8),_f10ms& (0+7)
  4540                           
  4541                           ;main.c: 1390: if (!bKeyData.bits.b2)
  4542  03B4  196F               	btfsc	_bKeyData,2
  4543  03B5  2BBF               	goto	l5357
  4544                           
  4545                           ;main.c: 1391: {
  4546                           ;main.c: 1392: if (bRunCnt >= 10)
  4547  03B6  300A               	movlw	10
  4548  03B7  026B               	subwf	_bRunCnt,w
  4549  03B8  1C03               	skipc
  4550  03B9  2BBD               	goto	l11373
  4551                           
  4552                           ;main.c: 1393: bTestCnt=1;
  4553  03BA  01EE               	clrf	_bTestCnt
  4554  03BB  0AEE               	incf	_bTestCnt,f
  4555  03BC  2BE4               	goto	l11405
  4556  03BD                     l11373:	
  4557                           
  4558                           ;main.c: 1394: else
  4559                           ;main.c: 1395: bRunCnt++;
  4560  03BD  0AEB               	incf	_bRunCnt,f
  4561  03BE  2BE4               	goto	l11405
  4562  03BF                     l5357:	
  4563                           
  4564                           ;main.c: 1397: else if (!bKeyData.bits.b1)
  4565  03BF  18EF               	btfsc	_bKeyData,1
  4566  03C0  2BC7               	goto	l5361
  4567                           
  4568                           ;main.c: 1398: {
  4569                           ;main.c: 1399: if (bRunCnt >= 10)
  4570  03C1  300A               	movlw	10
  4571  03C2  026B               	subwf	_bRunCnt,w
  4572  03C3  1C03               	skipc
  4573  03C4  2BBD               	goto	l11373
  4574                           
  4575                           ;main.c: 1400: bTestCnt=2;
  4576  03C5  3002               	movlw	2
  4577  03C6  2BCE               	goto	L5
  4578  03C7                     l5361:	
  4579                           
  4580                           ;main.c: 1404: else if (!bKeyData.bits.b0)
  4581  03C7  186F               	btfsc	_bKeyData,0
  4582  03C8  2BD0               	goto	l11387
  4583                           
  4584                           ;main.c: 1405: {
  4585                           ;main.c: 1406: if (bRunCnt >= 10)
  4586  03C9  300A               	movlw	10
  4587  03CA  026B               	subwf	_bRunCnt,w
  4588  03CB  1C03               	skipc
  4589  03CC  2BBD               	goto	l11373
  4590                           
  4591                           ;main.c: 1407: bTestCnt=3;
  4592  03CD  3003               	movlw	3
  4593  03CE                     L5:	
  4594  03CE  00EE               	movwf	_bTestCnt
  4595  03CF  2BE4               	goto	l11405
  4596  03D0                     l11387:	
  4597                           
  4598                           ;main.c: 1418: else
  4599                           ;main.c: 1419: {
  4600                           ;main.c: 1420: if (bRunCnt==0)
  4601  03D0  08EB               	movf	_bRunCnt,f
  4602  03D1  1D03               	skipz
  4603  03D2  2BE3               	goto	l11403
  4604                           
  4605                           ;main.c: 1421: {
  4606                           ;main.c: 1422: if (bTestCnt==1)
  4607  03D3  0B6E               	decfsz	_bTestCnt,w
  4608  03D4  2BD7               	goto	l11393
  4609                           
  4610                           ;main.c: 1423: stat|=1;
  4611  03D5  146A               	bsf	pTestMode@stat,0
  4612  03D6  2BE1               	goto	l11401
  4613  03D7                     l11393:	
  4614                           
  4615                           ;main.c: 1424: else if (bTestCnt==2)
  4616  03D7  086E               	movf	_bTestCnt,w
  4617  03D8  3A02               	xorlw	2
  4618  03D9  1D03               	skipz
  4619  03DA  2BDD               	goto	l11397
  4620                           
  4621                           ;main.c: 1425: stat|=2;
  4622  03DB  14EA               	bsf	pTestMode@stat,1
  4623  03DC  2BE1               	goto	l11401
  4624  03DD                     l11397:	
  4625                           
  4626                           ;main.c: 1426: else if (bTestCnt==3)
  4627  03DD  086E               	movf	_bTestCnt,w
  4628  03DE  3A03               	xorlw	3
  4629  03DF  1903               	btfsc	3,2
  4630                           
  4631                           ;main.c: 1427: stat|=4;
  4632  03E0  156A               	bsf	pTestMode@stat,2
  4633  03E1                     l11401:	
  4634                           
  4635                           ;main.c: 1430: bTestCnt=0;
  4636  03E1  01EE               	clrf	_bTestCnt
  4637                           
  4638                           ;main.c: 1431: }
  4639  03E2  2BE4               	goto	l11405
  4640  03E3                     l11403:	
  4641                           
  4642                           ;main.c: 1432: else
  4643                           ;main.c: 1433: bRunCnt--;
  4644  03E3  03EB               	decf	_bRunCnt,f
  4645  03E4                     l11405:	
  4646                           
  4647                           ;main.c: 1434: }
  4648                           ;main.c: 1436: pConDisp(bTestCnt,0);
  4649  03E4  086E               	movf	_bTestCnt,w
  4650  03E5  00A7               	movwf	?_pConDisp
  4651  03E6  01A8               	clrf	?_pConDisp+1
  4652  03E7  01A9               	clrf	?_pConDisp+2
  4653  03E8  24D5  118A         	fcall	_pConDisp
  4654                           
  4655                           ;main.c: 1438: if (!bKeyData.bits.b0 && (stat==0x07))
  4656  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  4657  03EB  186F               	btfsc	_bKeyData,0
  4658  03EC  2BB1               	goto	l11365
  4659  03ED  086A               	movf	pTestMode@stat,w
  4660  03EE  3A07               	xorlw	7
  4661  03EF  1D03               	skipz
  4662  03F0  2BB1               	goto	l11365
  4663                           
  4664                           ;main.c: 1440: }
  4665                           ;main.c: 1441: }
  4666                           ;main.c: 1443: pClrDisp();
  4667  03F1  24C0  118A         	fcall	_pClrDisp
  4668  03F3                     l11415:	
  4669                           ;main.c: 1444: while(key_press());
  4670                           
  4671  03F3  24B5  118A         	fcall	_key_press
  4672  03F5  3800               	iorlw	0
  4673  03F6  1D03               	skipz
  4674  03F7  2BF3               	goto	l11415
  4675                           
  4676                           ;main.c: 1447: wTestPulseCnt=0;
  4677  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  4678                           
  4679                           ;main.c: 1448: bTestCnt=0;
  4680                           
  4681                           ;main.c: 1449: EE_DATA.var.TOLLITER=0;
  4682  03F9  2768  118A         	fcall	PL18	;call to abstracted procedure
  4683                           
  4684                           ;main.c: 1450: bLed.bits.b1=0;
  4685  03FB  10C6               	bcf	_bLed^(0+128),1
  4686  03FC                     l11423:	
  4687                           
  4688                           ;main.c: 1452: {
  4689                           ;main.c: 1453: if (f10ms)
  4690  03FC  1C70               	btfss	_f10ms/(0+8),_f10ms& (0+7)
  4691  03FD  2BFC               	goto	l11423
  4692                           
  4693                           ;main.c: 1454: {
  4694                           ;main.c: 1455: f10ms=0;
  4695  03FE  1070               	bcf	_f10ms/(0+8),_f10ms& (0+7)
  4696                           
  4697                           ;main.c: 1457: if (fKeyPress)
  4698  03FF  1F70               	btfss	_fKeyPress/(0+8),_fKeyPress& (0+7)
  4699  0400  2C07               	goto	l5384
  4700                           
  4701                           ;main.c: 1458: {
  4702                           ;main.c: 1459: if (bKeyData.bits.b2 && bKeyData.bits.b1)
  4703  0401  1283               	bcf	3,5	;RP0=0, select bank0
  4704  0402  196F               	btfsc	_bKeyData,2
  4705  0403  1CEF               	btfss	_bKeyData,1
  4706  0404  2C17               	goto	l11445
  4707                           
  4708                           ;main.c: 1460: fKeyPress=0;
  4709  0405  1370               	bcf	_fKeyPress/(0+8),_fKeyPress& (0+7)
  4710  0406  2C17               	goto	l11445
  4711  0407                     l5384:	
  4712                           
  4713                           ;main.c: 1462: else if (!bKeyData.bits.b1)
  4714  0407  1283               	bcf	3,5	;RP0=0, select bank0
  4715  0408  18EF               	btfsc	_bKeyData,1
  4716  0409  2C11               	goto	l5387
  4717                           
  4718                           ;main.c: 1463: {
  4719                           ;main.c: 1464: if (++bTestCnt >= 3)
  4720  040A  3003               	movlw	3
  4721  040B  0AEE               	incf	_bTestCnt,f
  4722  040C  026E               	subwf	_bTestCnt,w
  4723  040D  1C03               	skipc
  4724  040E  2C16               	goto	l11437
  4725                           
  4726                           ;main.c: 1465: bTestCnt=0;
  4727  040F  01EE               	clrf	_bTestCnt
  4728                           
  4729                           ;main.c: 1467: }
  4730  0410  2C16               	goto	l11437
  4731  0411                     l5387:	
  4732                           
  4733                           ;main.c: 1468: else if (!bKeyData.bits.b2)
  4734  0411  196F               	btfsc	_bKeyData,2
  4735  0412  2C17               	goto	l11445
  4736                           
  4737                           ;main.c: 1469: {
  4738                           ;main.c: 1470: wTestPulseCnt=0;
  4739  0413  1683               	bsf	3,5	;RP0=1, select bank1
  4740                           
  4741                           ;main.c: 1471: bTestCnt=0;
  4742                           
  4743                           ;main.c: 1472: EE_DATA.var.TOLLITER=0;
  4744  0414  2768  118A         	fcall	PL18	;call to abstracted procedure
  4745  0416                     l11437:	
  4746                           
  4747                           ;main.c: 1466: fKeyPress=1;
  4748  0416  1770               	bsf	_fKeyPress/(0+8),_fKeyPress& (0+7)
  4749  0417                     l11445:	
  4750                           
  4751                           ;main.c: 1474: }
  4752                           ;main.c: 1477: if (bTestCnt==0)
  4753  0417  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0418  08EE               	movf	_bTestCnt,f
  4755  0419  1D03               	skipz
  4756  041A  2C21               	goto	l11449
  4757                           
  4758                           ;main.c: 1478: pConDisp(wWFlow,1);
  4759  041B  1683               	bsf	3,5	;RP0=1, select bank1
  4760  041C  2754  118A         	fcall	PL15	;call to abstracted procedure
  4761  041E  24D5  118A         	fcall	_pConDisp
  4762  0420  2C34               	goto	l11455
  4763  0421                     l11449:	
  4764                           
  4765                           ;main.c: 1479: else if (bTestCnt==1)
  4766  0421  0B6E               	decfsz	_bTestCnt,w
  4767  0422  2C2F               	goto	l11453
  4768                           
  4769                           ;main.c: 1480: pConDisp(wTestPulseCnt,0);
  4770  0423  1683               	bsf	3,5	;RP0=1, select bank1
  4771  0424  0835               	movf	(_wTestPulseCnt+1)^(0+128),w
  4772  0425  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0426  00A8               	movwf	?_pConDisp+1
  4774  0427  1683               	bsf	3,5	;RP0=1, select bank1
  4775  0428  0834               	movf	_wTestPulseCnt^(0+128),w
  4776  0429  1283               	bcf	3,5	;RP0=0, select bank0
  4777  042A  00A7               	movwf	?_pConDisp
  4778  042B  01A9               	clrf	?_pConDisp+2
  4779  042C  24D5  118A         	fcall	_pConDisp
  4780  042E  2C34               	goto	l11455
  4781  042F                     l11453:	
  4782                           
  4783                           ;main.c: 1481: else
  4784                           ;main.c: 1482: pConLiter(EE_DATA.var.TOLLITER,0);
  4785  042F  1683               	bsf	3,5	;RP0=1, select bank1
  4786  0430  26F1  118A         	fcall	PL2	;call to abstracted procedure
  4787  0432  2251  118A         	fcall	_pConLiter
  4788  0434                     l11455:	
  4789                           
  4790                           ;main.c: 1485: if (++b50ms >= 2)
  4791  0434  3002               	movlw	2
  4792  0435  1683               	bsf	3,5	;RP0=1, select bank1
  4793  0436  0ABA               	incf	_b50ms^(0+128),f
  4794  0437  023A               	subwf	_b50ms^(0+128),w
  4795  0438  1C03               	skipc
  4796  0439  2C3E               	goto	l11461
  4797                           
  4798                           ;main.c: 1486: {
  4799                           ;main.c: 1487: b50ms=0;
  4800  043A  01BA               	clrf	_b50ms^(0+128)
  4801                           
  4802                           ;main.c: 1488: pCalWaterFlow();
  4803  043B  158A  24FC  118A   	fcall	_pCalWaterFlow
  4804  043E                     l11461:	
  4805                           
  4806                           ;main.c: 1489: }
  4807                           ;main.c: 1491: if (!bKeyData.bits.b0)
  4808  043E  1283               	bcf	3,5	;RP0=0, select bank0
  4809  043F  186F               	btfsc	_bKeyData,0
  4810  0440  2BFC               	goto	l11423
  4811                           
  4812                           ;main.c: 1493: }
  4813                           ;main.c: 1494: }
  4814                           ;main.c: 1496: pClrDisp();
  4815  0441  24C0  118A         	fcall	_pClrDisp
  4816  0443                     l11467:	
  4817                           ;main.c: 1497: while(key_press());
  4818                           
  4819  0443  24B5  118A         	fcall	_key_press
  4820  0445  3800               	iorlw	0
  4821  0446  1D03               	skipz
  4822  0447  2C43               	goto	l11467
  4823                           
  4824                           ;main.c: 1501: bSeg2 = ~0x3F;
  4825  0448  30C0               	movlw	192
  4826  0449  1683               	bsf	3,5	;RP0=1, select bank1
  4827  044A  00D0               	movwf	_bSeg2^(0+128)
  4828                           
  4829                           ;main.c: 1502: bSeg1 = ~0x2F;
  4830  044B  30D0               	movlw	208
  4831  044C  00CF               	movwf	_bSeg1^(0+128)
  4832                           
  4833                           ;main.c: 1503: bSeg0 = ~0x66;
  4834  044D  3099               	movlw	153
  4835  044E  00CE               	movwf	_bSeg0^(0+128)
  4836                           
  4837                           ;main.c: 1505: RA2=0;
  4838  044F  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0450  1105               	bcf	5,2
  4840                           
  4841                           ;main.c: 1506: RA1=1;
  4842  0451  1485               	bsf	5,1
  4843  0452                     l11475:	
  4844                           
  4845                           ;main.c: 1509: {
  4846                           ;main.c: 1510: if (f10ms)
  4847  0452  1C70               	btfss	_f10ms/(0+8),_f10ms& (0+7)
  4848  0453  2C5F               	goto	l11485
  4849  0454  3028               	movlw	40
  4850                           
  4851                           ;main.c: 1511: {
  4852                           ;main.c: 1512: f10ms=0;
  4853  0455  1070               	bcf	_f10ms/(0+8),_f10ms& (0+7)
  4854                           
  4855                           ;main.c: 1515: if (++bRunWashT >= 40)
  4856  0456  1683               	bsf	3,5	;RP0=1, select bank1
  4857  0457  0ACA               	incf	_bRunWashT^(0+128),f
  4858  0458  024A               	subwf	_bRunWashT^(0+128),w
  4859  0459  1C03               	skipc
  4860  045A  2C5F               	goto	l11485
  4861  045B  3006               	movlw	6
  4862                           
  4863                           ;main.c: 1516: {
  4864                           ;main.c: 1517: bRunWashT=0;
  4865  045C  01CA               	clrf	_bRunWashT^(0+128)
  4866                           
  4867                           ;main.c: 1518: PORTA ^= 0b00000110;
  4868  045D  1283               	bcf	3,5	;RP0=0, select bank0
  4869  045E  0685               	xorwf	5,f	;volatile
  4870  045F                     l11485:	
  4871                           
  4872                           ;main.c: 1519: }
  4873                           ;main.c: 1520: }
  4874                           ;main.c: 1522: if (!bKeyData.bits.b0)
  4875  045F  1283               	bcf	3,5	;RP0=0, select bank0
  4876  0460  186F               	btfsc	_bKeyData,0
  4877  0461  2C52               	goto	l11475
  4878                           
  4879                           ;main.c: 1524: }
  4880                           ;main.c: 1526: pClrDisp();
  4881  0462  24C0  118A         	fcall	_pClrDisp
  4882                           
  4883                           ;main.c: 1527: RA2=0;
  4884  0464  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0465  1105               	bcf	5,2
  4886                           
  4887                           ;main.c: 1528: RA1=0;
  4888  0466  1085               	bcf	5,1
  4889  0467                     l11495:	
  4890                           ;main.c: 1529: while(key_press());
  4891                           
  4892  0467  24B5  118A         	fcall	_key_press
  4893  0469  3800               	iorlw	0
  4894  046A  1D03               	skipz
  4895  046B  2C67               	goto	l11495
  4896                           
  4897                           ;main.c: 1536: stat=0;
  4898  046C  1283               	bcf	3,5	;RP0=0, select bank0
  4899  046D  3055               	movlw	85
  4900  046E  01EA               	clrf	pTestMode@stat
  4901  046F                     L7:	
  4902                           ;main.c: 1537: bTestCnt=0x55;
  4903                           
  4904  046F  00EE               	movwf	_bTestCnt
  4905  0470                     l11501:	
  4906  0470  3008               	movlw	8
  4907                           
  4908                           ;main.c: 1539: {
  4909                           ;main.c: 1541: for (bRunCnt=0;bRunCnt<8;bRunCnt++)
  4910  0471  01EB               	clrf	_bRunCnt
  4911  0472                     L6:	
  4912  0472  026B               	subwf	_bRunCnt,w
  4913  0473  1803               	btfsc	3,0
  4914  0474  2C7F               	goto	l11511
  4915                           
  4916                           ;main.c: 1542: eeprom_write(01+bRunCnt,bTestCnt);
  4917  0475  086E               	movf	_bTestCnt,w
  4918  0476  00A0               	movwf	?_eeprom_write
  4919  0477  0A6B               	incf	_bRunCnt,w
  4920  0478  2679  118A         	fcall	_eeprom_write
  4921  047A  1283               	bcf	3,5	;RP0=0, select bank0
  4922  047B  3008               	movlw	8
  4923  047C  1303               	bcf	3,6	;RP1=0, select bank0
  4924  047D  0AEB               	incf	_bRunCnt,f
  4925  047E  2C72               	goto	L6
  4926  047F                     l11511:	
  4927                           
  4928                           ;main.c: 1545: for (bRunCnt=0;bRunCnt<8;bRunCnt++)
  4929  047F  01EB               	clrf	_bRunCnt
  4930  0480                     l11513:	
  4931  0480  3008               	movlw	8
  4932  0481  026B               	subwf	_bRunCnt,w
  4933  0482  1803               	btfsc	3,0
  4934  0483  2C8F               	goto	l11525
  4935                           
  4936                           ;main.c: 1546: {
  4937                           ;main.c: 1547: if (eeprom_read(01+bRunCnt) != bTestCnt)
  4938  0484  0A6B               	incf	_bRunCnt,w
  4939  0485  2584  118A         	fcall	_eeprom_read
  4940  0487  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0488  066E               	xorwf	_bTestCnt,w
  4942  0489  1903               	skipnz
  4943  048A  2C8D               	goto	l11521
  4944                           
  4945                           ;main.c: 1548: stat=1;
  4946  048B  01EA               	clrf	pTestMode@stat
  4947  048C  0AEA               	incf	pTestMode@stat,f
  4948  048D                     l11521:	
  4949  048D  0AEB               	incf	_bRunCnt,f
  4950  048E  2C80               	goto	l11513
  4951  048F                     l11525:	
  4952                           
  4953                           ;main.c: 1549: }
  4954                           ;main.c: 1551: if ((stat==1)||(bTestCnt==0x00))
  4955  048F  036A               	decf	pTestMode@stat,w
  4956  0490  1903               	skipnz
  4957  0491  2C9D               	goto	l11537
  4958  0492  08EE               	movf	_bTestCnt,f
  4959  0493  1903               	btfsc	3,2
  4960  0494  2C9D               	goto	l11537
  4961                           
  4962                           ;main.c: 1553: else if (bTestCnt==0x55)
  4963  0495  086E               	movf	_bTestCnt,w
  4964  0496  3A55               	xorlw	85
  4965  0497  1D03               	skipz
  4966  0498  2C9B               	goto	l11535
  4967                           
  4968                           ;main.c: 1554: bTestCnt=0xAA;
  4969  0499  30AA               	movlw	170
  4970  049A  2C6F               	goto	L7
  4971  049B                     l11535:	
  4972                           
  4973                           ;main.c: 1555: else
  4974                           ;main.c: 1556: bTestCnt=0;
  4975  049B  01EE               	clrf	_bTestCnt
  4976  049C  2C70               	goto	l11501
  4977  049D                     l11537:	
  4978                           
  4979                           ;main.c: 1557: }
  4980                           ;main.c: 1559: eecpymem(EE_DATA.arrEEData,01,7);
  4981  049D  278A  118A         	fcall	PL24	;call to abstracted procedure
  4982  049F  255F  118A         	fcall	_eecpymem
  4983                           
  4984                           ;main.c: 1561: if (stat==0)
  4985  04A1  08EA               	movf	pTestMode@stat,f
  4986  04A2  1D03               	skipz
  4987  04A3  2CAB               	goto	l11543
  4988                           
  4989                           ;main.c: 1562: {
  4990                           ;main.c: 1563: bSeg2 = ~0x7A;
  4991  04A4  3085               	movlw	133
  4992  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  4993  04A6  00D0               	movwf	_bSeg2^(0+128)
  4994                           
  4995                           ;main.c: 1564: bSeg1 = ~0x75;
  4996  04A7  308A               	movlw	138
  4997  04A8  00CF               	movwf	_bSeg1^(0+128)
  4998                           
  4999                           ;main.c: 1565: bSeg0 = ~0x00;
  5000  04A9  30FF               	movlw	255
  5001  04AA  2CB0               	goto	L8
  5002  04AB                     l11543:	
  5003                           ;main.c: 1566: }
  5004                           
  5005                           
  5006                           ;main.c: 1567: else
  5007                           ;main.c: 1568: {
  5008                           ;main.c: 1569: bSeg2 = ~0x76;
  5009  04AB  3089               	movlw	137
  5010  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  5011  04AD  00D0               	movwf	_bSeg2^(0+128)
  5012                           
  5013                           ;main.c: 1570: bSeg1 = ~0x42;
  5014  04AE  30BD               	movlw	189
  5015  04AF  00CF               	movwf	_bSeg1^(0+128)
  5016  04B0                     L8:	
  5017                           
  5018                           ;main.c: 1571: bSeg0 = ~0x42;
  5019  04B0  00CE               	movwf	_bSeg0^(0+128)
  5020  04B1                     l5427:	
  5021  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  5022  04B2  1C6F               	btfss	_bKeyData,0
  5023  04B3  2B36               	goto	l11299
  5024  04B4  2CB1               	goto	l5427
  5025  04B5                     __ptext945:	
  5026 ;; =============== function _eeprom_read ends ============
  5027                           
  5028                           
  5029 ;; *************** function _key_press *****************
  5030 ;; Defined at:
  5031 ;;		line 1583 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      unsigned char 
  5038 ;; Registers used:
  5039 ;;		wreg
  5040 ;; Tracked objects:
  5041 ;;		On entry : 40/0
  5042 ;;		On exit  : 40/0
  5043 ;;		Unchanged: FFF9F/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5045 ;;      Params:         0       0       0       0
  5046 ;;      Locals:         0       0       0       0
  5047 ;;      Temps:          0       0       0       0
  5048 ;;      Totals:         0       0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    3
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_pTestMode
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058  04B5                     _key_press:	
  5059                           
  5060                           ;main.c: 1584: if (bKeyData.byte == 0xFF)
  5061                           
  5062                           ; Regs used in _key_press: [wreg]
  5063  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  5064  04B6  086F               	movf	_bKeyData,w
  5065  04B7  3AFF               	xorlw	255
  5066  04B8  1903               	btfsc	3,2
  5067                           
  5068                           ;main.c: 1585: return 0;
  5069  04B9  3400               	retlw	0
  5070                           
  5071                           ;main.c: 1586: else
  5072                           ;main.c: 1587: {
  5073                           ;main.c: 1588: bSeg2 = 0b10111111;
  5074  04BA  30BF               	movlw	191
  5075  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  5076  04BC  00D0               	movwf	_bSeg2^(0+128)
  5077                           
  5078                           ;main.c: 1589: bSeg1 = 0b10111111;
  5079  04BD  00CF               	movwf	_bSeg1^(0+128)
  5080                           
  5081                           ;main.c: 1590: bSeg0 = 0b10111111;
  5082  04BE  00CE               	movwf	_bSeg0^(0+128)
  5083                           
  5084                           ;main.c: 1591: return 1;
  5085  04BF  3401               	retlw	1
  5086  04C0                     __end_of_key_press:	
  5087  04C0                     __ptext963:	
  5088 ;; =============== function _pInitAD ends ============
  5089                           
  5090                           
  5091 ;; *************** function _pClrDisp *****************
  5092 ;; Defined at:
  5093 ;;		line 106 in file "D:\MyWorks\CYD670(C16F883)\CYD670\drv_disp.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;		None               void
  5100 ;; Registers used:
  5101 ;;		wreg, fsr0l, fsr0h, status,2, pclath
  5102 ;; Tracked objects:
  5103 ;;		On entry : 40/20
  5104 ;;		On exit  : 60/20
  5105 ;;		Unchanged: FFF9F/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5107 ;;      Params:         0       0       0       0
  5108 ;;      Locals:         0       0       0       0
  5109 ;;      Temps:          0       0       0       0
  5110 ;;      Totals:         0       0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    3
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;;		_pTestMode
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121  04C0                     _pClrDisp:	
  5122                           
  5123                           ;drv_disp.c: 107: bSeg0 = ~tabSeg[10];
  5124                           
  5125                           ; Regs used in _pClrDisp: [wreg-fsr0h+status,2+pclath]
  5126  04C0  300B               	movlw	(_tabSeg-__stringbase+10)
  5127  04C1  0084               	movwf	4
  5128  04C2  158A  2000  118A   	fcall	stringdir
  5129  04C5  3AFF               	xorlw	255
  5130  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  5131  04C7  00CE               	movwf	_bSeg0^(0+128)
  5132                           
  5133                           ;drv_disp.c: 108: bSeg1 = ~tabSeg[10];
  5134  04C8  300B               	movlw	(_tabSeg-__stringbase+10)
  5135  04C9  0084               	movwf	4
  5136  04CA  158A  2000  118A   	fcall	stringdir
  5137                           
  5138                           ;drv_disp.c: 109: bSeg2 = ~tabSeg[10];
  5139  04CD  27A9               	fcall	PL35	;call to abstracted procedure
  5140  04CE  158A  2000         	fcall	stringdir
  5141  04D0  3AFF               	xorlw	255
  5142  04D1  00D0               	movwf	_bSeg2^(0+128)
  5143                           
  5144                           ;drv_disp.c: 110: bLed.byte = 0xff;
  5145  04D2  30FF               	movlw	255
  5146  04D3  00C6               	movwf	_bLed^(0+128)
  5147  04D4  0008               	return
  5148  04D5                     __end_of_pClrDisp:	
  5149  04D5                     __ptext936:	
  5150 ;; =============== function _pInitMCU ends ============
  5151                           
  5152                           
  5153 ;; *************** function _pConDisp *****************
  5154 ;; Defined at:
  5155 ;;		line 56 in file "D:\MyWorks\CYD670(C16F883)\CYD670\drv_disp.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  dat             2    7[BANK0 ] unsigned short 
  5158 ;;  dot             1    9[BANK0 ] unsigned char 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  s2              1   12[BANK0 ] unsigned char 
  5161 ;;  s1              1   11[BANK0 ] unsigned char 
  5162 ;;  s0              1   10[BANK0 ] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;		None               void
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 60/0
  5169 ;;		On exit  : 40/0
  5170 ;;		Unchanged: FFF9F/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5172 ;;      Params:         0       3       0       0
  5173 ;;      Locals:         0       3       0       0
  5174 ;;      Temps:          0       0       0       0
  5175 ;;      Totals:         0       6       0       0
  5176 ;;Total ram usage:        6 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    4
  5179 ;; This function calls:
  5180 ;;		___lwmod
  5181 ;;		___lwdiv
  5182 ;; This function is called by:
  5183 ;;		_pDispProc
  5184 ;;		_pTestMode
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187  04D5                     _pConDisp:	
  5188                           
  5189                           ;drv_disp.c: 57: U8 s0,s1,s2;
  5190                           ;drv_disp.c: 59: s0=dat%10;
  5191                           
  5192                           ; Regs used in _pConDisp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5193  04D5  2782  118A         	fcall	PL23	;call to abstracted procedure
  5194  04D7  253B  118A         	fcall	___lwmod
  5195  04D9  0820               	movf	?___lwmod,w
  5196  04DA  00AA               	movwf	pConDisp@s0
  5197                           
  5198                           ;drv_disp.c: 60: dat/=10;
  5199  04DB  2772  118A         	fcall	PL20	;call to abstracted procedure
  5200  04DD  2511  118A         	fcall	___lwdiv
  5201  04DF  0821               	movf	?___lwdiv+1,w
  5202  04E0  00A8               	movwf	pConDisp@dat+1
  5203  04E1  0820               	movf	?___lwdiv,w
  5204  04E2  00A7               	movwf	pConDisp@dat
  5205                           
  5206                           ;drv_disp.c: 61: s1=dat%10;
  5207  04E3  2782  118A         	fcall	PL23	;call to abstracted procedure
  5208  04E5  253B  118A         	fcall	___lwmod
  5209  04E7  0820               	movf	?___lwmod,w
  5210  04E8  00AB               	movwf	pConDisp@s1
  5211                           
  5212                           ;drv_disp.c: 62: s2=dat/10;
  5213  04E9  2772  118A         	fcall	PL20	;call to abstracted procedure
  5214  04EB  2511               	fcall	___lwdiv
  5215  04EC  0820               	movf	?___lwdiv,w
  5216  04ED  00AC               	movwf	pConDisp@s2
  5217                           
  5218                           ;drv_disp.c: 64: bSeg0 = ~tabSeg[s0];
  5219  04EE  082A               	movf	pConDisp@s0,w
  5220  04EF  3E01               	addlw	low (_tabSeg-__stringbase)
  5221  04F0  0084               	movwf	4
  5222  04F1  158A  2000  118A   	fcall	stringdir
  5223  04F4  3AFF               	xorlw	255
  5224  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  5225  04F6  00CE               	movwf	_bSeg0^(0+128)
  5226                           
  5227                           ;drv_disp.c: 65: bSeg1 = ~tabSeg[s1];
  5228  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  5229  04F8  082B               	movf	pConDisp@s1,w
  5230  04F9  3E01               	addlw	low (_tabSeg-__stringbase)
  5231  04FA  0084               	movwf	4
  5232  04FB  158A  2000  118A   	fcall	stringdir
  5233  04FE  3AFF               	xorlw	255
  5234  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  5235  0500  00CF               	movwf	_bSeg1^(0+128)
  5236                           
  5237                           ;drv_disp.c: 66: bSeg2 = ~tabSeg[s2];
  5238  0501  1283               	bcf	3,5	;RP0=0, select bank0
  5239  0502  082C               	movf	pConDisp@s2,w
  5240  0503  3E01               	addlw	low (_tabSeg-__stringbase)
  5241  0504  0084               	movwf	4
  5242  0505  158A  2000  118A   	fcall	stringdir
  5243  0508  3AFF               	xorlw	255
  5244  0509  1683               	bsf	3,5	;RP0=1, select bank1
  5245  050A  00D0               	movwf	_bSeg2^(0+128)
  5246                           
  5247                           ;drv_disp.c: 68: if (dot==1)
  5248  050B  1283               	bcf	3,5	;RP0=0, select bank0
  5249  050C  0B29               	decfsz	pConDisp@dot,w
  5250  050D  0008               	return
  5251                           
  5252                           ;drv_disp.c: 69: bSeg1 &= 0x7F;
  5253  050E  1683               	bsf	3,5	;RP0=1, select bank1
  5254  050F  13CF               	bcf	_bSeg1^(0+128),7
  5255  0510  0008               	return
  5256  0511                     __end_of_pConDisp:	
  5257  0511                     __ptext942:	
  5258 ;; =============== function ___lwmod ends ============
  5259                           
  5260                           
  5261 ;; *************** function ___lwdiv *****************
  5262 ;; Defined at:
  5263 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  divisor         2    0[BANK0 ] unsigned int 
  5266 ;;  dividend        2    2[BANK0 ] unsigned int 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  quotient        2    4[BANK0 ] unsigned int 
  5269 ;;  counter         1    6[BANK0 ] unsigned char 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  2    0[BANK0 ] unsigned int 
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0
  5274 ;; Tracked objects:
  5275 ;;		On entry : 60/0
  5276 ;;		On exit  : 60/0
  5277 ;;		Unchanged: FFF9F/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5279 ;;      Params:         0       4       0       0
  5280 ;;      Locals:         0       3       0       0
  5281 ;;      Temps:          0       0       0       0
  5282 ;;      Totals:         0       7       0       0
  5283 ;;Total ram usage:        7 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    3
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_pConDisp
  5290 ;;		_pTimeProc
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293  0511                     ___lwdiv:	
  5294                           
  5295                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5296  0511  01A4               	clrf	___lwdiv@quotient
  5297  0512  01A5               	clrf	___lwdiv@quotient+1
  5298  0513  0821               	movf	___lwdiv@divisor+1,w
  5299  0514  0420               	iorwf	___lwdiv@divisor,w
  5300  0515  1903               	skipnz
  5301  0516  2D36               	goto	l10843
  5302  0517  01A6               	clrf	___lwdiv@counter
  5303  0518                     L23:	
  5304  0518  0AA6               	incf	___lwdiv@counter,f
  5305  0519  1BA1               	btfsc	___lwdiv@divisor+1,7
  5306  051A  2D1F               	goto	l10831
  5307  051B  1003               	clrc
  5308  051C  0DA0               	rlf	___lwdiv@divisor,f
  5309  051D  0DA1               	rlf	___lwdiv@divisor+1,f
  5310  051E  2D18               	goto	L23
  5311  051F                     l10831:	
  5312  051F  1003               	clrc
  5313  0520  0DA4               	rlf	___lwdiv@quotient,f
  5314  0521  0DA5               	rlf	___lwdiv@quotient+1,f
  5315  0522  0821               	movf	___lwdiv@divisor+1,w
  5316  0523  0223               	subwf	___lwdiv@dividend+1,w
  5317  0524  1D03               	skipz
  5318  0525  2D28               	goto	u2695
  5319  0526  0820               	movf	___lwdiv@divisor,w
  5320  0527  0222               	subwf	___lwdiv@dividend,w
  5321  0528                     u2695:	
  5322  0528  1C03               	skipc
  5323  0529  2D32               	goto	L24
  5324  052A  0820               	movf	___lwdiv@divisor,w
  5325  052B  02A2               	subwf	___lwdiv@dividend,f
  5326  052C  0821               	movf	___lwdiv@divisor+1,w
  5327  052D  1C03               	skipc
  5328  052E  03A3               	decf	___lwdiv@dividend+1,f
  5329  052F  02A3               	subwf	___lwdiv@dividend+1,f
  5330  0530  1424               	bsf	___lwdiv@quotient,0
  5331  0531  1003               	clrc
  5332  0532                     L24:	
  5333  0532  0CA1               	rrf	___lwdiv@divisor+1,f
  5334  0533  0CA0               	rrf	___lwdiv@divisor,f
  5335  0534  0BA6               	decfsz	___lwdiv@counter,f
  5336  0535  2D1F               	goto	l10831
  5337  0536                     l10843:	
  5338  0536  0825               	movf	___lwdiv@quotient+1,w
  5339  0537  00A1               	movwf	?___lwdiv+1
  5340  0538  0824               	movf	___lwdiv@quotient,w
  5341  0539  00A0               	movwf	?___lwdiv
  5342  053A  0008               	return
  5343  053B                     __end_of___lwdiv:	
  5344  053B                     __ptext941:	
  5345 ;; =============== function ___lbdiv ends ============
  5346                           
  5347                           
  5348 ;; *************** function ___lwmod *****************
  5349 ;; Defined at:
  5350 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  divisor         2    0[BANK0 ] unsigned int 
  5353 ;;  dividend        2    2[BANK0 ] unsigned int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  counter         1    4[BANK0 ] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  2    0[BANK0 ] unsigned int 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 60/0
  5362 ;;		On exit  : 60/0
  5363 ;;		Unchanged: FFF9F/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5365 ;;      Params:         0       4       0       0
  5366 ;;      Locals:         0       1       0       0
  5367 ;;      Temps:          0       0       0       0
  5368 ;;      Totals:         0       5       0       0
  5369 ;;Total ram usage:        5 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    3
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_pConDisp
  5376 ;;		_pTimeProc
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379  053B                     ___lwmod:	
  5380                           
  5381                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5382  053B  0821               	movf	___lwmod@divisor+1,w
  5383  053C  0420               	iorwf	___lwmod@divisor,w
  5384  053D  1903               	skipnz
  5385  053E  2D5A               	goto	l10863
  5386  053F  01A4               	clrf	___lwmod@counter
  5387  0540                     L21:	
  5388  0540  0AA4               	incf	___lwmod@counter,f
  5389  0541  1BA1               	btfsc	___lwmod@divisor+1,7
  5390  0542  2D47               	goto	l10855
  5391  0543  1003               	clrc
  5392  0544  0DA0               	rlf	___lwmod@divisor,f
  5393  0545  0DA1               	rlf	___lwmod@divisor+1,f
  5394  0546  2D40               	goto	L21
  5395  0547                     l10855:	
  5396  0547  0821               	movf	___lwmod@divisor+1,w
  5397  0548  0223               	subwf	___lwmod@dividend+1,w
  5398  0549  1D03               	skipz
  5399  054A  2D4D               	goto	u2735
  5400  054B  0820               	movf	___lwmod@divisor,w
  5401  054C  0222               	subwf	___lwmod@dividend,w
  5402  054D                     u2735:	
  5403  054D  1C03               	skipc
  5404  054E  2D56               	goto	L22
  5405  054F  0820               	movf	___lwmod@divisor,w
  5406  0550  02A2               	subwf	___lwmod@dividend,f
  5407  0551  0821               	movf	___lwmod@divisor+1,w
  5408  0552  1C03               	skipc
  5409  0553  03A3               	decf	___lwmod@dividend+1,f
  5410  0554  02A3               	subwf	___lwmod@dividend+1,f
  5411  0555  1003               	clrc
  5412  0556                     L22:	
  5413  0556  0CA1               	rrf	___lwmod@divisor+1,f
  5414  0557  0CA0               	rrf	___lwmod@divisor,f
  5415  0558  0BA4               	decfsz	___lwmod@counter,f
  5416  0559  2D47               	goto	l10855
  5417  055A                     l10863:	
  5418  055A  0823               	movf	___lwmod@dividend+1,w
  5419  055B  00A1               	movwf	?___lwmod+1
  5420  055C  0822               	movf	___lwmod@dividend,w
  5421  055D  00A0               	movwf	?___lwmod
  5422  055E  0008               	return
  5423  055F                     __end_of___lwmod:	
  5424  055F                     __ptext947:	
  5425 ;; =============== function _memcpyee ends ============
  5426                           
  5427                           
  5428 ;; *************** function _eecpymem *****************
  5429 ;; Defined at:
  5430 ;;		line 7 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\eeprom.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  to              1    wreg     PTR volatile unsigned ch
  5433 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  5434 ;;		 -> __eetoi@data(2), __eetoc@data(1), EE_DATA(7), 
  5435 ;;  from            2    0[BANK0 ] PTR eeprom unsigned char
  5436 ;;		 -> RAM(512), 
  5437 ;;  size            1    2[BANK0 ] unsigned char 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  to              1    3[BANK0 ] PTR volatile unsigned ch
  5440 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  5441 ;;		 -> __eetoi@data(2), __eetoc@data(1), EE_DATA(7), 
  5442 ;;  cp              1    4[BANK0 ] PTR volatile unsigned ch
  5443 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  5444 ;;		 -> __eetoi@data(2), __eetoc@data(1), EE_DATA(7), 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;		None               void
  5447 ;; Registers used:
  5448 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5449 ;; Tracked objects:
  5450 ;;		On entry : 60/0
  5451 ;;		On exit  : 60/0
  5452 ;;		Unchanged: FFE9F/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5454 ;;      Params:         0       3       0       0
  5455 ;;      Locals:         0       2       0       0
  5456 ;;      Temps:          0       0       0       0
  5457 ;;      Totals:         0       5       0       0
  5458 ;;Total ram usage:        5 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    3
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_pReadEE
  5465 ;;		_pTestMode
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468  055F                     _eecpymem:	
  5469                           
  5470                           ; Regs used in _eecpymem: [wreg-fsr0h+status,2+status,0]
  5471                           ;eecpymem@to stored from wreg
  5472  055F  00A3               	movwf	eecpymem@to
  5473  0560  0823               	movf	eecpymem@to,w
  5474  0561  00A4               	movwf	eecpymem@cp
  5475  0562                     l8047:	
  5476  0562  1683               	bsf	3,5	;RP0=1, select bank3
  5477  0563  1703               	bsf	3,6	;RP1=1, select bank3
  5478  0564  188C               	btfsc	12,1
  5479  0565  2D62               	goto	l8047
  5480  0566  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0567  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0568  0820               	movf	eecpymem@from,w
  5483  0569  1703               	bsf	3,6	;RP1=1, select bank2
  5484  056A  008D               	movwf	13	;volatile
  5485  056B                     l10757:	
  5486  056B  1303               	bcf	3,6	;RP1=0, select bank0
  5487  056C  03A2               	decf	eecpymem@size,f
  5488  056D  0822               	movf	eecpymem@size,w
  5489  056E  3AFF               	xorlw	255
  5490  056F  1903               	btfsc	3,2
  5491  0570  0008               	return
  5492  0571                     l8052:	
  5493  0571  1683               	bsf	3,5	;RP0=1, select bank3
  5494  0572  1703               	bsf	3,6	;RP1=1, select bank3
  5495  0573  188C               	btfsc	12,1
  5496  0574  2D71               	goto	l8052
  5497  0575  138C               	bcf	12,7	;volatile
  5498  0576  140C               	bsf	12,0
  5499  0577  1283               	bcf	3,5	;RP0=0, select bank0
  5500  0578  1303               	bcf	3,6	;RP1=0, select bank0
  5501  0579  0824               	movf	eecpymem@cp,w
  5502  057A  0084               	movwf	4
  5503  057B  1703               	bsf	3,6	;RP1=1, select bank2
  5504  057C  080C               	movf	12,w	;volatile
  5505  057D  1383               	bcf	3,7	;select IRP bank0
  5506  057E  0080               	movwf	0
  5507  057F  1303               	bcf	3,6	;RP1=0, select bank0
  5508  0580  0AA4               	incf	eecpymem@cp,f
  5509  0581  1703               	bsf	3,6	;RP1=1, select bank2
  5510  0582  0A8D               	incf	13,f	;volatile
  5511  0583  2D6B               	goto	l10757
  5512  0584                     __end_of_eecpymem:	
  5513  0584                     __ptext944:	
  5514 ;; =============== function ___wmul ends ============
  5515                           
  5516                           
  5517 ;; *************** function _eeprom_read *****************
  5518 ;; Defined at:
  5519 ;;		line 7 in file "eeread.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  addr            1    wreg     unsigned char 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  addr            1    0[BANK0 ] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      unsigned char 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0
  5528 ;; Tracked objects:
  5529 ;;		On entry : 60/0
  5530 ;;		On exit  : 60/40
  5531 ;;		Unchanged: FFE00/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5533 ;;      Params:         0       0       0       0
  5534 ;;      Locals:         0       1       0       0
  5535 ;;      Temps:          0       0       0       0
  5536 ;;      Totals:         0       1       0       0
  5537 ;;Total ram usage:        1 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    3
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		_pTestMode
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546  0584                     _eeprom_read:	
  5547                           
  5548                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5549                           ;eeprom_read@addr stored from wreg
  5550  0584  00A0               	movwf	eeprom_read@addr
  5551  0585                     l6304:	
  5552  0585  0064               	clrwdt	;#
  5553  0586  1683               	bsf	3,5	;RP0=1, select bank3
  5554  0587  1703               	bsf	3,6	;RP1=1, select bank3
  5555  0588  188C               	btfsc	12,1
  5556  0589  2D85               	goto	l6304
  5557  058A  1283               	bcf	3,5	;RP0=0, select bank0
  5558  058B  1303               	bcf	3,6	;RP1=0, select bank0
  5559  058C  0820               	movf	eeprom_read@addr,w
  5560  058D  1703               	bsf	3,6	;RP1=1, select bank2
  5561  058E  008D               	movwf	13	;volatile
  5562  058F  303F               	movlw	63
  5563  0590  1683               	bsf	3,5	;RP0=1, select bank3
  5564  0591  058C               	andwf	12,f	;volatile
  5565  0592  140C               	bsf	12,0
  5566  0593  1003               	clrc
  5567  0594  180C               	btfsc	12,0
  5568  0595  1403               	setc
  5569  0596  1803               	skipnc
  5570  0597  3001               	movlw	1
  5571  0598  1283               	bcf	3,5	;RP0=0, select bank2
  5572  0599  080C               	movf	12,w	;volatile
  5573  059A  0008               	return
  5574  059B                     __end_of_eeprom_read:	
  5575  059B                     __ptext933:	
  5576 ;; =============== function _pWashFlow ends ============
  5577                           
  5578                           
  5579 ;; *************** function _pKeyProc *****************
  5580 ;; Defined at:
  5581 ;;		line 428 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;		None               void
  5588 ;; Registers used:
  5589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: FFF9F/0
  5594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5595 ;;      Params:         0       0       0       0
  5596 ;;      Locals:         0       0       0       0
  5597 ;;      Temps:          0       4       0       0
  5598 ;;      Totals:         0       4       0       0
  5599 ;;Total ram usage:        4 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    4
  5602 ;; This function calls:
  5603 ;;		_pSwitchMode
  5604 ;;		_eeprom_write
  5605 ;;		_pRunStep
  5606 ;;		_pReLoadTime
  5607 ;;		_pTuneHour
  5608 ;;		_pTuneMin
  5609 ;;		_pRunWashFlow
  5610 ;; This function is called by:
  5611 ;;		_main
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614  059B                     _pKeyProc:	
  5615                           
  5616                           ;main.c: 429: if (fKeyPress)
  5617                           
  5618                           ; Regs used in _pKeyProc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5619  059B  1F70               	btfss	_fKeyPress/(0+8),_fKeyPress& (0+7)
  5620  059C  2DC5               	goto	l5125
  5621                           
  5622                           ;main.c: 430: {
  5623                           ;main.c: 432: if (bKeyData.byte == 0xFF)
  5624  059D  1283               	bcf	3,5	;RP0=0, select bank0
  5625  059E  1303               	bcf	3,6	;RP1=0, select bank0
  5626  059F  086F               	movf	_bKeyData,w
  5627  05A0  3AFF               	xorlw	255
  5628  05A1  1903               	btfsc	3,2
  5629                           
  5630                           ;main.c: 433: {
  5631                           ;main.c: 434: fKeyPress = 0;
  5632  05A2  1370               	bcf	_fKeyPress/(0+8),_fKeyPress& (0+7)
  5633                           
  5634                           ;main.c: 435: }
  5635                           ;main.c: 438: if (bKeyHTCnt == 0)
  5636  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  5637  05A4  08C4               	movf	_bKeyHTCnt^(0+128),f
  5638  05A5  1D03               	skipz
  5639  05A6  2DC0               	goto	l11039
  5640                           
  5641                           ;main.c: 439: {
  5642                           ;main.c: 440: if (!bKeyData.bits.b2)
  5643  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  5644  05A8  196F               	btfsc	_bKeyData,2
  5645  05A9  2DB9               	goto	l5128
  5646                           
  5647                           ;main.c: 441: {
  5648                           ;main.c: 442: if (bRunMode == 0)
  5649  05AA  08EC               	movf	_bRunMode,f
  5650  05AB  1D03               	skipz
  5651  05AC  2DB5               	goto	l11033
  5652                           
  5653                           ;main.c: 443: {
  5654                           ;main.c: 444: bSetTmp=EE_DATA.var.SETHOUR;
  5655  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  5656  05AE  0856               	movf	(_EE_DATA^(0+128)+4),w
  5657  05AF  00F9               	movwf	_bSetTmp
  5658  05B0  3001               	movlw	1
  5659  05B1  01FA               	clrf	_bSetTmp+1
  5660  05B2  01FB               	clrf	_bSetTmp+2
  5661  05B3  01FC               	clrf	_bSetTmp+3
  5662                           
  5663                           ;main.c: 445: pSwitchMode(1);
  5664  05B4  2210               	fcall	_pSwitchMode
  5665  05B5                     l11033:	
  5666                           
  5667                           ;main.c: 446: }
  5668                           ;main.c: 447: bKeyHTCnt=255;
  5669  05B5  30FF               	movlw	255
  5670  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  5671  05B7  00C4               	movwf	_bKeyHTCnt^(0+128)
  5672                           
  5673                           ;main.c: 448: }
  5674  05B8  0008               	return
  5675  05B9                     l5128:	
  5676                           
  5677                           ;main.c: 449: else if (!bKeyData.bits.b0)
  5678  05B9  186F               	btfsc	_bKeyData,0
  5679                           
  5680                           ;main.c: 455: else if (!bKeyData.bits.b1)
  5681  05BA  18EF               	btfsc	_bKeyData,1
  5682  05BB  0008               	return
  5683                           
  5684                           ;main.c: 456: {
  5685                           ;main.c: 459: bKeyHTCnt = 20;
  5686  05BC  3014               	movlw	20
  5687  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  5688  05BE  00C4               	movwf	_bKeyHTCnt^(0+128)
  5689                           
  5690                           ;main.c: 460: goto _WASH_KEY;
  5691  05BF  2E47               	goto	l11097
  5692  05C0                     l11039:	
  5693                           
  5694                           ;main.c: 463: else if (bKeyHTCnt != 255)
  5695  05C0  0844               	movf	_bKeyHTCnt^(0+128),w
  5696  05C1  3AFF               	xorlw	255
  5697  05C2  1D03               	btfss	3,2
  5698                           
  5699                           ;main.c: 464: bKeyHTCnt--;
  5700  05C3  03C4               	decf	_bKeyHTCnt^(0+128),f
  5701  05C4  0008               	return
  5702  05C5                     l5125:	
  5703                           ;main.c: 465: }
  5704                           
  5705                           
  5706                           ;main.c: 467: else
  5707                           ;main.c: 468: {
  5708                           ;main.c: 470: if (!bKeyData.bits.b2)
  5709  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  5710  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  5711  05C7  1D6F               	btfss	_bKeyData,2
  5712  05C8  2E22               	goto	l11077
  5713  05C9  2E2E               	goto	l5138
  5714  05CA                     l11045:	
  5715                           
  5716                           ;main.c: 477: bKeyHTCnt = 200;
  5717  05CA  30C8               	movlw	200
  5718  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  5719  05CC  2E76               	goto	L13
  5720  05CD                     l11047:	
  5721                           ;main.c: 478: break;
  5722                           
  5723                           
  5724                           ;main.c: 482: if (bRunStep==1)
  5725  05CD  0B6D               	decfsz	_bRunStep,w
  5726  05CE  2DEE               	goto	l11057
  5727                           
  5728                           ;main.c: 483: {
  5729                           ;main.c: 484: if (EE_DATA.var.SETHOUR!=bSetTmp)
  5730  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  5731  05D0  0856               	movf	(_EE_DATA^(0+128)+4),w
  5732  05D1  277A  118A         	fcall	PL22	;call to abstracted procedure
  5733  05D3  1D03               	skipz
  5734  05D4  2DDF               	goto	u3065
  5735  05D5  087B               	movf	_bSetTmp+2,w
  5736  05D6  0624               	xorwf	??_pKeyProc+2,w
  5737  05D7  1D03               	skipz
  5738  05D8  2DDF               	goto	u3065
  5739  05D9  087A               	movf	_bSetTmp+1,w
  5740  05DA  0623               	xorwf	??_pKeyProc+1,w
  5741  05DB  1D03               	skipz
  5742  05DC  2DDF               	goto	u3065
  5743  05DD  0879               	movf	_bSetTmp,w
  5744  05DE  0622               	xorwf	??_pKeyProc,w
  5745  05DF                     u3065:	
  5746  05DF  1903               	skipnz
  5747  05E0  2DEA               	goto	l11055
  5748                           
  5749                           ;main.c: 485: {
  5750                           ;main.c: 486: EE_DATA.var.SETHOUR = bSetTmp;
  5751  05E1  0879               	movf	_bSetTmp,w
  5752  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  5753  05E3  00D6               	movwf	(_EE_DATA^(0+128)+4)
  5754                           
  5755                           ;main.c: 487: eeprom_write(05,EE_DATA.var.SETHOUR);
  5756  05E4  0856               	movf	(_EE_DATA^(0+128)+4),w
  5757  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  5758  05E6  00A0               	movwf	?_eeprom_write
  5759  05E7  3005               	movlw	5
  5760  05E8  2679  118A         	fcall	_eeprom_write
  5761  05EA                     l11055:	
  5762                           
  5763                           ;main.c: 488: }
  5764                           ;main.c: 490: pRunStep(2);
  5765  05EA  3002               	movlw	2
  5766  05EB  2209  118A         	fcall	_pRunStep
  5767                           
  5768                           ;main.c: 491: }
  5769  05ED  2E77               	goto	l11117
  5770  05EE                     l11057:	
  5771                           
  5772                           ;main.c: 493: else if (bRunStep==3)
  5773  05EE  086D               	movf	_bRunStep,w
  5774  05EF  3A03               	xorlw	3
  5775  05F0  1D03               	skipz
  5776  05F1  2E77               	goto	l11117
  5777                           
  5778                           ;main.c: 494: {
  5779                           ;main.c: 495: if (EE_DATA.var.SETMIN!=bSetTmp)
  5780  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  5781  05F3  0857               	movf	(_EE_DATA^(0+128)+5),w
  5782  05F4  277A  118A         	fcall	PL22	;call to abstracted procedure
  5783  05F6  1D03               	skipz
  5784  05F7  2E02               	goto	u3085
  5785  05F8  087B               	movf	_bSetTmp+2,w
  5786  05F9  0624               	xorwf	??_pKeyProc+2,w
  5787  05FA  1D03               	skipz
  5788  05FB  2E02               	goto	u3085
  5789  05FC  087A               	movf	_bSetTmp+1,w
  5790  05FD  0623               	xorwf	??_pKeyProc+1,w
  5791  05FE  1D03               	skipz
  5792  05FF  2E02               	goto	u3085
  5793  0600  0879               	movf	_bSetTmp,w
  5794  0601  0622               	xorwf	??_pKeyProc,w
  5795  0602                     u3085:	
  5796  0602  1903               	skipnz
  5797  0603  2E0D               	goto	l11065
  5798                           
  5799                           ;main.c: 496: {
  5800                           ;main.c: 497: EE_DATA.var.SETMIN = bSetTmp;
  5801  0604  0879               	movf	_bSetTmp,w
  5802  0605  1683               	bsf	3,5	;RP0=1, select bank1
  5803  0606  00D7               	movwf	(_EE_DATA^(0+128)+5)
  5804                           
  5805                           ;main.c: 498: eeprom_write(06,EE_DATA.var.SETMIN);
  5806  0607  0857               	movf	(_EE_DATA^(0+128)+5),w
  5807  0608  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0609  00A0               	movwf	?_eeprom_write
  5809  060A  3006               	movlw	6
  5810  060B  2679  118A         	fcall	_eeprom_write
  5811  060D                     l11065:	
  5812                           
  5813                           ;main.c: 499: }
  5814                           ;main.c: 501: pReLoadTime();
  5815  060D  2698  118A         	fcall	_pReLoadTime
  5816                           
  5817                           ;main.c: 502: pRunStep(6);
  5818  060F  3006               	movlw	6
  5819  0610  2209  118A         	fcall	_pRunStep
  5820  0612  2E77               	goto	l11117
  5821  0613                     l11069:	
  5822                           
  5823                           ;main.c: 508: if (bSetTmp==0)
  5824  0613  087C               	movf	_bSetTmp+3,w
  5825  0614  047B               	iorwf	_bSetTmp+2,w
  5826  0615  047A               	iorwf	_bSetTmp+1,w
  5827  0616  0479               	iorwf	_bSetTmp,w
  5828  0617  1D03               	skipz
  5829  0618  2E1E               	goto	l11073
  5830                           
  5831                           ;main.c: 509: EE_DATA.var.TOLLITER = 0;
  5832  0619  1683               	bsf	3,5	;RP0=1, select bank1
  5833  061A  01D2               	clrf	_EE_DATA^(0+128)
  5834  061B  01D3               	clrf	(_EE_DATA+1)^(0+128)
  5835  061C  01D4               	clrf	(_EE_DATA+2)^(0+128)
  5836  061D  01D5               	clrf	(_EE_DATA+3)^(0+128)
  5837  061E                     l11073:	
  5838                           
  5839                           ;main.c: 510: pSwitchMode(0);
  5840  061E  3000               	movlw	0
  5841  061F  2210  118A         	fcall	_pSwitchMode
  5842                           
  5843                           ;main.c: 511: break;
  5844  0621  2E77               	goto	l11117
  5845  0622                     l11077:	
  5846  0622  086C               	movf	_bRunMode,w
  5847                           
  5848                           ; Switch size 1, requested type "space"
  5849                           ; Number of cases is 3, Range of values is 0 to 2
  5850                           ; switch strategies available:
  5851                           ; Name         Instructions Cycles
  5852                           ; simple_byte           10     6 (average)
  5853                           ; direct_byte           13     7 (fixed)
  5854                           ; jumptable            260     6 (fixed)
  5855                           ; rangetable             7     6 (fixed)
  5856                           ; spacedrange           12     9 (fixed)
  5857                           ; locatedrange           3     3 (fixed)
  5858                           ;	Chosen strategy is simple_byte
  5859  0623  3A00               	xorlw	0	; case 0
  5860  0624  1903               	skipnz
  5861  0625  2DCA               	goto	l11045
  5862  0626  3A01               	xorlw	1	; case 1
  5863  0627  1903               	skipnz
  5864  0628  2DCD               	goto	l11047
  5865  0629  3A03               	xorlw	3	; case 2
  5866  062A  1903               	skipnz
  5867  062B  2E13               	goto	l11069
  5868  062C  2E77               	goto	l11117
  5869                           
  5870                           ;main.c: 514: goto _KPRESS2;
  5871  062D  2E77               	goto	l11117
  5872  062E                     l5138:	
  5873                           
  5874                           ;main.c: 518: else if (!bKeyData.bits.b1)
  5875  062E  1CEF               	btfss	_bKeyData,1
  5876  062F  2E47               	goto	l11097
  5877  0630  2E50               	goto	l5152
  5878  0631                     l11081:	
  5879                           
  5880                           ;main.c: 531: if (bRunStep==1)
  5881  0631  0B6D               	decfsz	_bRunStep,w
  5882  0632  2E35               	goto	l11085
  5883                           
  5884                           ;main.c: 532: pTuneHour();
  5885  0633  26A1  118A         	fcall	_pTuneHour
  5886  0635                     l11085:	
  5887                           
  5888                           ;main.c: 533: if (bRunStep==3)
  5889  0635  086D               	movf	_bRunStep,w
  5890  0636  3A03               	xorlw	3
  5891  0637  1D03               	skipz
  5892  0638  2E71               	goto	l5161
  5893                           
  5894                           ;main.c: 534: pTuneMin();
  5895  0639  26BF  118A         	fcall	_pTuneMin
  5896  063B  2E71               	goto	l5161
  5897  063C                     l11089:	
  5898                           
  5899                           ;main.c: 539: if (bRunStep>0)
  5900  063C  086D               	movf	_bRunStep,w
  5901  063D  1903               	btfsc	3,2
  5902  063E  2E71               	goto	l5161
  5903                           
  5904                           ;main.c: 540: bSetTmp=0;
  5905  063F  01F9               	clrf	_bSetTmp
  5906  0640  01FA               	clrf	_bSetTmp+1
  5907  0641  01FB               	clrf	_bSetTmp+2
  5908  0642  01FC               	clrf	_bSetTmp+3
  5909  0643  2E71               	goto	l5161
  5910  0644                     l11093:	
  5911                           
  5912                           ;main.c: 545: pRunWashFlow();
  5913  0644  26E9  118A         	fcall	_pRunWashFlow
  5914                           
  5915                           ;main.c: 546: break;
  5916  0646  2E71               	goto	l5161
  5917  0647                     l11097:	
  5918  0647  1283               	bcf	3,5	;RP0=0, select bank0
  5919  0648  086C               	movf	_bRunMode,w
  5920                           
  5921                           ; Switch size 1, requested type "space"
  5922                           ; Number of cases is 2, Range of values is 1 to 2
  5923                           ; switch strategies available:
  5924                           ; Name         Instructions Cycles
  5925                           ; simple_byte            7     4 (average)
  5926                           ; direct_byte           14    10 (fixed)
  5927                           ; jumptable            263     9 (fixed)
  5928                           ;	Chosen strategy is simple_byte
  5929  0649  3A01               	xorlw	1	; case 1
  5930  064A  1903               	skipnz
  5931  064B  2E31               	goto	l11081
  5932  064C  3A03               	xorlw	3	; case 2
  5933  064D  1903               	skipnz
  5934  064E  2E3C               	goto	l11089
  5935  064F  2E44               	goto	l11093
  5936  0650                     l5152:	
  5937                           
  5938                           ;main.c: 552: else if (!bKeyData.bits.b0)
  5939  0650  186F               	btfsc	_bKeyData,0
  5940  0651  0008               	return
  5941  0652  2E63               	goto	l11113
  5942  0653                     l11103:	
  5943                           
  5944                           ;main.c: 559: pSwitchMode(3);
  5945  0653  3003               	movlw	3
  5946  0654  2210  118A         	fcall	_pSwitchMode
  5947                           
  5948                           ;main.c: 560: break;
  5949  0656  2E71               	goto	l5161
  5950  0657                     l11105:	
  5951                           
  5952                           ;main.c: 574: if (bRunStep<2)
  5953  0657  3002               	movlw	2
  5954  0658  026D               	subwf	_bRunStep,w
  5955  0659  1803               	skipnc
  5956  065A  2E5F               	goto	l11109
  5957                           
  5958                           ;main.c: 575: pRunStep(2);
  5959  065B  3002               	movlw	2
  5960  065C  2209  118A         	fcall	_pRunStep
  5961  065E  2E71               	goto	l5161
  5962  065F                     l11109:	
  5963                           
  5964                           ;main.c: 576: else
  5965                           ;main.c: 577: pSwitchMode(0);
  5966  065F  3000               	movlw	0
  5967  0660  2210  118A         	fcall	_pSwitchMode
  5968  0662  2E71               	goto	l5161
  5969  0663                     l11113:	
  5970  0663  086C               	movf	_bRunMode,w
  5971                           
  5972                           ; Switch size 1, requested type "space"
  5973                           ; Number of cases is 4, Range of values is 0 to 3
  5974                           ; switch strategies available:
  5975                           ; Name         Instructions Cycles
  5976                           ; simple_byte           13     7 (average)
  5977                           ; direct_byte           15     7 (fixed)
  5978                           ; jumptable            260     6 (fixed)
  5979                           ; rangetable             8     6 (fixed)
  5980                           ; spacedrange           14     9 (fixed)
  5981                           ; locatedrange           4     3 (fixed)
  5982                           ;	Chosen strategy is simple_byte
  5983  0664  3A00               	xorlw	0	; case 0
  5984  0665  1903               	skipnz
  5985  0666  2E53               	goto	l11103
  5986  0667  3A01               	xorlw	1	; case 1
  5987  0668  1903               	skipnz
  5988  0669  2E71               	goto	l5161
  5989  066A  3A03               	xorlw	3	; case 2
  5990  066B  1903               	skipnz
  5991  066C  2E71               	goto	l5161
  5992  066D  3A01               	xorlw	1	; case 3
  5993  066E  1903               	skipnz
  5994  066F  2E57               	goto	l11105
  5995  0670  2E71               	goto	l5161
  5996  0671                     l5161:	
  5997                           ;main.c: 582: _KPRESS: if (!fKeyPress)
  5998                           
  5999  0671  1B70               	btfsc	_fKeyPress/(0+8),_fKeyPress& (0+7)
  6000  0672  0008               	return
  6001                           
  6002                           ;main.c: 583: bKeyHTCnt = 70;
  6003  0673  3046               	movlw	70
  6004  0674  1683               	bsf	3,5	;RP0=1, select bank1
  6005  0675  1303               	bcf	3,6	;RP1=0, select bank1
  6006  0676                     L13:	
  6007  0676  00C4               	movwf	_bKeyHTCnt^(0+128)
  6008  0677                     l11117:	
  6009  0677  1770               	bsf	_fKeyPress/(0+8),_fKeyPress& (0+7)
  6010  0678  0008               	return
  6011  0679                     __end_of_pKeyProc:	
  6012  0679                     __ptext957:	
  6013 ;; =============== function _pFlashTimeCtl ends ============
  6014                           
  6015                           
  6016 ;; *************** function _eeprom_write *****************
  6017 ;; Defined at:
  6018 ;;		line 7 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\eewrite.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  addr            1    wreg     unsigned char 
  6021 ;;  value           1    0[BANK0 ] unsigned char 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  addr            1    1[BANK0 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      unsigned char 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 60/0
  6030 ;;		On exit  : 60/60
  6031 ;;		Unchanged: FFF9F/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6033 ;;      Params:         0       1       0       0
  6034 ;;      Locals:         0       1       0       0
  6035 ;;      Temps:          0       0       0       0
  6036 ;;      Totals:         0       2       0       0
  6037 ;;Total ram usage:        2 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    3
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_pKeyProc
  6044 ;;		_pTestMode
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047  0679                     _eeprom_write:	
  6048                           
  6049                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  6050                           ;eeprom_write@addr stored from wreg
  6051  0679  00A1               	movwf	eeprom_write@addr
  6052  067A                     l7174:	
  6053  067A  1683               	bsf	3,5	;RP0=1, select bank3
  6054  067B  1703               	bsf	3,6	;RP1=1, select bank3
  6055  067C  188C               	btfsc	12,1
  6056  067D  2E7A               	goto	l7174
  6057  067E  1283               	bcf	3,5	;RP0=0, select bank0
  6058  067F  1303               	bcf	3,6	;RP1=0, select bank0
  6059  0680  0821               	movf	eeprom_write@addr,w
  6060  0681  1703               	bsf	3,6	;RP1=1, select bank2
  6061  0682  008D               	movwf	13	;volatile
  6062  0683  1303               	bcf	3,6	;RP1=0, select bank0
  6063  0684  0820               	movf	eeprom_write@value,w
  6064  0685  1703               	bsf	3,6	;RP1=1, select bank2
  6065  0686  008C               	movwf	12	;volatile
  6066  0687  303F               	movlw	63
  6067  0688  1683               	bsf	3,5	;RP0=1, select bank3
  6068  0689  058C               	andwf	12,f	;volatile
  6069  068A  1003               	bcf	3,0
  6070  068B  1B8B               	btfsc	11,7
  6071  068C  1403               	bsf	3,0
  6072  068D  3055               	movlw	85
  6073  068E  138B               	bcf	11,7
  6074  068F  150C               	bsf	12,2
  6075  0690  008D               	movwf	13	;volatile
  6076  0691  30AA               	movlw	170
  6077  0692  008D               	movwf	13	;volatile
  6078  0693  148C               	bsf	12,1
  6079  0694  110C               	bcf	12,2
  6080  0695  1803               	btfsc	3,0
  6081  0696  178B               	bsf	11,7
  6082  0697  0008               	return
  6083  0698                     __end_of_eeprom_write:	
  6084  0698                     __ptext952:	
  6085 ;; =============== function _pTuneHour ends ============
  6086                           
  6087                           
  6088 ;; *************** function _pReLoadTime *****************
  6089 ;; Defined at:
  6090 ;;		line 1246 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;		None
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;		None               void
  6097 ;; Registers used:
  6098 ;;		wreg, status,2
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/20
  6101 ;;		On exit  : 60/20
  6102 ;;		Unchanged: FFF9F/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6104 ;;      Params:         0       0       0       0
  6105 ;;      Locals:         0       0       0       0
  6106 ;;      Temps:          0       0       0       0
  6107 ;;      Totals:         0       0       0       0
  6108 ;;Total ram usage:        0 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    3
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_pKeyProc
  6115 ;;		_pWashFlow
  6116 ;;		_pTimeProc
  6117 ;;		_pReadEE
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120  0698                     _pReLoadTime:	
  6121  0698                     l10653:	
  6122                           ; Regs used in _pReLoadTime: [wreg+status,2]
  6123                           
  6124                           
  6125                           ;main.c: 1247: bHour = EE_DATA.var.SETHOUR;
  6126  0698  1683               	bsf	3,5	;RP0=1, select bank1
  6127  0699  1303               	bcf	3,6	;RP1=0, select bank1
  6128  069A  0856               	movf	(_EE_DATA^(0+128)+4),w
  6129  069B  00C2               	movwf	_bHour^(0+128)
  6130                           
  6131                           ;main.c: 1248: bMin = EE_DATA.var.SETMIN;
  6132  069C  0857               	movf	(_EE_DATA^(0+128)+5),w
  6133  069D  00C7               	movwf	_bMin^(0+128)
  6134                           
  6135                           ;main.c: 1249: bSec = 0;
  6136  069E  01CD               	clrf	_bSec^(0+128)
  6137                           
  6138                           ;main.c: 1250: b1s = 0;
  6139  069F  01B9               	clrf	_b1s^(0+128)
  6140  06A0  0008               	return
  6141  06A1                     __end_of_pReLoadTime:	
  6142  06A1                     __ptext951:	
  6143 ;; =============== function _pTuneMin ends ============
  6144                           
  6145                           
  6146 ;; *************** function _pTuneHour *****************
  6147 ;; Defined at:
  6148 ;;		line 600 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;		None
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;		None               void
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0
  6157 ;; Tracked objects:
  6158 ;;		On entry : 60/0
  6159 ;;		On exit  : 60/0
  6160 ;;		Unchanged: FFF9F/0
  6161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6162 ;;      Params:         0       0       0       0
  6163 ;;      Locals:         0       0       0       0
  6164 ;;      Temps:          0       0       0       0
  6165 ;;      Totals:         0       0       0       0
  6166 ;;Total ram usage:        0 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:    3
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_pKeyProc
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175  06A1                     _pTuneHour:	
  6176                           
  6177                           ;main.c: 601: bSetTmp++;
  6178                           
  6179                           ; Regs used in _pTuneHour: [wreg+status,2+status,0]
  6180  06A1  0AF9               	incf	_bSetTmp,f
  6181  06A2  1903               	skipnz
  6182  06A3  0AFA               	incf	_bSetTmp+1,f
  6183  06A4  1903               	skipnz
  6184  06A5  0AFB               	incf	_bSetTmp+2,f
  6185  06A6  1903               	skipnz
  6186  06A7  0AFC               	incf	_bSetTmp+3,f
  6187                           
  6188                           ;main.c: 602: if (bSetTmp > 24)
  6189  06A8  3000               	movlw	0
  6190  06A9  027C               	subwf	_bSetTmp+3,w
  6191  06AA  1D03               	skipz
  6192  06AB  2EB6               	goto	u2435
  6193  06AC  3000               	movlw	0
  6194  06AD  027B               	subwf	_bSetTmp+2,w
  6195  06AE  1D03               	skipz
  6196  06AF  2EB6               	goto	u2435
  6197  06B0  3000               	movlw	0
  6198  06B1  027A               	subwf	_bSetTmp+1,w
  6199  06B2  1D03               	skipz
  6200  06B3  2EB6               	goto	u2435
  6201  06B4  3019               	movlw	25
  6202  06B5  0279               	subwf	_bSetTmp,w
  6203  06B6                     u2435:	
  6204  06B6  1C03               	skipc
  6205  06B7  2EBC               	goto	l10665
  6206                           
  6207                           ;main.c: 603: bSetTmp=0;
  6208  06B8  01F9               	clrf	_bSetTmp
  6209  06B9  01FA               	clrf	_bSetTmp+1
  6210  06BA  01FB               	clrf	_bSetTmp+2
  6211  06BB  01FC               	clrf	_bSetTmp+3
  6212  06BC                     l10665:	
  6213                           
  6214                           ;main.c: 605: {bFlashCnt=7; fFlash=1;};
  6215  06BC  3007               	movlw	7
  6216  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  6217                           
  6218                           ;main.c: 606: bRunCnt=0;
  6219  06BE  2F90               	ljmp	PL28	;call to abstracted procedure
  6220  06BF                     __end_of_pTuneHour:	
  6221  06BF                     __ptext950:	
  6222 ;; =============== function _pRunWashFlow ends ============
  6223                           
  6224                           
  6225 ;; *************** function _pTuneMin *****************
  6226 ;; Defined at:
  6227 ;;		line 612 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;		None
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;		None               void
  6234 ;; Registers used:
  6235 ;;		wreg, status,2, status,0
  6236 ;; Tracked objects:
  6237 ;;		On entry : 60/0
  6238 ;;		On exit  : 60/0
  6239 ;;		Unchanged: FFF9F/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6241 ;;      Params:         0       0       0       0
  6242 ;;      Locals:         0       0       0       0
  6243 ;;      Temps:          0       0       0       0
  6244 ;;      Totals:         0       0       0       0
  6245 ;;Total ram usage:        0 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    3
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		_pKeyProc
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254  06BF                     _pTuneMin:	
  6255                           
  6256                           ;main.c: 613: if (EE_DATA.var.SETHOUR==24)
  6257                           
  6258                           ; Regs used in _pTuneMin: [wreg+status,2+status,0]
  6259  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  6260  06C0  0856               	movf	(_EE_DATA^(0+128)+4),w
  6261  06C1  3A18               	xorlw	24
  6262  06C2  1D03               	skipz
  6263  06C3  2EC6               	goto	l10675
  6264  06C4                     l10673:	
  6265                           
  6266                           ;main.c: 614: bSetTmp=0;
  6267  06C4  01F9               	clrf	_bSetTmp
  6268  06C5  2EE4               	goto	L26
  6269  06C6                     l10675:	
  6270                           
  6271                           ;main.c: 615: else
  6272                           ;main.c: 616: {
  6273                           ;main.c: 617: bSetTmp+=10;
  6274  06C6  300A               	movlw	10
  6275  06C7  07F9               	addwf	_bSetTmp,f
  6276  06C8  3001               	movlw	1
  6277  06C9  1803               	skipnc
  6278  06CA  07FA               	addwf	_bSetTmp+1,f
  6279  06CB  1803               	skipnc
  6280  06CC  07FB               	addwf	_bSetTmp+2,f
  6281  06CD  1803               	skipnc
  6282  06CE  07FC               	addwf	_bSetTmp+3,f
  6283                           
  6284                           ;main.c: 619: if (bSetTmp>50)
  6285  06CF  3000               	movlw	0
  6286  06D0  027C               	subwf	_bSetTmp+3,w
  6287  06D1  1D03               	skipz
  6288  06D2  2EDD               	goto	u2455
  6289  06D3  3000               	movlw	0
  6290  06D4  027B               	subwf	_bSetTmp+2,w
  6291  06D5  1D03               	skipz
  6292  06D6  2EDD               	goto	u2455
  6293  06D7  3000               	movlw	0
  6294  06D8  027A               	subwf	_bSetTmp+1,w
  6295  06D9  1D03               	skipz
  6296  06DA  2EDD               	goto	u2455
  6297  06DB  3033               	movlw	51
  6298  06DC  0279               	subwf	_bSetTmp,w
  6299  06DD                     u2455:	
  6300  06DD  1C03               	skipc
  6301  06DE  2EE7               	goto	l10681
  6302                           
  6303                           ;main.c: 620: {
  6304                           ;main.c: 621: if (EE_DATA.var.SETHOUR == 0)
  6305  06DF  08D6               	movf	(_EE_DATA^(0+128)+4),f
  6306  06E0  1D03               	skipz
  6307  06E1  2EC4               	goto	l10673
  6308                           
  6309                           ;main.c: 622: bSetTmp = 10;
  6310  06E2  300A               	movlw	10
  6311  06E3  00F9               	movwf	_bSetTmp
  6312  06E4                     L26:	
  6313  06E4  01FA               	clrf	_bSetTmp+1
  6314  06E5  01FB               	clrf	_bSetTmp+2
  6315  06E6  01FC               	clrf	_bSetTmp+3
  6316  06E7                     l10681:	
  6317                           
  6318                           ;main.c: 625: }
  6319                           ;main.c: 626: }
  6320                           ;main.c: 627: {bFlashCnt=7; fFlash=1;};
  6321  06E7  3007               	movlw	7
  6322                           
  6323                           ;main.c: 628: bRunCnt=0;
  6324  06E8  2F90               	ljmp	PL28	;call to abstracted procedure
  6325  06E9                     __end_of_pTuneMin:	
  6326  06E9                     __ptext949:	
  6327 ;; =============== function _filter ends ============
  6328                           
  6329                           
  6330 ;; *************** function _pRunWashFlow *****************
  6331 ;; Defined at:
  6332 ;;		line 1000 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;		None               void
  6339 ;; Registers used:
  6340 ;;		status,2
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/20
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: FFF9F/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6346 ;;      Params:         0       0       0       0
  6347 ;;      Locals:         0       0       0       0
  6348 ;;      Temps:          0       0       0       0
  6349 ;;      Totals:         0       0       0       0
  6350 ;;Total ram usage:        0 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    3
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_pKeyProc
  6357 ;;		_pTimeProc
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360  06E9                     _pRunWashFlow:	
  6361  06E9                     l10687:	
  6362                           ; Regs used in _pRunWashFlow: [status,2]
  6363                           
  6364                           
  6365                           ;main.c: 1001: if (!fRunWash)
  6366  06E9  1BF0               	btfsc	_fRunWash/(0+8),_fRunWash& (0+7)
  6367  06EA  0008               	return
  6368                           
  6369                           ;main.c: 1002: {
  6370                           ;main.c: 1003: fRunWash=1;
  6371  06EB  17F0               	bsf	_fRunWash/(0+8),_fRunWash& (0+7)
  6372                           
  6373                           ;main.c: 1004: bRunWashStep=0;
  6374  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  6375  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  6376  06EE  01C9               	clrf	_bRunWashStep^(0+128)
  6377                           
  6378                           ;main.c: 1005: bRunWashT=0;
  6379  06EF  01CA               	clrf	_bRunWashT^(0+128)
  6380  06F0  0008               	return
  6381  06F1                     __end_of_pRunWashFlow:	
  6382  06F1                     PL2:	
  6383  06F1  0855               	movf	(_EE_DATA+3)^(0+128),w
  6384  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  6385  06F3  00B0               	movwf	?_pConLiter+3
  6386  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  6387  06F5  0854               	movf	(_EE_DATA+2)^(0+128),w
  6388  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  6389  06F7  00AF               	movwf	?_pConLiter+2
  6390  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  6391  06F9  0853               	movf	(_EE_DATA+1)^(0+128),w
  6392  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  6393  06FB  00AE               	movwf	?_pConLiter+1
  6394  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  6395  06FD  0852               	movf	_EE_DATA^(0+128),w
  6396  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  6397  06FF  00AD               	movwf	?_pConLiter
  6398  0700  01B1               	clrf	?_pConLiter+4
  6399  0701  0008               	return
  6400  0702                     PL4:	
  6401  0702  00A0               	movwf	?___llmod
  6402  0703  01A1               	clrf	?___llmod+1
  6403  0704  01A2               	clrf	?___llmod+2
  6404  0705  01A3               	clrf	?___llmod+3
  6405  0706  0830               	movf	pConLiter@dat+3,w
  6406  0707  00A7               	movwf	?___llmod+7
  6407  0708  082F               	movf	pConLiter@dat+2,w
  6408  0709  00A6               	movwf	?___llmod+6
  6409  070A  082E               	movf	pConLiter@dat+1,w
  6410  070B  00A5               	movwf	?___llmod+5
  6411  070C  082D               	movf	pConLiter@dat,w
  6412  070D  00A4               	movwf	?___llmod+4
  6413  070E  0008               	return
  6414  070F                     PL5:	
  6415  070F  0821               	movf	?___lldiv+1,w
  6416  0710  00AE               	movwf	pConLiter@dat+1
  6417  0711  0820               	movf	?___lldiv,w
  6418  0712  00AD               	movwf	pConLiter@dat
  6419  0713  340A               	retlw	10
  6420  0714                     PL6:	
  6421  0714  0820               	movf	?___lldiv,w
  6422  0715  00B7               	movwf	pDispProc@s1
  6423  0716  300A               	movlw	10
  6424  0717  00A0               	movwf	?___llmod
  6425  0718  01A1               	clrf	?___llmod+1
  6426  0719  01A2               	clrf	?___llmod+2
  6427  071A  01A3               	clrf	?___llmod+3
  6428  071B  087C               	movf	_bSetTmp+3,w
  6429  071C  00A7               	movwf	?___llmod+7
  6430  071D  087B               	movf	_bSetTmp+2,w
  6431  071E  00A6               	movwf	?___llmod+6
  6432  071F  087A               	movf	_bSetTmp+1,w
  6433  0720  00A5               	movwf	?___llmod+5
  6434  0721  0879               	movf	_bSetTmp,w
  6435  0722  00A4               	movwf	?___llmod+4
  6436  0723  0008               	return
  6437  0724                     PL7:	
  6438  0724  300A               	movlw	10
  6439  0725  00A0               	movwf	?___lldiv
  6440  0726  01A1               	clrf	?___lldiv+1
  6441  0727  01A2               	clrf	?___lldiv+2
  6442  0728  01A3               	clrf	?___lldiv+3
  6443  0729  0830               	movf	pConLiter@dat+3,w
  6444  072A  00A7               	movwf	?___lldiv+7
  6445  072B  082F               	movf	pConLiter@dat+2,w
  6446  072C  00A6               	movwf	?___lldiv+6
  6447  072D  082E               	movf	pConLiter@dat+1,w
  6448  072E  00A5               	movwf	?___lldiv+5
  6449  072F  082D               	movf	pConLiter@dat,w
  6450  0730  00A4               	movwf	?___lldiv+4
  6451  0731  0008               	return
  6452  0732                     PL9:	
  6453  0732  0823               	movf	?___lldiv+3,w
  6454  0733  00B0               	movwf	pConLiter@dat+3
  6455  0734  0822               	movf	?___lldiv+2,w
  6456  0735  00AF               	movwf	pConLiter@dat+2
  6457  0736  0008               	return
  6458  0737                     PL10:	
  6459  0737  00A0               	movwf	?___lldiv
  6460  0738  01A1               	clrf	?___lldiv+1
  6461  0739  01A2               	clrf	?___lldiv+2
  6462  073A  01A3               	clrf	?___lldiv+3
  6463  073B  087C               	movf	_bSetTmp+3,w
  6464  073C  00A7               	movwf	?___lldiv+7
  6465  073D  087B               	movf	_bSetTmp+2,w
  6466  073E  00A6               	movwf	?___lldiv+6
  6467  073F  087A               	movf	_bSetTmp+1,w
  6468  0740  00A5               	movwf	?___lldiv+5
  6469  0741  0879               	movf	_bSetTmp,w
  6470  0742  00A4               	movwf	?___lldiv+4
  6471  0743  0008               	return
  6472  0744                     PL11:	
  6473  0744  3AFF               	xorlw	255
  6474  0745  1683               	bsf	3,5	;RP0=1, select bank1
  6475  0746  00CF               	movwf	_bSeg1^(0+128)
  6476  0747  1283               	bcf	3,5	;RP0=0, select bank0
  6477  0748  0836               	movf	pDispProc@s0,w
  6478  0749  3E01               	addlw	low (_tabSeg-__stringbase)
  6479  074A  0084               	movwf	4
  6480  074B  0008               	return
  6481  074C                     PL12:	
  6482  074C  3AFF               	xorlw	255
  6483  074D  1683               	bsf	3,5	;RP0=1, select bank1
  6484  074E  00D0               	movwf	_bSeg2^(0+128)
  6485  074F  1283               	bcf	3,5	;RP0=0, select bank0
  6486  0750  0837               	movf	pDispProc@s1,w
  6487  0751  3E01               	addlw	low (_tabSeg-__stringbase)
  6488  0752  0084               	movwf	4
  6489  0753  0008               	return
  6490  0754                     PL15:	
  6491  0754  0837               	movf	(_wWFlow+1)^(0+128),w
  6492  0755  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0756  00A8               	movwf	?_pConDisp+1
  6494  0757  1683               	bsf	3,5	;RP0=1, select bank1
  6495  0758  0836               	movf	_wWFlow^(0+128),w
  6496  0759  1283               	bcf	3,5	;RP0=0, select bank0
  6497  075A  00A7               	movwf	?_pConDisp
  6498  075B  01A9               	clrf	?_pConDisp+2
  6499  075C  0AA9               	incf	?_pConDisp+2,f
  6500  075D  0008               	return
  6501  075E                     PL17:	
  6502  075E  087C               	movf	_bSetTmp+3,w
  6503  075F  00B0               	movwf	?_pConLiter+3
  6504  0760  087B               	movf	_bSetTmp+2,w
  6505  0761  00AF               	movwf	?_pConLiter+2
  6506  0762  087A               	movf	_bSetTmp+1,w
  6507  0763  00AE               	movwf	?_pConLiter+1
  6508  0764  0879               	movf	_bSetTmp,w
  6509  0765  00AD               	movwf	?_pConLiter
  6510  0766  01B1               	clrf	?_pConLiter+4
  6511  0767  0008               	return
  6512  0768                     PL18:	
  6513  0768  01B4               	clrf	_wTestPulseCnt^(0+128)
  6514  0769  01B5               	clrf	(_wTestPulseCnt+1)^(0+128)
  6515  076A  1283               	bcf	3,5	;RP0=0, select bank0
  6516  076B  01EE               	clrf	_bTestCnt
  6517  076C  1683               	bsf	3,5	;RP0=1, select bank1
  6518  076D  01D2               	clrf	_EE_DATA^(0+128)
  6519  076E  01D3               	clrf	(_EE_DATA+1)^(0+128)
  6520  076F  01D4               	clrf	(_EE_DATA+2)^(0+128)
  6521  0770  01D5               	clrf	(_EE_DATA+3)^(0+128)
  6522  0771  0008               	return
  6523  0772                     PL20:	
  6524  0772  300A               	movlw	10
  6525  0773  00A0               	movwf	?___lwdiv
  6526  0774  01A1               	clrf	?___lwdiv+1
  6527  0775  0828               	movf	pConDisp@dat+1,w
  6528  0776  00A3               	movwf	?___lwdiv+3
  6529  0777  0827               	movf	pConDisp@dat,w
  6530  0778  00A2               	movwf	?___lwdiv+2
  6531  0779  0008               	return
  6532  077A                     PL22:	
  6533  077A  1283               	bcf	3,5	;RP0=0, select bank0
  6534  077B  00A2               	movwf	??_pKeyProc
  6535  077C  01A3               	clrf	??_pKeyProc+1
  6536  077D  01A4               	clrf	??_pKeyProc+2
  6537  077E  01A5               	clrf	??_pKeyProc+3
  6538  077F  087C               	movf	_bSetTmp+3,w
  6539  0780  0625               	xorwf	??_pKeyProc+3,w
  6540  0781  0008               	return
  6541  0782                     PL23:	
  6542  0782  300A               	movlw	10
  6543  0783  00A0               	movwf	?___lwmod
  6544  0784  01A1               	clrf	?___lwmod+1
  6545  0785  0828               	movf	pConDisp@dat+1,w
  6546  0786  00A3               	movwf	?___lwmod+3
  6547  0787  0827               	movf	pConDisp@dat,w
  6548  0788  00A2               	movwf	?___lwmod+2
  6549  0789  0008               	return
  6550  078A                     PL24:	
  6551  078A  3007               	movlw	7
  6552  078B  01A0               	clrf	?_eecpymem
  6553  078C  0AA0               	incf	?_eecpymem,f
  6554  078D  01A1               	clrf	?_eecpymem+1
  6555  078E  00A2               	movwf	?_eecpymem+2
  6556  078F  34D2               	retlw	_EE_DATA& (0+255)
  6557  0790                     PL28:	
  6558  0790  00BF               	movwf	_bFlashCnt^(0+128)
  6559  0791  16F0               	bsf	_fFlash/(0+8),_fFlash& (0+7)
  6560  0792  1283               	bcf	3,5	;RP0=0, select bank0
  6561  0793  01EB               	clrf	_bRunCnt
  6562  0794  0008               	return
  6563  0795                     PL31:	
  6564  0795  00B6               	movwf	pDispProc@s0
  6565  0796  3014               	movlw	20
  6566  0797  0AEB               	incf	_bRunCnt,f
  6567  0798  026B               	subwf	_bRunCnt,w
  6568  0799  0008               	return
  6569  079A                     PL32:	
  6570  079A  3064               	movlw	100
  6571  079B  1283               	bcf	3,5	;RP0=0, select bank0
  6572  079C  0AEB               	incf	_bRunCnt,f
  6573  079D  026B               	subwf	_bRunCnt,w
  6574  079E  0008               	return
  6575  079F                     PL33:	
  6576  079F  1283               	bcf	3,5	;RP0=0, select bank0
  6577  07A0  086E               	movf	_bTestCnt,w
  6578  07A1  3E01               	addlw	low (_tabSeg-__stringbase)
  6579  07A2  0084               	movwf	4
  6580  07A3  0008               	return
  6581  07A4                     PL34:	
  6582  07A4  3028               	movlw	40
  6583  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  6584  07A6  0AEB               	incf	_bRunCnt,f
  6585  07A7  026B               	subwf	_bRunCnt,w
  6586  07A8  0008               	return
  6587  07A9                     PL35:	
  6588  07A9  3AFF               	xorlw	255
  6589  07AA  00CF               	movwf	_bSeg1^(0+128)
  6590  07AB  300B               	movlw	(_tabSeg-__stringbase+10)
  6591  07AC  0084               	movwf	4
  6592  07AD  0008               	return
  6593  07AE                     PL36:	
  6594  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  6595  07AF  00BF               	movwf	_bFlashCnt^(0+128)
  6596  07B0  16F0               	bsf	_fFlash/(0+8),_fFlash& (0+7)
  6597  07B1  0008               	return
  6598  07B2                     PL37:	
  6599  07B2  00B5               	movwf	pDispProc@s2
  6600  07B3  300A               	movlw	10
  6601  07B4  00B7               	movwf	pDispProc@s1
  6602  07B5  00B6               	movwf	pDispProc@s0
  6603  07B6  0008               	return
  6604  07B7                     __ptext946:	
  6605 ;; =============== function _key_press ends ============
  6606                           
  6607                           
  6608 ;; *************** function _memcpyee *****************
  6609 ;; Defined at:
  6610 ;;		line 25 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\eeprom.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  to              2    0[BANK0 ] PTR eeprom unsigned char
  6613 ;;		 -> RAM(512), 
  6614 ;;  from            1    2[BANK0 ] PTR const unsigned char 
  6615 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  6616 ;;		 -> __itoee@data(2), __ctoee@data(1), EE_DATA(7), 
  6617 ;;  size            1    3[BANK0 ] unsigned char 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  ptr             1    4[BANK0 ] PTR const unsigned char 
  6620 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  6621 ;;		 -> __itoee@data(2), __ctoee@data(1), EE_DATA(7), 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;		None               void
  6624 ;; Registers used:
  6625 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 7F/0
  6628 ;;		On exit  : 7F/0
  6629 ;;		Unchanged: FFE80/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6631 ;;      Params:         0       4       0       0
  6632 ;;      Locals:         0       1       0       0
  6633 ;;      Temps:          0       0       0       0
  6634 ;;      Totals:         0       5       0       0
  6635 ;;Total ram usage:        5 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    3
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_pReadEE
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644  07B7                     _memcpyee:	
  6645                           
  6646                           ; Regs used in _memcpyee: [wreg-fsr0h+status,2+status,0]
  6647  07B7  0822               	movf	memcpyee@from,w
  6648  07B8  00A4               	movwf	memcpyee@ptr
  6649  07B9                     l8059:	
  6650  07B9  1683               	bsf	3,5	;RP0=1, select bank3
  6651  07BA  1703               	bsf	3,6	;RP1=1, select bank3
  6652  07BB  188C               	btfsc	12,1
  6653  07BC  2FB9               	goto	l8059
  6654  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  6655  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  6656  07BF  0820               	movf	memcpyee@to,w
  6657  07C0  3EFF               	addlw	255
  6658  07C1  1703               	bsf	3,6	;RP1=1, select bank2
  6659  07C2  008D               	movwf	13	;volatile
  6660  07C3  1683               	bsf	3,5	;RP0=1, select bank3
  6661  07C4  138C               	bcf	12,7	;volatile
  6662  07C5                     l10787:	
  6663  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  6664  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  6665  07C7  03A3               	decf	memcpyee@size,f
  6666  07C8  0823               	movf	memcpyee@size,w
  6667  07C9  3AFF               	xorlw	255
  6668  07CA  1903               	btfsc	3,2
  6669  07CB  0008               	return
  6670  07CC                     l8064:	
  6671  07CC  1683               	bsf	3,5	;RP0=1, select bank3
  6672  07CD  1703               	bsf	3,6	;RP1=1, select bank3
  6673  07CE  188C               	btfsc	12,1
  6674  07CF  2FCC               	goto	l8064
  6675  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  6676  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  6677  07D2  0824               	movf	memcpyee@ptr,w
  6678  07D3  0084               	movwf	4
  6679  07D4  1383               	bcf	3,7	;select IRP bank0
  6680  07D5  0800               	movf	0,w
  6681  07D6  1703               	bsf	3,6	;RP1=1, select bank2
  6682  07D7  008C               	movwf	12	;volatile
  6683  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  6684  07D9  0AA4               	incf	memcpyee@ptr,f
  6685  07DA  1703               	bsf	3,6	;RP1=1, select bank2
  6686  07DB  0A8D               	incf	13,f	;volatile
  6687  07DC  1003               	bcf	3,0
  6688  07DD  1B8B               	btfsc	11,7
  6689  07DE  1403               	bsf	3,0
  6690  07DF  138B               	bcf	11,7
  6691  07E0  1683               	bsf	3,5	;RP0=1, select bank3
  6692  07E1  3055               	movlw	85
  6693  07E2  150C               	bsf	12,2
  6694  07E3  008D               	movwf	13	;volatile
  6695  07E4  30AA               	movlw	170
  6696  07E5  008D               	movwf	13	;volatile
  6697  07E6  148C               	bsf	12,1
  6698  07E7  110C               	bcf	12,2
  6699  07E8  1C03               	btfss	3,0
  6700  07E9  2FC5               	goto	l10787
  6701  07EA  178B               	bsf	11,7
  6702  07EB  2FC5               	goto	l10787
  6703  07EC                     __end_of_memcpyee:	
  6704                           
  6705                           	psect	text935
  6706  0A8D                     __ptext935:	
  6707 ;; =============== function _pReadEE ends ============
  6708                           
  6709                           
  6710 ;; *************** function _pInitMCU *****************
  6711 ;; Defined at:
  6712 ;;		line 24 in file "D:\MyWorks\CYD670(C16F883)\CYD670\InitMcu.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;		None               void
  6719 ;; Registers used:
  6720 ;;		wreg, status,2, status,0, pclath, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 17F/0
  6723 ;;		On exit  : 17F/20
  6724 ;;		Unchanged: FFE80/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6726 ;;      Params:         0       0       0       0
  6727 ;;      Locals:         0       0       0       0
  6728 ;;      Temps:          0       0       0       0
  6729 ;;      Totals:         0       0       0       0
  6730 ;;Total ram usage:        0 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    4
  6733 ;; This function calls:
  6734 ;;		_pInitAD
  6735 ;;		_pInitPORT
  6736 ;;		_pInitT0
  6737 ;;		_pInitT1
  6738 ;;		_pInitT2
  6739 ;; This function is called by:
  6740 ;;		_main
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743  0A8D                     _pInitMCU:	
  6744                           
  6745                           ;InitMcu.c: 25: INTCON=0;
  6746                           
  6747                           ; Regs used in _pInitMCU: [wreg+status,2+status,0+pclath+cstack]
  6748  0A8D  018B               	clrf	11	;volatile
  6749                           
  6750                           ;InitMcu.c: 26: PIE1=0;
  6751  0A8E  1683               	bsf	3,5	;RP0=1, select bank1
  6752  0A8F  018C               	clrf	12	;volatile
  6753                           
  6754                           ;InitMcu.c: 28: OPTION_REG = 0b00111111;
  6755  0A90  303F               	movlw	63
  6756  0A91  0081               	movwf	1	;volatile
  6757                           
  6758                           ;InitMcu.c: 29: OSCCON = 0b01100001;
  6759  0A92  3061               	movlw	97
  6760  0A93  008F               	movwf	15	;volatile
  6761  0A94                     l3949:	
  6762                           ;InitMcu.c: 30: while(!HTS);
  6763                           
  6764  0A94  1D0F               	btfss	15,2
  6765  0A95  2A94               	goto	l3949
  6766                           
  6767                           ;InitMcu.c: 32: pInitAD();
  6768  0A96  22A0  158A         	fcall	_pInitAD
  6769                           
  6770                           ;InitMcu.c: 33: pInitPORT();
  6771  0A98  22A8  158A         	fcall	_pInitPORT
  6772                           
  6773                           ;InitMcu.c: 34: pInitT0();
  6774  0A9A  22BC  158A         	fcall	_pInitT0
  6775                           
  6776                           ;InitMcu.c: 101: T1CON = 0b00000000;
  6777                           
  6778                           ; Regs used in _pInitT1: [status,2]
  6779                           
  6780                           ;InitMcu.c: 35: pInitT1();
  6781  0A9C  0190               	clrf	16	;volatile
  6782                           
  6783                           ;InitMcu.c: 36: pInitT2();
  6784  0A9D  22C4               	fcall	_pInitT2
  6785                           
  6786                           ;InitMcu.c: 43: PEIE = 1;
  6787  0A9E  170B               	bsf	11,6
  6788  0A9F  0008               	return
  6789  0AA0                     __end_of_pInitMCU:	
  6790  0AA0                     __ptext962:	
  6791 ;; =============== function _pInitPORT ends ============
  6792                           
  6793                           
  6794 ;; *************** function _pInitAD *****************
  6795 ;; Defined at:
  6796 ;;		line 51 in file "D:\MyWorks\CYD670(C16F883)\CYD670\InitMcu.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;		None
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;		None
  6801 ;; Return value:  Size  Location     Type
  6802 ;;		None               void
  6803 ;; Registers used:
  6804 ;;		status,2
  6805 ;; Tracked objects:
  6806 ;;		On entry : 17F/20
  6807 ;;		On exit  : 17F/0
  6808 ;;		Unchanged: FFE80/0
  6809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6810 ;;      Params:         0       0       0       0
  6811 ;;      Locals:         0       0       0       0
  6812 ;;      Temps:          0       0       0       0
  6813 ;;      Totals:         0       0       0       0
  6814 ;;Total ram usage:        0 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    3
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_pInitMCU
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823  0AA0                     _pInitAD:	
  6824                           
  6825                           ;InitMcu.c: 53: ANSEL = 0b00000000;
  6826                           
  6827                           ; Regs used in _pInitAD: [status,2]
  6828  0AA0  1703               	bsf	3,6	;RP1=1, select bank3
  6829  0AA1  0188               	clrf	8	;volatile
  6830                           
  6831                           ;InitMcu.c: 54: ANSELH = 0b00000000;
  6832  0AA2  0189               	clrf	9	;volatile
  6833                           
  6834                           ;InitMcu.c: 56: ADCON1 = 0b00000000;
  6835  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  6836  0AA4  019F               	clrf	31	;volatile
  6837                           
  6838                           ;InitMcu.c: 57: ADCON0 = 0b00000000;
  6839  0AA5  1283               	bcf	3,5	;RP0=0, select bank0
  6840  0AA6  019F               	clrf	31	;volatile
  6841  0AA7  0008               	return
  6842  0AA8                     __end_of_pInitAD:	
  6843  0AA8                     __ptext961:	
  6844 ;; =============== function _pInitT0 ends ============
  6845                           
  6846                           
  6847 ;; *************** function _pInitPORT *****************
  6848 ;; Defined at:
  6849 ;;		line 64 in file "D:\MyWorks\CYD670(C16F883)\CYD670\InitMcu.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;		None               void
  6856 ;; Registers used:
  6857 ;;		wreg, status,2
  6858 ;; Tracked objects:
  6859 ;;		On entry : 17F/0
  6860 ;;		On exit  : 17F/20
  6861 ;;		Unchanged: FFE80/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6863 ;;      Params:         0       0       0       0
  6864 ;;      Locals:         0       0       0       0
  6865 ;;      Temps:          0       0       0       0
  6866 ;;      Totals:         0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    3
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_pInitMCU
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876  0AA8                     _pInitPORT:	
  6877                           
  6878                           ;InitMcu.c: 66: PORTA = 0b00010001;
  6879                           
  6880                           ; Regs used in _pInitPORT: [wreg+status,2]
  6881  0AA8  3011               	movlw	17
  6882  0AA9  0085               	movwf	5	;volatile
  6883                           
  6884                           ;InitMcu.c: 67: TRISA = 0b00010000;
  6885  0AAA  3010               	movlw	16
  6886  0AAB  1683               	bsf	3,5	;RP0=1, select bank1
  6887  0AAC  0085               	movwf	5	;volatile
  6888                           
  6889                           ;InitMcu.c: 70: IOCB = 0b00000000;
  6890  0AAD  0196               	clrf	22	;volatile
  6891                           
  6892                           ;InitMcu.c: 71: PORTB = 0b11010111;
  6893  0AAE  30D7               	movlw	215
  6894  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  6895  0AB0  0086               	movwf	6	;volatile
  6896                           
  6897                           ;InitMcu.c: 72: WPUB = 0b11101111;
  6898  0AB1  30EF               	movlw	239
  6899  0AB2  1683               	bsf	3,5	;RP0=1, select bank1
  6900  0AB3  0095               	movwf	21	;volatile
  6901                           
  6902                           ;InitMcu.c: 73: TRISB = 0b00010000;
  6903  0AB4  3010               	movlw	16
  6904  0AB5  0086               	movwf	6	;volatile
  6905                           
  6906                           ;InitMcu.c: 76: PORTC = 0b11111111;
  6907  0AB6  30FF               	movlw	255
  6908  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  6909  0AB8  0087               	movwf	7	;volatile
  6910                           
  6911                           ;InitMcu.c: 77: TRISC = 0b00000000;
  6912  0AB9  1683               	bsf	3,5	;RP0=1, select bank1
  6913  0ABA  0187               	clrf	7	;volatile
  6914  0ABB  0008               	return
  6915  0ABC                     __end_of_pInitPORT:	
  6916  0ABC                     __ptext960:	
  6917 ;; =============== function _pInitT1 ends ============
  6918                           
  6919                           
  6920 ;; *************** function _pInitT0 *****************
  6921 ;; Defined at:
  6922 ;;		line 86 in file "D:\MyWorks\CYD670(C16F883)\CYD670\InitMcu.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;		None
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;		None               void
  6929 ;; Registers used:
  6930 ;;		wreg
  6931 ;; Tracked objects:
  6932 ;;		On entry : 17F/20
  6933 ;;		On exit  : 17F/0
  6934 ;;		Unchanged: FFE80/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6936 ;;      Params:         0       0       0       0
  6937 ;;      Locals:         0       0       0       0
  6938 ;;      Temps:          0       0       0       0
  6939 ;;      Totals:         0       0       0       0
  6940 ;;Total ram usage:        0 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    3
  6943 ;; This function calls:
  6944 ;;		Nothing
  6945 ;; This function is called by:
  6946 ;;		_pInitMCU
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949  0ABC                     _pInitT0:	
  6950                           
  6951                           ;InitMcu.c: 90: TMR0 = 246;
  6952                           
  6953                           ; Regs used in _pInitT0: [wreg]
  6954  0ABC  30F6               	movlw	246
  6955  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  6956  0ABE  0081               	movwf	1	;volatile
  6957                           
  6958                           ;InitMcu.c: 91: T0IE = 0;
  6959  0ABF  128B               	bcf	11,5
  6960                           
  6961                           ;InitMcu.c: 92: T0IF = 0;
  6962  0AC0  110B               	bcf	11,2
  6963  0AC1  0008               	return
  6964  0AC2                     __end_of_pInitT0:	
  6965  0AC2                     __ptext959:	
  6966 ;; =============== function _pInitT2 ends ============
  6967                           
  6968                           
  6969 ;; *************** function _pInitT1 *****************
  6970 ;; Defined at:
  6971 ;;		line 100 in file "D:\MyWorks\CYD670(C16F883)\CYD670\InitMcu.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;		None
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;		None               void
  6978 ;; Registers used:
  6979 ;;		status,2
  6980 ;; Tracked objects:
  6981 ;;		On entry : 17F/0
  6982 ;;		On exit  : 17F/0
  6983 ;;		Unchanged: FFE80/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6985 ;;      Params:         0       0       0       0
  6986 ;;      Locals:         0       0       0       0
  6987 ;;      Temps:          0       0       0       0
  6988 ;;      Totals:         0       0       0       0
  6989 ;;Total ram usage:        0 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    3
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_pInitMCU
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998  0AC2                     _pInitT1:	
  6999                           
  7000                           ;InitMcu.c: 101: T1CON = 0b00000000;
  7001                           
  7002                           ; Regs used in _pInitT1: [status,2]
  7003  0AC2  0190               	clrf	16	;volatile
  7004  0AC3  0008               	return
  7005  0AC4                     __end_of_pInitT1:	
  7006  0AC4                     __ptext958:	
  7007 ;; =============== function _eeprom_write ends ============
  7008                           
  7009                           
  7010 ;; *************** function _pInitT2 *****************
  7011 ;; Defined at:
  7012 ;;		line 111 in file "D:\MyWorks\CYD670(C16F883)\CYD670\InitMcu.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;		None
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;		None               void
  7019 ;; Registers used:
  7020 ;;		wreg
  7021 ;; Tracked objects:
  7022 ;;		On entry : 17F/0
  7023 ;;		On exit  : 17F/20
  7024 ;;		Unchanged: FFE80/0
  7025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7026 ;;      Params:         0       0       0       0
  7027 ;;      Locals:         0       0       0       0
  7028 ;;      Temps:          0       0       0       0
  7029 ;;      Totals:         0       0       0       0
  7030 ;;Total ram usage:        0 bytes
  7031 ;; Hardware stack levels used:    1
  7032 ;; Hardware stack levels required when called:    3
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_pInitMCU
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039  0AC4                     _pInitT2:	
  7040                           
  7041                           ;InitMcu.c: 112: PR2 = 126;
  7042                           
  7043                           ; Regs used in _pInitT2: [wreg]
  7044  0AC4  307E               	movlw	126
  7045  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
  7046  0AC6  0092               	movwf	18	;volatile
  7047                           
  7048                           ;InitMcu.c: 113: T2CON = 0b00000011;
  7049  0AC7  3003               	movlw	3
  7050  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  7051  0AC9  0092               	movwf	18	;volatile
  7052                           
  7053                           ;InitMcu.c: 114: TMR2IE = 1;
  7054  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  7055  0ACB  148C               	bsf	12,1
  7056  0ACC  0008               	return
  7057  0ACD                     __end_of_pInitT2:	
  7058                           
  7059                           	psect	text955
  7060  0A52                     __ptext955:	
  7061 ;; =============== function _pSwitchMode ends ============
  7062                           
  7063                           
  7064 ;; *************** function _pEESaveTimeCtl *****************
  7065 ;; Defined at:
  7066 ;;		line 1278 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;		None
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;		None               void
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, status,0
  7075 ;; Tracked objects:
  7076 ;;		On entry : 60/20
  7077 ;;		On exit  : 60/20
  7078 ;;		Unchanged: FFF9F/0
  7079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7080 ;;      Params:         0       0       0       0
  7081 ;;      Locals:         0       0       0       0
  7082 ;;      Temps:          0       0       0       0
  7083 ;;      Totals:         0       0       0       0
  7084 ;;Total ram usage:        0 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    3
  7087 ;; This function calls:
  7088 ;;		Nothing
  7089 ;; This function is called by:
  7090 ;;		_main
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093  0A52                     _pEESaveTimeCtl:	
  7094                           
  7095                           ;main.c: 1279: if (bSaveEECnt >= 50)
  7096                           
  7097                           ; Regs used in _pEESaveTimeCtl: [wreg+status,2+status,0]
  7098  0A52  3032               	movlw	50
  7099  0A53  024B               	subwf	_bSaveEECnt^(0+128),w
  7100  0A54  1C03               	skipc
  7101  0A55  2A58               	goto	l10635
  7102                           
  7103                           ;main.c: 1280: fSaveEE=0;
  7104  0A56  1071               	bcf	_fSaveEE/(0+8),_fSaveEE& (0+7)
  7105  0A57  0008               	return
  7106  0A58                     l10635:	
  7107                           
  7108                           ;main.c: 1281: else
  7109                           ;main.c: 1282: bSaveEECnt++;
  7110  0A58  0ACB               	incf	_bSaveEECnt^(0+128),f
  7111  0A59  0008               	return
  7112  0A5A                     __end_of_pEESaveTimeCtl:	
  7113                           
  7114                           	psect	text956
  7115  0A62                     __ptext956:	
  7116 ;; =============== function _pEESaveTimeCtl ends ============
  7117                           
  7118                           
  7119 ;; *************** function _pFlashTimeCtl *****************
  7120 ;; Defined at:
  7121 ;;		line 403 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;		None               void
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 40/20
  7132 ;;		On exit  : 60/20
  7133 ;;		Unchanged: FFF9F/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7135 ;;      Params:         0       0       0       0
  7136 ;;      Locals:         0       0       0       0
  7137 ;;      Temps:          0       0       0       0
  7138 ;;      Totals:         0       0       0       0
  7139 ;;Total ram usage:        0 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    3
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148  0A62                     _pFlashTimeCtl:	
  7149                           
  7150                           ;main.c: 404: if (bFlashCnt==0)
  7151                           
  7152                           ; Regs used in _pFlashTimeCtl: [wreg+status,2+status,0]
  7153  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  7154  0A63  08BF               	movf	_bFlashCnt^(0+128),f
  7155  0A64  1D03               	skipz
  7156  0A65  2A6B               	goto	l10629
  7157                           
  7158                           ;main.c: 405: {
  7159                           ;main.c: 406: bFlashCnt = 4;
  7160  0A66  3004               	movlw	4
  7161  0A67  00BF               	movwf	_bFlashCnt^(0+128)
  7162                           
  7163                           ;main.c: 407: fFlash = !fFlash;
  7164  0A68  3020               	movlw	(0+1) shl (_fFlash& (0+7))
  7165  0A69  06F0               	xorwf	_fFlash/(0+8),f
  7166                           
  7167                           ;main.c: 408: }
  7168  0A6A  0008               	return
  7169  0A6B                     l10629:	
  7170                           
  7171                           ;main.c: 409: else
  7172                           ;main.c: 410: bFlashCnt--;
  7173  0A6B  03BF               	decf	_bFlashCnt^(0+128),f
  7174  0A6C  0008               	return
  7175  0A6D                     __end_of_pFlashTimeCtl:	
  7176                           
  7177                           	psect	text964
  7178  0BB8                     __ptext964:	
  7179 ;; =============== function _pClrDisp ends ============
  7180                           
  7181                           
  7182 ;; *************** function _isr *****************
  7183 ;; Defined at:
  7184 ;;		line 168 in file "D:\MyWorks\CYD670(C16F883)\CYD670\main.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;		None               void
  7191 ;; Registers used:
  7192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 40/0
  7196 ;;		Unchanged: FFF9F/0
  7197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7198 ;;      Params:         0       0       0       0
  7199 ;;      Locals:         0       0       0       0
  7200 ;;      Temps:          3       0       0       0
  7201 ;;      Totals:         3       0       0       0
  7202 ;;Total ram usage:        3 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; Hardware stack levels required when called:    2
  7205 ;; This function calls:
  7206 ;;		i1_eeprom_write
  7207 ;;		_pScanKey
  7208 ;;		_pScanDisp
  7209 ;; This function is called by:
  7210 ;;		Interrupt level 1
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213  0BB8                     _isr:	
  7214                           
  7215                           ;main.c: 170: if (T0IF)
  7216  0BB8  1D0B               	btfss	11,2
  7217  0BB9  2C07               	goto	i1l10565
  7218  0BBA  30F6               	movlw	246
  7219                           
  7220                           ;main.c: 171: {
  7221                           ;main.c: 172: T0IF=0;
  7222  0BBB  110B               	bcf	11,2
  7223                           
  7224                           ;main.c: 173: TMR0=246;
  7225  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  7226  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  7227  0BBE  0081               	movwf	1	;volatile
  7228                           
  7229                           ;main.c: 176: if (fCapInit)
  7230  0BBF  1D70               	btfss	_fCapInit/(0+8),_fCapInit& (0+7)
  7231  0BC0  2BDB               	goto	i1l10543
  7232                           
  7233                           ;main.c: 177: {
  7234                           ;main.c: 178: TMR1ON=0;
  7235  0BC1  1010               	bcf	16,0
  7236                           
  7237                           ;main.c: 180: if (!fCalFlow)
  7238  0BC2  18F0               	btfsc	_fCalFlow/(0+8),_fCalFlow& (0+7)
  7239  0BC3  2BD4               	goto	i1l10537
  7240                           
  7241                           ;main.c: 181: {
  7242                           ;main.c: 182: if (TMR1IF)
  7243  0BC4  1C0C               	btfss	12,0
  7244  0BC5  2BC9               	goto	i1l10529
  7245                           
  7246                           ;main.c: 183: {
  7247                           ;main.c: 184: TMR1IF=0;
  7248  0BC6  100C               	bcf	12,0
  7249                           
  7250                           ;main.c: 185: bTMR1U++;
  7251  0BC7  1683               	bsf	3,5	;RP0=1, select bank1
  7252  0BC8  0AD9               	incf	_bTMR1U^(0+128),f
  7253  0BC9                     i1l10529:	
  7254                           
  7255                           ;main.c: 186: }
  7256                           ;main.c: 188: bCapT0=TMR1L;
  7257  0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  7258  0BCA  080E               	movf	14,w	;volatile
  7259  0BCB  1683               	bsf	3,5	;RP0=1, select bank1
  7260  0BCC  00BB               	movwf	_bCapT0^(0+128)
  7261                           
  7262                           ;main.c: 189: bCapT1=TMR1H;
  7263  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  7264  0BCE  080F               	movf	15,w	;volatile
  7265  0BCF  1683               	bsf	3,5	;RP0=1, select bank1
  7266  0BD0  00BC               	movwf	_bCapT1^(0+128)
  7267                           
  7268                           ;main.c: 190: bCapT2=bTMR1U;
  7269  0BD1  0859               	movf	_bTMR1U^(0+128),w
  7270  0BD2  00BD               	movwf	_bCapT2^(0+128)
  7271                           
  7272                           ;main.c: 191: fCalFlow=1;
  7273  0BD3  14F0               	bsf	_fCalFlow/(0+8),_fCalFlow& (0+7)
  7274  0BD4                     i1l10537:	
  7275                           
  7276                           ;main.c: 192: }
  7277                           ;main.c: 193: bTMR1U=0;
  7278  0BD4  1683               	bsf	3,5	;RP0=1, select bank1
  7279  0BD5  01D9               	clrf	_bTMR1U^(0+128)
  7280                           
  7281                           ;main.c: 194: TMR1=0;
  7282  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  7283  0BD7  018E               	clrf	14	;volatile
  7284  0BD8  018F               	clrf	15	;volatile
  7285                           
  7286                           ;main.c: 195: TMR1ON=1;
  7287  0BD9  1410               	bsf	16,0
  7288                           
  7289                           ;main.c: 196: }
  7290  0BDA  2BE6               	goto	i1l10553
  7291  0BDB                     i1l10543:	
  7292                           
  7293                           ;main.c: 198: else
  7294                           ;main.c: 199: {
  7295                           ;main.c: 200: TMR1=0;
  7296  0BDB  018E               	clrf	14	;volatile
  7297  0BDC  018F               	clrf	15	;volatile
  7298                           
  7299                           ;main.c: 201: bTMR1U=0;
  7300  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  7301  0BDE  01D9               	clrf	_bTMR1U^(0+128)
  7302                           
  7303                           ;main.c: 202: TMR1IF=0;
  7304  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  7305  0BE0  100C               	bcf	12,0
  7306                           
  7307                           ;main.c: 203: TMR1IE=1;
  7308  0BE1  1683               	bsf	3,5	;RP0=1, select bank1
  7309  0BE2  140C               	bsf	12,0
  7310                           
  7311                           ;main.c: 204: TMR1ON=1;
  7312  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  7313  0BE4  1410               	bsf	16,0
  7314                           
  7315                           ;main.c: 205: fCapInit=1;
  7316  0BE5  1570               	bsf	_fCapInit/(0+8),_fCapInit& (0+7)
  7317  0BE6                     i1l10553:	
  7318                           
  7319                           ;main.c: 206: }
  7320                           ;main.c: 209: ++wTestPulseCnt;
  7321  0BE6  1683               	bsf	3,5	;RP0=1, select bank1
  7322  0BE7  0AB4               	incf	_wTestPulseCnt^(0+128),f
  7323  0BE8  1903               	skipnz
  7324  0BE9  0AB5               	incf	(_wTestPulseCnt+1)^(0+128),f
  7325  0BEA  3021               	movlw	33
  7326                           
  7327                           ;main.c: 210: ++bPulseCnt;
  7328  0BEB  0AC8               	incf	_bPulseCnt^(0+128),f
  7329                           
  7330                           ;main.c: 211: if (bPulseCnt >= (330/10))
  7331  0BEC  0248               	subwf	_bPulseCnt^(0+128),w
  7332  0BED  1C03               	skipc
  7333  0BEE  2C07               	goto	i1l10565
  7334  0BEF  3000               	movlw	0
  7335                           
  7336                           ;main.c: 212: {
  7337                           ;main.c: 213: bPulseCnt=0;
  7338  0BF0  01C8               	clrf	_bPulseCnt^(0+128)
  7339                           
  7340                           ;main.c: 214: if (EE_DATA.var.TOLLITER < 999999)
  7341  0BF1  0255               	subwf	(_EE_DATA+3)^(0+128),w
  7342  0BF2  1D03               	skipz
  7343  0BF3  2BFE               	goto	u231_25
  7344  0BF4  300F               	movlw	15
  7345  0BF5  0254               	subwf	(_EE_DATA+2)^(0+128),w
  7346  0BF6  1D03               	skipz
  7347  0BF7  2BFE               	goto	u231_25
  7348  0BF8  3042               	movlw	66
  7349  0BF9  0253               	subwf	(_EE_DATA+1)^(0+128),w
  7350  0BFA  1D03               	skipz
  7351  0BFB  2BFE               	goto	u231_25
  7352  0BFC  303F               	movlw	63
  7353  0BFD  0252               	subwf	_EE_DATA^(0+128),w
  7354  0BFE                     u231_25:	
  7355  0BFE  1803               	skipnc
  7356  0BFF  2C07               	goto	i1l10565
  7357                           
  7358                           ;main.c: 215: EE_DATA.var.TOLLITER++;
  7359  0C00  0AD2               	incf	_EE_DATA^(0+128),f
  7360  0C01  1903               	skipnz
  7361  0C02  0AD3               	incf	(_EE_DATA+1)^(0+128),f
  7362  0C03  1903               	skipnz
  7363  0C04  0AD4               	incf	(_EE_DATA+2)^(0+128),f
  7364  0C05  1903               	skipnz
  7365  0C06  0AD5               	incf	(_EE_DATA+3)^(0+128),f
  7366  0C07                     i1l10565:	
  7367                           
  7368                           ;main.c: 216: }
  7369                           ;main.c: 217: }
  7370                           ;main.c: 219: if (TMR1IF)
  7371  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  7372  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  7373  0C09  1C0C               	btfss	12,0
  7374  0C0A  2C23               	goto	i1l10583
  7375  0C0B  301C               	movlw	28
  7376                           
  7377                           ;main.c: 220: {
  7378                           ;main.c: 221: TMR1IF = 0;
  7379  0C0C  100C               	bcf	12,0
  7380                           
  7381                           ;main.c: 229: if (++bTMR1U >= 28)
  7382  0C0D  1683               	bsf	3,5	;RP0=1, select bank1
  7383  0C0E  0AD9               	incf	_bTMR1U^(0+128),f
  7384  0C0F  0259               	subwf	_bTMR1U^(0+128),w
  7385  0C10  1C03               	skipc
  7386  0C11  2C23               	goto	i1l10583
  7387                           
  7388                           ;main.c: 230: {
  7389                           ;main.c: 231: TMR1ON = 0;
  7390  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  7391  0C13  1010               	bcf	16,0
  7392                           
  7393                           ;main.c: 232: TMR1IE = 0;
  7394  0C14  1683               	bsf	3,5	;RP0=1, select bank1
  7395  0C15  100C               	bcf	12,0
  7396                           
  7397                           ;main.c: 233: TMR1IF=0;
  7398  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  7399  0C17  301E               	movlw	30
  7400  0C18  100C               	bcf	12,0
  7401                           
  7402                           ;main.c: 234: bTMR1U=30;
  7403  0C19  1683               	bsf	3,5	;RP0=1, select bank1
  7404  0C1A  00D9               	movwf	_bTMR1U^(0+128)
  7405                           
  7406                           ;main.c: 235: TMR1=0;
  7407  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  7408  0C1C  018E               	clrf	14	;volatile
  7409  0C1D  018F               	clrf	15	;volatile
  7410                           
  7411                           ;main.c: 236: fCapInit=0;
  7412  0C1E  1170               	bcf	_fCapInit/(0+8),_fCapInit& (0+7)
  7413                           
  7414                           ;main.c: 237: fFirstLoad=0;
  7415  0C1F  1270               	bcf	_fFirstLoad/(0+8),_fFirstLoad& (0+7)
  7416                           
  7417                           ;main.c: 238: wWFlow=0;
  7418  0C20  1683               	bsf	3,5	;RP0=1, select bank1
  7419  0C21  01B6               	clrf	_wWFlow^(0+128)
  7420  0C22  01B7               	clrf	(_wWFlow+1)^(0+128)
  7421  0C23                     i1l10583:	
  7422                           
  7423                           ;main.c: 239: }
  7424                           ;main.c: 247: }
  7425                           ;main.c: 249: if (TMR2IF)
  7426  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  7427  0C24  1C8C               	btfss	12,1
  7428  0C25  2C54               	goto	i1l5093
  7429                           
  7430                           ;main.c: 250: {
  7431                           ;main.c: 251: TMR2IF=0;
  7432  0C26  108C               	bcf	12,1
  7433                           
  7434                           ;main.c: 253: RB0=1;
  7435  0C27  1406               	bsf	6,0
  7436                           
  7437                           ;main.c: 254: RB1=1;
  7438  0C28  1486               	bsf	6,1
  7439                           
  7440                           ;main.c: 255: RB2=1;
  7441  0C29  1506               	bsf	6,2
  7442                           
  7443                           ;main.c: 256: RA0=1;
  7444  0C2A  1405               	bsf	5,0
  7445                           
  7446                           ;main.c: 258: if (!RB4)
  7447  0C2B  1E06               	btfss	6,4
  7448                           
  7449                           ;main.c: 259: {
  7450                           ;main.c: 260: if (!fSaveEE)
  7451  0C2C  1871               	btfsc	_fSaveEE/(0+8),_fSaveEE& (0+7)
  7452  0C2D  2C49               	goto	i1l10595
  7453                           
  7454                           ;main.c: 261: {
  7455                           ;main.c: 264: eeprom_write(01+0,EE_DATA.arrEEData[0]);
  7456  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  7457  0C2F  0852               	movf	_EE_DATA^(0+128),w
  7458  0C30  00F2               	movwf	?i1_eeprom_write
  7459  0C31  3001               	movlw	1
  7460  0C32  245D  158A         	fcall	i1_eeprom_write
  7461                           
  7462                           ;main.c: 265: eeprom_write(01+1,EE_DATA.arrEEData[1]);
  7463  0C34  1303               	bcf	3,6	;RP1=0, select bank1
  7464  0C35  0853               	movf	(_EE_DATA^(0+128)+1),w
  7465  0C36  00F2               	movwf	?i1_eeprom_write
  7466  0C37  3002               	movlw	2
  7467  0C38  245D  158A         	fcall	i1_eeprom_write
  7468                           
  7469                           ;main.c: 266: eeprom_write(01+2,EE_DATA.arrEEData[2]);
  7470  0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  7471  0C3B  0854               	movf	(_EE_DATA^(0+128)+2),w
  7472  0C3C  00F2               	movwf	?i1_eeprom_write
  7473  0C3D  3003               	movlw	3
  7474  0C3E  245D  158A         	fcall	i1_eeprom_write
  7475                           
  7476                           ;main.c: 267: eeprom_write(01+3,EE_DATA.arrEEData[3]);
  7477  0C40  1303               	bcf	3,6	;RP1=0, select bank1
  7478  0C41  0855               	movf	(_EE_DATA^(0+128)+3),w
  7479  0C42  00F2               	movwf	?i1_eeprom_write
  7480  0C43  3004               	movlw	4
  7481  0C44  245D  158A         	fcall	i1_eeprom_write
  7482                           
  7483                           ;main.c: 268: bSaveEECnt=0;
  7484  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  7485  0C47  01CB               	clrf	_bSaveEECnt^(0+128)
  7486                           
  7487                           ;main.c: 269: fSaveEE=1;
  7488  0C48  1471               	bsf	_fSaveEE/(0+8),_fSaveEE& (0+7)
  7489  0C49                     i1l10595:	
  7490                           
  7491                           ;main.c: 271: }
  7492                           ;main.c: 272: }
  7493                           ;main.c: 274: pScanKey();
  7494  0C49  24A2  158A         	fcall	_pScanKey
  7495                           
  7496                           ;main.c: 275: pScanDisp();
  7497  0C4B  2477  158A         	fcall	_pScanDisp
  7498                           
  7499                           ;main.c: 277: if (++b10ms>=5)
  7500  0C4D  3005               	movlw	5
  7501  0C4E  0AB8               	incf	_b10ms^(0+128),f
  7502  0C4F  0238               	subwf	_b10ms^(0+128),w
  7503  0C50  1C03               	skipc
  7504  0C51  2C54               	goto	i1l5093
  7505                           
  7506                           ;main.c: 278: {
  7507                           ;main.c: 279: b10ms=0;
  7508  0C52  01B8               	clrf	_b10ms^(0+128)
  7509                           
  7510                           ;main.c: 280: f10ms=1;
  7511  0C53  1470               	bsf	_f10ms/(0+8),_f10ms& (0+7)
  7512  0C54                     i1l5093:	
  7513  0C54  0878               	movf	??_isr+2,w
  7514  0C55  008A               	movwf	10
  7515  0C56  0877               	movf	??_isr+1,w
  7516  0C57  0084               	movwf	4
  7517  0C58  0E76               	swapf	??_isr^(0+-128),w
  7518  0C59  0083               	movwf	3
  7519  0C5A  0EFE               	swapf	126,f
  7520  0C5B  0E7E               	swapf	126,w
  7521  0C5C  0009               	retfie
  7522  0C5D                     __end_of_isr:	
  7523  0C5D                     __ptext966:	
  7524 ;; =============== function _pScanKey ends ============
  7525                           
  7526                           
  7527 ;; *************** function i1_eeprom_write *****************
  7528 ;; Defined at:
  7529 ;;		line 7 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\eewrite.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  eeprom_write    1    wreg     unsigned char 
  7532 ;;  eeprom_write    1    0[COMMON] unsigned char 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;  eeprom_write    1    1[COMMON] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      unsigned char 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0
  7539 ;; Tracked objects:
  7540 ;;		On entry : 60/20
  7541 ;;		On exit  : 60/60
  7542 ;;		Unchanged: FFF9F/0
  7543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7544 ;;      Params:         1       0       0       0
  7545 ;;      Locals:         1       0       0       0
  7546 ;;      Temps:          0       0       0       0
  7547 ;;      Totals:         2       0       0       0
  7548 ;;Total ram usage:        2 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; This function calls:
  7551 ;;		Nothing
  7552 ;; This function is called by:
  7553 ;;		_isr
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556  0C5D                     i1_eeprom_write:	
  7557                           
  7558                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  7559                           ;i1eeprom_write@addr stored from wreg
  7560  0C5D  00F3               	movwf	i1eeprom_write@addr
  7561  0C5E                     i1l7174:	
  7562  0C5E  1703               	bsf	3,6	;RP1=1, select bank3
  7563  0C5F  188C               	btfsc	12,1
  7564  0C60  2C5E               	goto	i1l7174
  7565  0C61  0873               	movf	i1eeprom_write@addr,w
  7566  0C62  1283               	bcf	3,5	;RP0=0, select bank2
  7567  0C63  008D               	movwf	13	;volatile
  7568  0C64  0872               	movf	i1eeprom_write@value,w
  7569  0C65  008C               	movwf	12	;volatile
  7570  0C66  303F               	movlw	63
  7571  0C67  1683               	bsf	3,5	;RP0=1, select bank3
  7572  0C68  058C               	andwf	12,f	;volatile
  7573  0C69  1003               	bcf	3,0
  7574  0C6A  1B8B               	btfsc	11,7
  7575  0C6B  1403               	bsf	3,0
  7576  0C6C  3055               	movlw	85
  7577  0C6D  138B               	bcf	11,7
  7578  0C6E  150C               	bsf	12,2
  7579  0C6F  008D               	movwf	13	;volatile
  7580  0C70  30AA               	movlw	170
  7581  0C71  008D               	movwf	13	;volatile
  7582  0C72  148C               	bsf	12,1
  7583  0C73  110C               	bcf	12,2
  7584  0C74  1803               	btfsc	3,0
  7585  0C75  178B               	bsf	11,7
  7586  0C76  0008               	return
  7587  0C77                     __end_ofi1_eeprom_write:	
  7588  0C77                     __ptext968:	
  7589 ;; =============== function _pReadKey ends ============
  7590                           
  7591                           
  7592 ;; *************** function _pScanDisp *****************
  7593 ;; Defined at:
  7594 ;;		line 76 in file "D:\MyWorks\CYD670(C16F883)\CYD670\drv_disp.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;		None               void
  7601 ;; Registers used:
  7602 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7603 ;; Tracked objects:
  7604 ;;		On entry : 40/0
  7605 ;;		On exit  : 60/20
  7606 ;;		Unchanged: FFF9F/0
  7607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7608 ;;      Params:         0       0       0       0
  7609 ;;      Locals:         0       0       0       0
  7610 ;;      Temps:          0       0       0       0
  7611 ;;      Totals:         0       0       0       0
  7612 ;;Total ram usage:        0 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_isr
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620  0C77                     _pScanDisp:	
  7621                           
  7622                           ;drv_disp.c: 78: switch (bScanCnt)
  7623                           
  7624                           ; Regs used in _pScanDisp: [wreg-fsr0h+status,2+status,0]
  7625  0C77  2C8C               	goto	i1l10431
  7626  0C78                     i1l10413:	
  7627                           
  7628                           ;drv_disp.c: 81: PORTC = bLed.byte;
  7629  0C78  0846               	movf	_bLed^(0+128),w
  7630  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  7631  0C7A  0087               	movwf	7	;volatile
  7632                           
  7633                           ;drv_disp.c: 82: RB0 = 0;
  7634  0C7B  1006               	bcf	6,0
  7635                           
  7636                           ;drv_disp.c: 83: break;
  7637  0C7C  2C9B               	goto	i1l10433
  7638  0C7D                     i1l10417:	
  7639                           
  7640                           ;drv_disp.c: 85: PORTC = bSeg1;
  7641  0C7D  084F               	movf	_bSeg1^(0+128),w
  7642  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  7643  0C7F  0087               	movwf	7	;volatile
  7644                           
  7645                           ;drv_disp.c: 86: RB1 = 0;
  7646  0C80  1086               	bcf	6,1
  7647                           
  7648                           ;drv_disp.c: 87: break;
  7649  0C81  2C9B               	goto	i1l10433
  7650  0C82                     i1l10421:	
  7651                           
  7652                           ;drv_disp.c: 89: PORTC = bSeg2;
  7653  0C82  0850               	movf	_bSeg2^(0+128),w
  7654  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  7655  0C84  0087               	movwf	7	;volatile
  7656                           
  7657                           ;drv_disp.c: 90: RB2 = 0;
  7658  0C85  1106               	bcf	6,2
  7659                           
  7660                           ;drv_disp.c: 91: break;
  7661  0C86  2C9B               	goto	i1l10433
  7662  0C87                     i1l10425:	
  7663                           
  7664                           ;drv_disp.c: 93: PORTC = bSeg0;
  7665  0C87  084E               	movf	_bSeg0^(0+128),w
  7666  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  7667  0C89  0087               	movwf	7	;volatile
  7668                           
  7669                           ;drv_disp.c: 94: RA0 = 0;
  7670  0C8A  1005               	bcf	5,0
  7671                           
  7672                           ;drv_disp.c: 95: break;
  7673  0C8B  2C9B               	goto	i1l10433
  7674  0C8C                     i1l10431:	
  7675  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  7676  0C8D  084C               	movf	_bScanCnt^(0+128),w
  7677                           
  7678                           ; Switch size 1, requested type "space"
  7679                           ; Number of cases is 4, Range of values is 0 to 3
  7680                           ; switch strategies available:
  7681                           ; Name         Instructions Cycles
  7682                           ; simple_byte           13     7 (average)
  7683                           ; direct_byte           15     7 (fixed)
  7684                           ; jumptable            260     6 (fixed)
  7685                           ; rangetable             8     6 (fixed)
  7686                           ; spacedrange           14     9 (fixed)
  7687                           ; locatedrange           4     3 (fixed)
  7688                           ;	Chosen strategy is simple_byte
  7689  0C8E  3A00               	xorlw	0	; case 0
  7690  0C8F  1903               	skipnz
  7691  0C90  2C78               	goto	i1l10413
  7692  0C91  3A01               	xorlw	1	; case 1
  7693  0C92  1903               	skipnz
  7694  0C93  2C7D               	goto	i1l10417
  7695  0C94  3A03               	xorlw	3	; case 2
  7696  0C95  1903               	skipnz
  7697  0C96  2C82               	goto	i1l10421
  7698  0C97  3A01               	xorlw	1	; case 3
  7699  0C98  1903               	skipnz
  7700  0C99  2C87               	goto	i1l10425
  7701  0C9A  2C9B               	goto	i1l10433
  7702  0C9B                     i1l10433:	
  7703                           
  7704                           ;drv_disp.c: 98: if (++bScanCnt > 3)
  7705  0C9B  3004               	movlw	4
  7706  0C9C  1683               	bsf	3,5	;RP0=1, select bank1
  7707  0C9D  0ACC               	incf	_bScanCnt^(0+128),f
  7708  0C9E  024C               	subwf	_bScanCnt^(0+128),w
  7709  0C9F  1803               	btfsc	3,0
  7710                           
  7711                           ;drv_disp.c: 99: bScanCnt = 0;
  7712  0CA0  01CC               	clrf	_bScanCnt^(0+128)
  7713  0CA1  0008               	return
  7714  0CA2                     __end_of_pScanDisp:	
  7715  0CA2                     __ptext965:	
  7716 ;; =============== function _isr ends ============
  7717                           
  7718                           
  7719 ;; *************** function _pScanKey *****************
  7720 ;; Defined at:
  7721 ;;		line 31 in file "D:\MyWorks\CYD670(C16F883)\CYD670\drv_key.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  bKeyBuf         1    3[COMMON] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;		None               void
  7728 ;; Registers used:
  7729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 40/0
  7732 ;;		On exit  : 40/0
  7733 ;;		Unchanged: FFF9F/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7735 ;;      Params:         0       0       0       0
  7736 ;;      Locals:         1       0       0       0
  7737 ;;      Temps:          0       0       0       0
  7738 ;;      Totals:         1       0       0       0
  7739 ;;Total ram usage:        1 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    1
  7742 ;; This function calls:
  7743 ;;		_pReadKey
  7744 ;; This function is called by:
  7745 ;;		_isr
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748  0CA2                     _pScanKey:	
  7749                           
  7750                           ;drv_key.c: 32: U8 bKeyBuf;
  7751                           ;drv_key.c: 34: bKeyBuf = pReadKey();
  7752                           
  7753                           ; Regs used in _pScanKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7754  0CA2  24B7  158A         	fcall	_pReadKey
  7755  0CA4  00F5               	movwf	pScanKey@bKeyBuf
  7756                           
  7757                           ;drv_key.c: 36: if (bKeyOld != bKeyBuf)
  7758  0CA5  0645               	xorwf	_bKeyOld^(0+128),w
  7759  0CA6  1903               	skipnz
  7760  0CA7  2CAC               	goto	i1l10449
  7761                           
  7762                           ;drv_key.c: 37: {
  7763                           ;drv_key.c: 38: bKeyOld = bKeyBuf;
  7764  0CA8  0875               	movf	pScanKey@bKeyBuf,w
  7765  0CA9  00C5               	movwf	_bKeyOld^(0+128)
  7766                           
  7767                           ;drv_key.c: 39: bKeyCnt = 0;
  7768  0CAA  01C3               	clrf	_bKeyCnt^(0+128)
  7769                           
  7770                           ;drv_key.c: 40: }
  7771  0CAB  0008               	return
  7772  0CAC                     i1l10449:	
  7773                           
  7774                           ;drv_key.c: 41: else
  7775                           ;drv_key.c: 42: {
  7776                           ;drv_key.c: 43: if (bKeyCnt == 15)
  7777  0CAC  0843               	movf	_bKeyCnt^(0+128),w
  7778  0CAD  3A0F               	xorlw	15
  7779  0CAE  1D03               	skipz
  7780  0CAF  2CB5               	goto	i1l10455
  7781                           
  7782                           ;drv_key.c: 44: {
  7783                           ;drv_key.c: 45: bKeyCnt = 0;
  7784  0CB0  01C3               	clrf	_bKeyCnt^(0+128)
  7785                           
  7786                           ;drv_key.c: 46: bKeyData.byte = bKeyOld;
  7787  0CB1  0845               	movf	_bKeyOld^(0+128),w
  7788  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  7789  0CB3  00EF               	movwf	_bKeyData
  7790                           
  7791                           ;drv_key.c: 47: }
  7792  0CB4  0008               	return
  7793  0CB5                     i1l10455:	
  7794                           
  7795                           ;drv_key.c: 48: else
  7796                           ;drv_key.c: 49: bKeyCnt++;
  7797  0CB5  0AC3               	incf	_bKeyCnt^(0+128),f
  7798  0CB6  0008               	return
  7799  0CB7                     __end_of_pScanKey:	
  7800  0CB7                     __ptext967:	
  7801 ;; =============== function i1_eeprom_write ends ============
  7802                           
  7803                           
  7804 ;; *************** function _pReadKey *****************
  7805 ;; Defined at:
  7806 ;;		line 57 in file "D:\MyWorks\CYD670(C16F883)\CYD670\drv_key.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  i               1    2[COMMON] unsigned char 
  7811 ;;  tmp             1    1[COMMON] unsigned char 
  7812 ;;  buf             1    0[COMMON] unsigned char 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1    wreg      unsigned char 
  7815 ;; Registers used:
  7816 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7817 ;; Tracked objects:
  7818 ;;		On entry : 40/0
  7819 ;;		On exit  : 60/20
  7820 ;;		Unchanged: FFF9F/0
  7821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7822 ;;      Params:         0       0       0       0
  7823 ;;      Locals:         3       0       0       0
  7824 ;;      Temps:          0       0       0       0
  7825 ;;      Totals:         3       0       0       0
  7826 ;;Total ram usage:        3 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_pScanKey
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834  0CB7                     _pReadKey:	
  7835                           
  7836                           ;drv_key.c: 58: U8 i,tmp,buf;
  7837                           ;drv_key.c: 61: RC0=1;
  7838                           
  7839                           ; Regs used in _pReadKey: [wreg-fsr0h+status,2+status,0]
  7840  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  7841  0CB8  1407               	bsf	7,0
  7842                           
  7843                           ;drv_key.c: 62: RC1=1;
  7844  0CB9  1487               	bsf	7,1
  7845                           
  7846                           ;drv_key.c: 63: RC2=1;
  7847  0CBA  1507               	bsf	7,2
  7848                           
  7849                           ;drv_key.c: 65: RB5=1;
  7850  0CBB  1686               	bsf	6,5
  7851                           
  7852                           ;drv_key.c: 66: TRISB5=1;
  7853  0CBC  1683               	bsf	3,5	;RP0=1, select bank1
  7854  0CBD  1686               	bsf	6,5
  7855                           
  7856                           ;drv_key.c: 69: tmp=1;
  7857  0CBE  01F3               	clrf	pReadKey@tmp
  7858  0CBF  0AF3               	incf	pReadKey@tmp,f
  7859  0CC0                     i1l10459:	
  7860                           ;drv_key.c: 70: while(tmp--);
  7861                           
  7862  0CC0  03F3               	decf	pReadKey@tmp,f
  7863  0CC1  0873               	movf	pReadKey@tmp,w
  7864  0CC2  3AFF               	xorlw	255
  7865  0CC3  1D03               	skipz
  7866  0CC4  2CC0               	goto	i1l10459
  7867                           
  7868                           ;drv_key.c: 72: buf = 0xFF;
  7869  0CC5  30FF               	movlw	255
  7870  0CC6  00F2               	movwf	pReadKey@buf
  7871                           
  7872                           ;drv_key.c: 73: for (i=0;i<=2;i++)
  7873  0CC7  01F4               	clrf	pReadKey@i
  7874  0CC8  2CD8               	goto	i1l10471
  7875  0CC9                     i1l1981:	
  7876                           ;drv_key.c: 76: {
  7877                           ;drv_key.c: 77: case 0:
  7878                           
  7879                           
  7880                           ;drv_key.c: 78: RC0=1;
  7881  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  7882  0CCA  1407               	bsf	7,0
  7883                           
  7884                           ;drv_key.c: 79: RC1=1;
  7885  0CCB  1487               	bsf	7,1
  7886                           
  7887                           ;drv_key.c: 80: RC2=0;
  7888  0CCC  1107               	bcf	7,2
  7889                           
  7890                           ;drv_key.c: 81: break;
  7891  0CCD  2CE3               	goto	i1l1982
  7892  0CCE                     i1l1983:	
  7893                           ;drv_key.c: 83: case 1:
  7894                           
  7895                           
  7896                           ;drv_key.c: 84: RC2=1;
  7897  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  7898  0CCF  1507               	bsf	7,2
  7899                           
  7900                           ;drv_key.c: 85: RC1=0;
  7901  0CD0  1087               	bcf	7,1
  7902                           
  7903                           ;drv_key.c: 86: RC0=1;
  7904  0CD1  1407               	bsf	7,0
  7905                           
  7906                           ;drv_key.c: 87: break;
  7907  0CD2  2CE3               	goto	i1l1982
  7908  0CD3                     i1l1984:	
  7909                           ;drv_key.c: 89: case 2:
  7910                           
  7911                           
  7912                           ;drv_key.c: 90: RC1=1;
  7913  0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  7914  0CD4  1487               	bsf	7,1
  7915                           
  7916                           ;drv_key.c: 91: RC0=0;
  7917  0CD5  1007               	bcf	7,0
  7918                           
  7919                           ;drv_key.c: 92: RC2=1;
  7920  0CD6  1507               	bsf	7,2
  7921                           
  7922                           ;drv_key.c: 93: break;
  7923  0CD7  2CE3               	goto	i1l1982
  7924  0CD8                     i1l10471:	
  7925  0CD8  0874               	movf	pReadKey@i,w
  7926                           
  7927                           ; Switch size 1, requested type "space"
  7928                           ; Number of cases is 3, Range of values is 0 to 2
  7929                           ; switch strategies available:
  7930                           ; Name         Instructions Cycles
  7931                           ; simple_byte           10     6 (average)
  7932                           ; direct_byte           13     7 (fixed)
  7933                           ; jumptable            260     6 (fixed)
  7934                           ; rangetable             7     6 (fixed)
  7935                           ; spacedrange           12     9 (fixed)
  7936                           ; locatedrange           3     3 (fixed)
  7937                           ;	Chosen strategy is simple_byte
  7938  0CD9  3A00               	xorlw	0	; case 0
  7939  0CDA  1903               	skipnz
  7940  0CDB  2CC9               	goto	i1l1981
  7941  0CDC  3A01               	xorlw	1	; case 1
  7942  0CDD  1903               	skipnz
  7943  0CDE  2CCE               	goto	i1l1983
  7944  0CDF  3A03               	xorlw	3	; case 2
  7945  0CE0  1903               	skipnz
  7946  0CE1  2CD3               	goto	i1l1984
  7947  0CE2  2CE3               	goto	i1l1982
  7948  0CE3                     i1l1982:	
  7949                           
  7950                           ;drv_key.c: 98: tmp=1;
  7951  0CE3  01F3               	clrf	pReadKey@tmp
  7952  0CE4  0AF3               	incf	pReadKey@tmp,f
  7953  0CE5                     i1l10473:	
  7954                           ;drv_key.c: 99: while(tmp--);
  7955                           
  7956  0CE5  03F3               	decf	pReadKey@tmp,f
  7957  0CE6  0873               	movf	pReadKey@tmp,w
  7958  0CE7  3AFF               	xorlw	255
  7959  0CE8  1D03               	skipz
  7960  0CE9  2CE5               	goto	i1l10473
  7961                           
  7962                           ;drv_key.c: 101: buf<<=1;
  7963  0CEA  1003               	clrc
  7964  0CEB  0DF2               	rlf	pReadKey@buf,f
  7965                           
  7966                           ;drv_key.c: 103: if (RB5)
  7967  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  7968  0CED  1E86               	btfss	6,5
  7969  0CEE  2CF1               	goto	i1l1988
  7970                           
  7971                           ;drv_key.c: 104: buf |= 0x01;
  7972  0CEF  1472               	bsf	pReadKey@buf,0
  7973  0CF0  2CF2               	goto	i1l10477
  7974  0CF1                     i1l1988:	
  7975                           
  7976                           ;drv_key.c: 105: else
  7977                           ;drv_key.c: 106: buf &= 0xFE;
  7978  0CF1  1072               	bcf	pReadKey@buf,0
  7979  0CF2                     i1l10477:	
  7980  0CF2  3003               	movlw	3
  7981  0CF3  0AF4               	incf	pReadKey@i,f
  7982  0CF4  0274               	subwf	pReadKey@i,w
  7983  0CF5  1C03               	skipc
  7984  0CF6  2CD8               	goto	i1l10471
  7985                           
  7986                           ;drv_key.c: 107: }
  7987                           ;drv_key.c: 109: RB5=0;
  7988  0CF7  1286               	bcf	6,5
  7989                           
  7990                           ;drv_key.c: 110: TRISB5=0;
  7991  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  7992  0CF9  1286               	bcf	6,5
  7993                           
  7994                           ;drv_key.c: 112: return buf;
  7995  0CFA  0872               	movf	pReadKey@buf,w
  7996  0CFB  0008               	return
  7997  0CFC                     __end_of_pReadKey:	
  7998                           
  7999                           	psect	intentry
  8000  0004                     __pintentry:	
  8001                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8002                           
  8003  0004                     interrupt_function:	
  8004  007E                     saved_w	set	btemp
  8005  0004  00FE               	movwf	btemp
  8006  0005  0E03               	swapf	3,w
  8007  0006  00F6               	movwf	??_isr
  8008  0007  0804               	movf	4,w
  8009  0008  00F7               	movwf	??_isr+1
  8010  0009  080A               	movf	10,w
  8011  000A  00F8               	movwf	??_isr+2
  8012  000B  158A  2BB8         	ljmp	_isr
  8013                           
  8014                           	psect	text969
  8015  0000                     __ptext969:	
  8016 ;; =============== function _pScanDisp ends ============
  8017                           
  8018  007E                     btemp	set	126	;btemp
  8019  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jun 05 15:57:54 2014

                      pc 0002                       _RD 0C60                       _WR 0C61  
                     fsr 0004      ___wmul@multiplicand 0022                      l993 0000  
                    _GIE 005F                      _RA0 0028                      _RA1 0029  
                    _RB0 0030                      _RA2 002A                      _RB1 0031  
                    _RC0 0038                      _RB2 0032                      _RC1 0039  
                    _RC2 003A                      _RB4 0034                      _RB5 0035  
                    _PR2 0092                      _HTS 047A                      _b1s 00B9  
                    _isr 0BB8                      fsr0 0004                      indf 0000  
           ?_pSwitchMode 0072           _pEESaveTimeCtl 0A52                     l5104 0B7A  
                   l5125 05C5                     l5213 00E1                     l5152 0650  
                   l5128 05B9                     l5313 0000                     l5305 0000  
                   l5161 0671                     l5138 062E                     l5250 0269  
                   l5242 0205                     l5180 0000                     l5260 0020  
                   l5317 0000                     l5247 0000                     l5263 003B  
                   l5255 0035                     l5271 0D52                     l5176 0000  
                   l6304 0585                     l5257 0014                     l5361 03C7  
                   l5329 033B                     l5193 01FF                     l6306 0000  
                   l5427 04B1                     l5188 0000                     l5357 03BF  
                   l3952 0000                     l5384 0407                     l3961 0000  
                   l3955 0000                     l5387 0411                     l3964 0000  
                   l8052 0571                     l7173 0000                     l3949 0A94  
                   l3958 0000                     l7174 067A                     l8070 0000  
                   l8118 0000                     l3967 0000                     l8047 0562  
                   l8056 0000                     l8064 07CC                     l8128 0000  
                   l8145 0225                     l8138 0000                     l8154 0000  
                   l8059 07B9                     l8148 0000                     ?_isr 0072  
                   l8275 0000                     l8294 0000                     _T0IE 005D  
                   _T0IF 005A                     _IOCB 0096                     u3300 0000  
                   u2505 0F31                     u3065 05DF                     u3305 0DF1  
                   u3225 0D4A                     u2435 06B6                     u3235 0D60  
                   u3085 0602                     u2455 06DD                     u3415 0ED7  
                   u3335 0E44                     _PIE1 008C                     u2545 0F84  
                   u3425 0EEB                     u3355 0E5F                     u3275 0DB1  
                   u2735 054D                     _PEIE 005E                     u2845 02CD  
                   u2695 0528                     u2885 0314                     _TMR0 0001  
                   _TMR1 000E                     _WREN 0C62                     _WPUB 0095  
         ??_eeprom_write 0021                     _bLed 00C6                     _bMin 00C7  
                   _bSec 00CD                     _fErr 0383                     _main 0B29  
                   _wSum 00B0                     btemp 007E                     start 000D  
            filter@ptArr 004C           ??_pRunWashFlow 0020                    S11825 07EC  
          _pCalWaterFlow 0CFC                    ??_isr 0076             pRunStep@step 0020  
                  l11001 0000                    l11011 0000                    l11003 0000  
                  l11013 0000                    l11005 0000                    l11015 0059  
                  l11103 0653                    l11031 0000                    l11009 0000  
                  l11105 0657                    l11113 0663                    l11033 05B5  
                  l11017 0000                    l11201 0000                    l11123 0000  
                  l11211 0000                    l11203 0DD3                    l10501 0000  
                  l11109 065F                    l11053 0000                    l11117 0677  
                  l11045 05CA                    l11133 0000                    l11213 0000  
                  l11205 0000                    l11141 0000                    l10503 0000  
                  l10511 0000                    l11063 0000                    l11055 05EA  
                  l11047 05CD                    l11039 05C0                    l11127 0000  
                  l11119 0000                    l11207 0000                    l11303 0342  
                  l10505 0000                    l11081 0631                    l11073 061E  
                  l11065 060D                    l11049 0000                    l11057 05EE  
                  l11129 0000                    l11137 002D                    l11241 0000  
                  l11225 0E93                    l11217 0E6D                    l11209 0000  
                  l11153 0D69                    l11145 0000                    l11401 03E1  
                  l11313 0000                    l10507 0000                    l10611 0000  
                  l11091 0000                    l11083 0000                    l11067 0000  
                  l11139 0000                    l11227 0000                    l11171 0000  
                  l11163 0D8F                    l11155 0000                    l11147 0000  
                  l11403 03E3                    l11331 0367                    l11323 035C  
                  l11315 0352                    l10437 0000                    l10509 0000  
                  l10621 0000                    l10701 0000                    l11093 0644  
                  l11085 0635                    l11069 0613                    l11077 0622  
                  l11253 0EF6                    l11245 0000                    l11181 0000  
                  l11173 0000                    l11261 0000                    l11501 0470  
                  l11421 0000                    l11405 03E4                    l11341 0372  
                  l11333 0000                    l11325 0361                    l11309 0347  
                  l10439 0000                    l10615 0000                    l10607 0000  
                  l10631 0000                    l10703 0000                    l11255 0000  
                  l11247 0000                    l11239 0000                    l11191 0000  
                  l11183 0000                    l11159 0000                    l11271 0000  
                  l11511 047F                    l11423 03FC                    l11415 03F3  
                  l11407 0000                    l11327 0000                    l11319 0000  
                  l10617 0000                    l10609 0000                    l10625 0000  
                  l10641 0000                    l10713 0F19                    l10705 0000  
                  l11089 063C                    l11097 0647                    l11193 0000  
                  l11177 0000                    l11257 0EFB                    l11281 0000  
                  l11273 0000                    l11265 0000                    l11521 048D  
                  l11513 0480                    l11441 0000                    l11361 03A8  
                  l11337 036C                    l11329 0365                    l11345 038A  
                  l11353 03A2                    l10491 0000                    l10619 0000  
                  l10635 0A58                    l10643 0000                    l10651 0000  
                  l10731 0000                    l10723 0F52                    l10715 0F1B  
                  l10811 0B1A                    l11179 0000                    l11275 0000  
                  l11267 0000                    l11291 0000                    l11283 0000  
                  l11507 0000                    l11451 0000                    l11419 0000  
                  l11355 03A3                    l11339 0000                    l11347 0398  
                  l11611 00DE                    l10485 0000                    l10493 0000  
                  l10629 0A6B                    l10637 0000                    l10645 0000  
                  l10653 0698                    l10661 0000                    l10813 0000  
                  l10805 0000                    l10821 0000                    l11197 0000  
                  l11269 0000                    l11293 0000                    l11285 0000  
                  l11525 048F                    l11509 0000                    l11461 043E  
                  l11453 042F                    l11437 0416                    l11445 0417  
                  l11373 03BD                    l11365 03B1                    l11701 0000  
                  l11621 00F3                    l11613 00E5                    l11605 00D5  
                  l10495 0000                    l10487 0000                    l10639 0000  
                  l10647 0000                    l10655 0000                    l10671 0000  
                  l10743 0000                    l10727 0F54                    l10751 0000  
                  l10815 0000                    l10807 0B12                    l10831 051F  
                  l10823 0000                    l10903 024D                    l11199 0000  
                  l11287 0000                    l11543 04AB                    l11535 049B  
                  l11471 0000                    l11455 0434                    l11391 0000  
                  l11623 0000                    l11615 0000                    l11551 0000  
                  l11711 01F0                    l10497 0000                    l10489 0000  
                  l10649 0000                    l10657 0000                    l10665 06BC  
                  l10681 06E7                    l10673 06C4                    l10737 0000  
                  l10729 0000                    l10753 0000                    l10841 0000  
                  l10833 0000                    l10905 0000                    l11289 0000  
                  l11537 049D                    l11473 0000                    l11449 0421  
                  l11393 03D7                    l11297 0000                    l11641 011A  
                  l11633 0000                    l11625 0000                    l11617 0000  
                  l11609 0000                    l11553 0000                    l11545 0000  
                  l11721 0000                    l10499 0000                    l10667 0000  
                  l10659 0000                    l10683 0000                    l10675 06C6  
                  l10691 0000                    l10739 0000                    l10755 0000  
                  l10747 0000                    l10771 0000                    l10763 0000  
                  l10843 0536                    l10923 0000                    l10931 0000  
                  l11539 0000                    l11491 0000                    l11483 0000  
                  l11475 0452                    l11467 0443                    l11459 0000  
                  l11387 03D0                    l11299 0336                    l11707 01E2  
                  l11651 0156                    l11635 010D                    l11627 0000  
                  l11571 0000                    l11563 007E                    l11643 0126  
                  l11547 005B                    l11731 0000                    l11723 0000  
                  l10669 0000                    l10685 0000                    l10693 0000  
                  l10757 056B                    l10781 0000                    l10773 0000  
                  l10837 0000                    l10861 0000                    l10917 02BF  
                  l10925 02E4                    l10909 0000                    l10941 0000  
                  l11493 0000                    l11485 045F                    l11397 03DD  
                  l11653 0000                    l11645 0139                    l11637 0000  
                  l11581 00A3                    l11573 0000                    l11557 006E  
                  l11549 0061                    l11741 0B42                    l11733 0B39  
                  l11725 0000                    l10687 06E9                    l10783 0000  
                  l10767 0000                    l10759 0000                    l10855 0547  
                  l10863 055A                    l10847 0000                    l10871 0000  
                  l10951 032C                    l11495 0467                    l11479 0000  
                  l11671 0000                    l11647 0000                    l11591 0000  
                  l11567 0087                    l11559 0000                    l11751 0B4E  
                  l11727 0000                    l11719 0000                    l10777 0000  
                  l10769 0000                    l10881 0000                    l10873 021F  
                  l10945 0000                    l10929 0000                    l11681 01A2  
                  l11673 0000                    l11665 016F                    l11657 0163  
                  l11585 00A9                    l11569 0000                    l11761 0000  
                  l11737 0000                    l11729 0000                    l10699 0F05  
                  l10779 0000                    l10787 07C5                    l10867 0000  
                  l10891 0000                    l10939 0301                    l11499 0000  
                  l11683 0000                    l11675 0000                    l11667 017A  
                  l11659 0000                    l11595 00C2                    l11771 0B88  
                  l11755 0000                    l11763 0B76                    l11747 0B4C  
                  l11739 0000                    l10789 0000                    l10885 0000  
                  l10877 0000                    l10869 0000                    l10893 0000  
                  l10949 0000                    l10981 0000                    l11693 01C7  
                  l11685 0000                    l11677 0000                    l11669 0000  
                  l11589 00B2                    l11773 0B8C                    l11757 0000  
                  l11749 0000                    l10887 0232                    l10895 0239  
                  l10983 0000                    l10975 0000                    l10991 0000  
                  l11695 0000                    l11687 0000                    l11599 00CB  
                  l11767 0000                    l10897 0000                    l10985 0000  
                  l10977 0000                    l11689 0000                    l11793 0000  
                  l11769 0B81                    l11777 0B90                    l10899 0000  
                  l10979 0000                    l10995 0000                    l10987 0000  
                  l11699 01D5                    l11787 0000                    l11779 0BA0  
                  l10997 0000                    l10989 0000                    l11789 0BAE  
                  l10999 0000                    ?_main 0072          __end_of___lbdiv 0234  
                  _EEADR 010D          __end_of___lbmod 0251                    _CARRY 0018  
                  _ANSEL 0188          __end_of___lldiv 0335                    _T1CON 0010  
        __end_of___llmod 02ED                    _T2CON 0012     __size_of_pReLoadTime 0009  
        __end_of___lwdiv 053B          __end_of___lwmod 055F                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _b10ms 00B8                    _b50ms 00BA  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
        __end_of_pInitAD 0AA8                    _f10ms 0380          __end_of_pInitT0 0AC2  
        __end_of_pInitT1 0AC4          __end_of_pInitT2 0ACD          __end_of_pReadEE 005A  
                  _bSeg0 00CE                    _bSeg1 00CF                    _bSeg2 00D0  
                  _bHour 00C2   __end_of_pEESaveTimeCtl 0A5A           __pbitbssCOMMON 0380  
                  pclath 000A                    status 0003                    wtemp0 007E  
        ___lbdiv@divisor 0020          ___lbdiv@counter 0022             __end_of_main 0BB8  
         ?_pCalWaterFlow 0072                   ??_main 006B          ?_pEESaveTimeCtl 0072  
                 _ADCON0 001F                   _ADCON1 009F         ___llmod@dividend 0024  
                 _EEDATA 010C                   _EECON1 018C                   _EECON2 018D  
                 _ANSELH 0189                   i1l1981 0CC9                   i1l5093 0C54  
                 i1l1990 0000                   i1l1982 0CE3                   i1l1983 0CCE  
                 i1l1984 0CD3                   i1l1988 0CF1                   i1l7173 0000  
                 i1l7174 0C5E                   u231_25 0BFE         __end_of_pClrDisp 04D5  
                 _INTCON 000B         __end_of_pConDisp 0511                   _OSCCON 008F  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR2IE 0461  
                 _TMR2IF 0061                   _TMR1ON 0080                   _TMR2ON 0092  
             _bFilterCnt 00BE                   _TRISB5 0435         __end_of_pInitMCU 0AA0  
       __end_of_pKeyProc 0679         __end_of_pReadKey 0CFC         __end_of_pScanKey 0CB7  
                 _bTMR1U 00D9         __end_of_eecpymem 0584                   _bTBCnt 00D1  
                 _bCapT0 00BB                   _bCapT1 00BC                   _bCapT2 00BD  
   __size_of_eeprom_read 0017                   _fFlash 0385         __end_of_pRunStep 0210  
       __end_of_pTuneMin 06E9                   ___wmul 0B10                ??___lbdiv 0021  
              ??___lbmod 0021                ??___lldiv 0028                ??___llmod 0028  
              ??___lwdiv 0024              memcpyee@ptr 0024                ??___lwmod 0024  
                 _wWFlow 00B6                   _filter 0F02               _bSaveEECnt 00CB  
                 _tabSeg 0806         __end_of_memcpyee 07EC                ??_pInitAD 0020  
              ??_pInitT0 0020                ??_pInitT1 0020                ??_pInitT2 0020  
              ??_pReadEE 0025     __end_of_eeprom_write 0698                   clrloop 0A5B  
             _fFirstLoad 0384                   saved_w 007E     __end_of_pRunWashFlow 06F1  
   __size_of_pSwitchMode 0008         ___lbdiv@dividend 0021          ___lbmod@divisor 0020  
        ___lbmod@counter 0023          eeprom_read@addr 0020       __size_of_pConLiter 005E  
        ??_pCalWaterFlow 0053       __size_of_pDispProc 01AF           __pcstackCOMMON 0072  
           __pidataBANK0 0000             __pidataBANK1 0000   __size_of_pFlashTimeCtl 000B  
     __size_of_pInitPORT 0014       __size_of_pScanDisp 002B         ___lbdiv@quotient 0023  
     __size_of_pTimeProc 0043       __size_of_pWashFlow 002D       __size_of_pTestMode FFFFFF1C  
      eeprom_write@value 0020       __size_of_pTuneHour 001E               __pbssBANK0 006B  
             __pbssBANK1 00A0               __pbssBANK2 0120       __size_of_key_press 000B  
__size_ofi1_eeprom_write 001A               __pmaintext 0B29                  ?___wmul 0020  
             __pintentry 0004                  ?_filter 0020            _wTestPulseCnt 00B4  
             pConDisp@s0 002A               pConDisp@s1 002B               pConDisp@s2 002C  
              ?_pClrDisp 0072                ?_pConDisp 0027                  _EE_DATA 00D2  
                i1l10411 0000                  i1l10421 0C82                  i1l10413 0C78  
                i1l10423 0000                  i1l10415 0000                  i1l10431 0C8C  
                i1l10425 0C87                  i1l10417 0C7D                  i1l10433 0C9B  
                i1l10441 0000                  i1l10513 0000                  i1l10427 0000  
                i1l10419 0000                  i1l10443 0000                  i1l10603 0000  
                i1l10531 0000                  i1l10453 0000                  i1l10541 0000  
                i1l10533 0000                  i1l10517 0000                  i1l10471 0CD8  
                i1l10463 0000                  i1l10455 0CB5                  i1l10447 0000  
                i1l10551 0000                  i1l10535 0000                  i1l10527 0000  
                i1l10543 0BDB                  i1l10519 0000                  i1l10481 0000  
                i1l10473 0CE5                  i1l10457 0000                  i1l10449 0CAC  
                i1l10561 0000                  i1l10545 0000                  i1l10553 0BE6  
                i1l10529 0BC9                  i1l10537 0BD4                  i1l10459 0CC0  
                i1l10555 0000                  i1l10547 0000                  i1l10539 0000  
                i1l10477 0CF2                  i1l10581 0000                  i1l10573 0000  
                i1l10557 0000                  i1l10549 0000                  i1l10565 0C07  
                i1l10479 0000                  i1l10591 0000                  i1l10575 0000  
                i1l10583 0C23                  i1l10593 0000                  i1l10577 0000  
                i1l10569 0000                  i1l10595 0C49                  i1l10579 0000  
                i1l10597 0000                  i1l10599 0000                  i1l10961 0000  
                i1l10971 0000                  i1l10965 0000                  i1l10957 0000  
                i1l10967 0000                  i1l10959 0000                  i1l10969 0000  
              ?_pInitMCU 0072                ?_pKeyProc 0072                ?_pReadKey 0072  
      __end_of_pConLiter 02AF                ?_pScanKey 0072                ?_eecpymem 0020  
      __end_of_pDispProc 0209            _pFlashTimeCtl 0A62                ?_pRunStep 0072  
      __end_of_pInitPORT 0ABC                ?_pTuneMin 0072         pCalWaterFlow@val 0066  
       pCalWaterFlow@tmp 0061        __end_of_pScanDisp 0CA2                ?_memcpyee 0020  
      __end_of_pTimeProc 0B10        __end_of_pWashFlow 003C                  _bKeyCnt 00C3  
      __end_of_pTestMode 0251                  _bKeyOld 00C5                  _bSetTmp 0079  
  __size_of_eeprom_write 001F                  _bRunCnt 006B                  _fSaveEE 0388  
                ___lbdiv 0218                  ___lbmod 0234                  ___lldiv 02ED  
        __size_of___wmul 0019                  ___llmod 02AF        __end_of_pTuneHour 06BF  
                ___lwdiv 0511                  ___lwmod 053B            ??_pReLoadTime 0020  
        __size_of_filter 008F                  _pInitAD 0AA0                  _pInitT0 0ABC  
                _pInitT1 0AC2                  _pInitT2 0AC4                  _pReadEE 003C  
  __size_of_pRunWashFlow 0008                  _arrFlow 0120             memcpyee@from 0022  
           memcpyee@size 0023               ??_pClrDisp 0020         ??_pEESaveTimeCtl 0020  
             ??_pConDisp 002A             __size_of_isr 00A5               ??_pInitMCU 0020  
      __end_of_key_press 04C0               ??_pKeyProc 0022               ??_pReadKey 0072  
             ??_pScanKey 0075             pConLiter@dat 002D               ??_eecpymem 0023  
         ?_pFlashTimeCtl 0072                  filter@i 0052                  filter@j 0051  
             ??_pRunStep 0020     end_of_initialization 0A8A               ??_pTuneMin 0020  
             ??_memcpyee 0024             _eeprom_write 0679               eecpymem@cp 0024  
             eecpymem@to 0023          ___lldiv@divisor 0020          ___lldiv@counter 002C  
           _pRunWashFlow 06E9         ___lbmod@dividend 0022      __end_of_pReLoadTime 06A1  
            ___lbmod@rem 0024            ??_eeprom_read 0020           i1_eeprom_write 0C5D  
         __end_of___wmul 0B29           __end_of_filter 0F91          ??_pFlashTimeCtl 0020  
    start_initialization 0A6D            ??_pSwitchMode 0020              __end_of_isr 0C5D  
 __end_ofi1_eeprom_write 0C77          ___llmod@divisor 0020                _bFlashCnt 00BF  
              _bKeyHTCnt 00C4          ___llmod@counter 0028                _bFlowIdx2 00C1  
             memcpyee@to 0020    __end_of_pCalWaterFlow 0F02                 ??___wmul 0024  
    __end_of_eeprom_read 059B              __pdataBANK0 006F              __pdataBANK1 00D9  
               ??_filter 0022              _pReLoadTime 0698                _fKeyPress 0386  
              _bRunWashT 00CA                _bPulseCnt 00C8              __pbssCOMMON 0079  
      __size_of_pClrDisp 0015        __size_of_pConDisp 003C            __pcstackBANK0 0020  
      __size_of_pInitMCU 0013        __size_of_pKeyProc 00DE        __size_of_pReadKey 0045  
      __size_of_pScanKey 0015                _pConLiter 0251        __size_of_eecpymem 0025  
       eeprom_write@addr 0021                _pDispProc 005A      __end_of_pSwitchMode 0218  
      __size_of_pRunStep 0007          ?i1_eeprom_write 0072        __size_of_pTuneMin 002A  
              _pInitPORT 0AA8                _pScanDisp 0C77        __size_of_memcpyee 0035  
       ___lwdiv@dividend 0022      i1eeprom_write@value 0072                 ?___lbdiv 0020  
               ?___lbmod 0020                __ptext930 0ACD                __ptext931 0CFC  
              __ptext940 0218                __ptext932 000F                __ptext941 053B  
              __ptext933 059B                __ptext950 06BF                __ptext942 0511  
              __ptext934 003C                __ptext951 06A1                __ptext943 0B10  
              __ptext935 0A8D                __ptext927 005A                __ptext960 0ABC  
              __ptext952 0698                __ptext944 0584                __ptext936 04D5  
              __ptext928 0335                __ptext961 0AA8                __ptext953 0209  
              __ptext945 04B5                __ptext937 02ED                __ptext929 0251  
              __ptext962 0AA0                __ptext954 0210                __ptext946 07B7  
              __ptext938 02AF                __ptext963 04C0                __ptext955 0A52  
              __ptext947 055F                __ptext939 0234                __ptext964 0BB8  
              __ptext956 0A62                __ptext948 0F02                __ptext965 0CA2  
              __ptext957 0679                __ptext949 06E9                __ptext966 0C5D  
              __ptext958 0AC4                __ptext967 0CB7                __ptext959 0AC2  
              __ptext968 0C77                __ptext969 0000                 ?___lldiv 0020  
               ?___llmod 0020                _pTimeProc 0ACD                 ?___lwdiv 0020  
              _pWashFlow 000F                 ?___lwmod 0020                _pTestMode 0335  
               ?_pInitAD 0072                 ?_pInitT0 0072                 ?_pInitT1 0072  
               ?_pInitT2 0072                 ?_pReadEE 0072                __pstrings 0800  
              __pswtext1 07EC                _pTuneHour 06A1              pConDisp@dat 0027  
            pConDisp@dot 0029         ___lwdiv@quotient 0024                _key_press 04B5  
             ?_pConLiter 002D                pReadKey@i 0074               ?_pDispProc 0072  
            pConLiter@s0 0032              pConLiter@s1 0033              pConLiter@s2 0034  
      interrupt_function 0004           ___wmul@product 0024               ?_pInitPORT 0072  
            _eeprom_read 0584               ?_pScanDisp 0072               ?_pTimeProc 0072  
             ?_pWashFlow 0072               ?_pTestMode 0072              __stringbase 0805  
            pDispProc@s0 0036              pDispProc@s1 0037              pDispProc@s2 0035  
      pCalWaterFlow@diff 005F        ___wmul@multiplier 0020               ?_pTuneHour 0072  
              idloc_word 2000                filter@tmp 0048                filter@sum 004D  
            _pSwitchMode 0210               ?_key_press 0072                 _fCalFlow 0381  
               _fCapInit 0382                 _bKeyData 006F                 _bFlowIdx 00C0  
               _bScanCnt 00CC                 _bTestCnt 006E           pSwitchMode@mod 0020  
               _bRunMode 006C         __size_of___lbdiv 001C         __size_of___lbmod 001D  
               _bRunStep 006D         __size_of___lldiv 0048         __size_of___llmod 003E  
       __size_of___lwdiv 002A         __size_of___lwmod 0024          pScanKey@bKeyBuf 0075  
       __size_of_pInitAD 0008         __size_of_pInitT0 0006         __size_of_pInitT1 0002  
       __size_of_pInitT2 0009         __size_of_pReadEE 001E                 _pClrDisp 04C0  
               _fRunWash 0387                 _pConDisp 04D5                 _pInitMCU 0A8D  
               _pKeyProc 059B                 _pReadKey 0CB7       i1eeprom_write@addr 0073  
               _pScanKey 0CA2          ___lwdiv@divisor 0020             eecpymem@from 0020  
               _eecpymem 055F                 _arrFlow2 00A0             eecpymem@size 0022  
        ___lwdiv@counter 0026                 _pRunStep 0209              ??_pConLiter 0032  
            pReadKey@buf 0072           pCalWaterFlow@i 0065                 _pTuneMin 06BF  
            pReadKey@tmp 0073  __size_of_pEESaveTimeCtl 0008              ??_pDispProc 0035  
               _memcpyee 07B7            __size_of_main 008F              ??_pInitPORT 0020  
            ??_pScanDisp 0072                 clear_ram 0A5A            pConLiter@part 0031  
            ??_pTimeProc 0027              ??_pWashFlow 0020              ??_pTestMode 006A  
           ?_pReLoadTime 0072              ??_pTuneHour 0020    __end_of_pFlashTimeCtl 0A6D  
       ??i1_eeprom_write 0073              ??_key_press 0020                 intlevel1 0000  
       ___lwmod@dividend 0022         ___lldiv@dividend 0024                stringcode 0800  
           pTimeProc@tmp 0027               _OPTION_REG 0081         ___lldiv@quotient 0028  
        ___lwmod@divisor 0020          ___lwmod@counter 0024                 stringdir 0800  
               stringtab 0800            pTestMode@stat 006A   __size_of_pCalWaterFlow 0206  
          ?_eeprom_write 0020             ?_eeprom_read 0072          filter@value_buf 0028  
           _bRunWashStep 00C9            ?_pRunWashFlow 0072  
